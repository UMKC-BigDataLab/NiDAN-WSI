Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 08:09:01 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:09:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:09:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:09:16 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 08:09:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:09:29 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522080918-0434).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.407717522 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.459728717 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.687228101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=========================>                             (54 + 61) / 115][Stage 2:==========================>                            (55 + 60) / 115][Stage 2:============================>                          (59 + 56) / 115][Stage 2:==============================>                        (63 + 52) / 115][Stage 2:=================================>                     (71 + 44) / 115][Stage 2:======================================>                (80 + 35) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:==============================================>        (98 + 17) / 115][Stage 2:=====================================================> (112 + 3) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:==============================>                        (65 + 51) / 116][Stage 3:================================>                      (69 + 47) / 116][Stage 3:==================================>                    (72 + 44) / 116][Stage 3:=========================================>             (87 + 29) / 116][Stage 3:============================================>          (94 + 22) / 116][Stage 3:=============================================>         (97 + 19) / 116][Stage 3:================================================>     (104 + 12) / 116][Stage 3:====================================================>  (110 + 6) / 116][Stage 3:=====================================================> (113 + 3) / 116][Stage 3:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.153627403 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.575757225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==================================>                    (71 + 42) / 113][Stage 4:====================================>                  (75 + 38) / 113][Stage 4:=====================================>                 (78 + 35) / 113][Stage 4:========================================>              (84 + 29) / 113][Stage 4:=============================================>         (94 + 19) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:==================================>                    (72 + 42) / 114][Stage 5:========================================>              (84 + 30) / 114][Stage 5:===========================================>           (90 + 24) / 114][Stage 5:============================================>          (93 + 21) / 114][Stage 5:===============================================>      (101 + 13) / 114][Stage 5:===================================================>   (107 + 7) / 114][Stage 5:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.680804396 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.686275411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=========================>                             (56 + 65) / 121][Stage 6:===========================>                           (60 + 61) / 121][Stage 6:============================>                          (62 + 59) / 121][Stage 6:===============================>                       (69 + 52) / 121][Stage 6:===================================>                   (77 + 44) / 121][Stage 6:=========================================>             (92 + 29) / 121][Stage 6:===============================================>      (106 + 15) / 121][Stage 6:======================================================>(119 + 2) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:============================>                          (63 + 59) / 122][Stage 7:=================================>                     (75 + 47) / 122][Stage 7:======================================>                (85 + 37) / 122][Stage 7:============================================>          (99 + 23) / 122][Stage 7:====================================================>  (116 + 6) / 122][Stage 7:======================================================>(120 + 2) / 122][Stage 7:======================================================>(121 + 1) / 122][Stage 7:=======================================================(122 + 0) / 122]                                                                                Time elapsed: 4.894637212 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.623085608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 60) / 120][Stage 8:=============================>                         (64 + 56) / 120][Stage 8:=================================>                     (72 + 48) / 120][Stage 8:==========================================>            (92 + 28) / 120][Stage 8:===============================================>      (105 + 15) / 120][Stage 8:====================================================>  (115 + 5) / 120][Stage 8:======================================================>(119 + 1) / 120]                                                                                [Stage 9:===========================>                           (60 + 61) / 121][Stage 9:============================>                          (62 + 59) / 121][Stage 9:==================================>                    (76 + 45) / 121][Stage 9:==========================================>            (93 + 28) / 121][Stage 9:================================================>     (108 + 13) / 121][Stage 9:====================================================>  (116 + 5) / 121]                                                                                Time elapsed: 4.00158431 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.565330379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (59 + 54) / 113][Stage 10:=============================>                        (62 + 51) / 113][Stage 10:=================================>                    (71 + 42) / 113][Stage 10:========================================>             (85 + 28) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:====================================================> (109 + 4) / 113][Stage 10:=====================================================>(111 + 2) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:================================>                     (68 + 46) / 114][Stage 11:=====================================>                (79 + 35) / 114][Stage 11:==========================================>           (89 + 25) / 114][Stage 11:==============================================>       (98 + 16) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.454589962 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.563375894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===============================>                      (67 + 48) / 115][Stage 12:======================================>               (81 + 34) / 115][Stage 12:===========================================>          (93 + 22) / 115][Stage 12:=============================================>        (97 + 18) / 115][Stage 12:==================================================>   (108 + 7) / 115]                                                                                [Stage 13:================================>                     (69 + 47) / 116][Stage 13:=====================================>                (80 + 36) / 116][Stage 13:==========================================>           (92 + 24) / 116][Stage 13:=============================================>        (98 + 18) / 116][Stage 13:===============================================>     (105 + 11) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.871190258 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562868174 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:============================>                         (63 + 58) / 121][Stage 14:=================================>                    (76 + 45) / 121][Stage 14:===========================================>          (97 + 24) / 121][Stage 14:==================================================>   (113 + 8) / 121][Stage 14:=====================================================>(119 + 2) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:===========================>                          (62 + 60) / 122][Stage 15:=================================>                    (75 + 47) / 122][Stage 15:=========================================>            (93 + 29) / 122][Stage 15:==============================================>      (107 + 15) / 122][Stage 15:===================================================>  (116 + 6) / 122][Stage 15:=====================================================>(120 + 2) / 122][Stage 15:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.302214534 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469217552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=================================>                    (71 + 42) / 113][Stage 16:==========================================>           (88 + 25) / 113][Stage 16:==============================================>       (97 + 16) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:====================================>                 (78 + 36) / 114][Stage 17:========================================>             (86 + 28) / 114][Stage 17:============================================>         (94 + 20) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.341433134 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470248595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (70 + 43) / 113][Stage 18:======================================>               (80 + 33) / 113][Stage 18:==========================================>           (88 + 25) / 113][Stage 18:===============================================>      (99 + 14) / 113][Stage 18:=================================================>    (104 + 9) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:===================================>                  (75 + 39) / 114][Stage 19:=======================================>              (83 + 31) / 114][Stage 19:============================================>         (93 + 21) / 114][Stage 19:===============================================>     (102 + 12) / 114][Stage 19:==================================================>   (106 + 8) / 114][Stage 19:===================================================>  (109 + 5) / 114][Stage 19:====================================================> (110 + 4) / 114][Stage 19:====================================================> (111 + 3) / 114][Stage 19:=====================================================>(112 + 2) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.406607337 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527056963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=============================>                        (62 + 53) / 115][Stage 20:==================================>                   (74 + 41) / 115][Stage 20:===========================================>          (93 + 22) / 115][Stage 20:=================================================>    (106 + 9) / 115][Stage 20:===================================================>  (109 + 6) / 115][Stage 20:=====================================================>(114 + 1) / 115]                                                                                [Stage 21:=================================>                    (71 + 45) / 116][Stage 21:=======================================>              (84 + 32) / 116][Stage 21:=============================================>        (97 + 19) / 116][Stage 21:================================================>    (106 + 10) / 116][Stage 21:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.434866619 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.636283265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (71 + 47) / 118][Stage 22:======================================>               (85 + 33) / 118][Stage 22:=============================================>       (101 + 17) / 118][Stage 22:===================================================>  (112 + 6) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:===============================>                      (69 + 50) / 119][Stage 23:====================================>                 (80 + 39) / 119][Stage 23:============================================>         (98 + 21) / 119][Stage 23:===================================================>  (114 + 5) / 119][Stage 23:====================================================> (115 + 4) / 119][Stage 23:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.132600965 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466142305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:================================>                     (72 + 46) / 118][Stage 24:=================================>                    (73 + 45) / 118][Stage 24:=====================================>                (81 + 37) / 118][Stage 24:===========================================>          (95 + 23) / 118][Stage 24:==============================================>      (103 + 15) / 118][Stage 24:===================================================>  (113 + 5) / 118][Stage 24:=====================================================>(117 + 1) / 118]                                                                                [Stage 25:=================================>                    (73 + 46) / 119][Stage 25:====================================>                 (81 + 38) / 119][Stage 25:==========================================>           (94 + 25) / 119][Stage 25:================================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.538943272 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455594558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:==================================>                   (76 + 42) / 118][Stage 26:=========================================>            (91 + 27) / 118][Stage 26:============================================>         (98 + 20) / 118][Stage 26:=================================================>    (109 + 9) / 118][Stage 26:====================================================> (115 + 3) / 118][Stage 26:=====================================================>(117 + 1) / 118]                                                                                [Stage 27:=================================>                    (74 + 45) / 119][Stage 27:====================================>                 (80 + 39) / 119][Stage 27:========================================>             (89 + 30) / 119][Stage 27:=============================================>       (103 + 16) / 119][Stage 27:====================================================> (115 + 4) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.161729225 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497930149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:================================>                     (72 + 48) / 120][Stage 28:===========================================>          (97 + 23) / 120][Stage 28:================================================>    (109 + 11) / 120][Stage 28:====================================================> (117 + 3) / 120]                                                                                [Stage 29:===========================>                          (62 + 59) / 121][Stage 29:=============================>                        (66 + 55) / 121][Stage 29:=========================================>            (92 + 29) / 121][Stage 29:================================================>    (110 + 11) / 121][Stage 29:===================================================>  (115 + 6) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.033937517 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511788944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:===========================>                          (62 + 59) / 121][Stage 30:===============================>                      (70 + 51) / 121][Stage 30:========================================>             (90 + 31) / 121][Stage 30:===================================================>  (116 + 5) / 121]                                                                                [Stage 31:===========================>                          (62 + 60) / 122][Stage 31:================================>                     (74 + 48) / 122][Stage 31:========================================>             (91 + 31) / 122][Stage 31:==================================================>   (113 + 9) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.692243255 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487369342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:============================>                         (63 + 57) / 120][Stage 32:======================================>               (86 + 34) / 120][Stage 32:===================================================>  (115 + 5) / 120]                                                                                [Stage 33:============================>                         (64 + 57) / 121][Stage 33:===============================>                      (71 + 50) / 121][Stage 33:=====================================>                (84 + 37) / 121][Stage 33:=============================================>       (105 + 16) / 121][Stage 33:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.261941643 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509569079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (62 + 58) / 120][Stage 34:==============================>                       (68 + 52) / 120][Stage 34:==========================================>           (94 + 26) / 120][Stage 34:===================================================>  (114 + 6) / 120][Stage 34:=====================================================>(119 + 1) / 120]                                                                                [Stage 35:===========================>                          (61 + 60) / 121][Stage 35:============================>                         (64 + 57) / 121][Stage 35:====================================>                 (82 + 39) / 121][Stage 35:==============================================>      (107 + 14) / 121][Stage 35:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.239915527 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527216065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=================================>                    (70 + 43) / 113][Stage 36:======================================>               (81 + 32) / 113][Stage 36:===========================================>          (92 + 21) / 113][Stage 36:===============================================>     (101 + 12) / 113][Stage 36:=================================================>    (104 + 9) / 113][Stage 36:====================================================> (109 + 4) / 113]                                                                                [Stage 37:=====================================>                (79 + 35) / 114][Stage 37:===========================================>          (91 + 23) / 114][Stage 37:==============================================>       (98 + 16) / 114][Stage 37:==================================================>   (106 + 8) / 114][Stage 37:====================================================> (110 + 4) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.473510424 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458488788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===================================>                  (74 + 39) / 113][Stage 38:========================================>             (85 + 28) / 113][Stage 38:==============================================>       (97 + 16) / 113][Stage 38:=================================================>    (104 + 9) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:========================================>             (85 + 29) / 114][Stage 39:=============================================>        (95 + 19) / 114][Stage 39:===============================================>     (103 + 11) / 114][Stage 39:===================================================>  (109 + 5) / 114][Stage 39:=====================================================>(112 + 2) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.452696022 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456642623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===============================>                      (67 + 48) / 115][Stage 40:======================================>               (81 + 34) / 115][Stage 40:==============================================>       (99 + 16) / 115][Stage 40:===================================================>  (110 + 5) / 115][Stage 40:=====================================================>(113 + 2) / 115]                                                                                [Stage 41:==============================>                       (65 + 51) / 116][Stage 41:==================================>                   (75 + 41) / 116][Stage 41:========================================>             (88 + 28) / 116][Stage 41:==============================================>      (102 + 14) / 116][Stage 41:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.100717592 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425536302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:======================================>               (83 + 32) / 115][Stage 42:===========================================>          (92 + 23) / 115][Stage 42:===================================================>  (110 + 5) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:=========================================>            (89 + 27) / 116][Stage 43:===============================================>     (103 + 13) / 116][Stage 43:===================================================>  (110 + 6) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.778698899 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401518781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===================================>                  (74 + 39) / 113][Stage 44:========================================>             (85 + 28) / 113][Stage 44:============================================>         (93 + 20) / 113][Stage 44:===============================================>     (101 + 12) / 113][Stage 44:===================================================>  (108 + 5) / 113]                                                                                [Stage 45:======================================>               (82 + 32) / 114][Stage 45:===========================================>          (91 + 23) / 114][Stage 45:================================================>    (104 + 10) / 114][Stage 45:===================================================>  (109 + 5) / 114][Stage 45:====================================================> (110 + 4) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.718857357 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413202851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (72 + 46) / 118][Stage 46:==================================>                   (75 + 43) / 118][Stage 46:====================================>                 (80 + 38) / 118][Stage 46:========================================>             (89 + 29) / 118][Stage 46:=============================================>       (101 + 17) / 118][Stage 46:====================================================> (115 + 3) / 118][Stage 46:=====================================================>(117 + 1) / 118]                                                                                [Stage 47:=================================>                    (74 + 45) / 119][Stage 47:==================================>                   (75 + 44) / 119][Stage 47:========================================>             (89 + 30) / 119][Stage 47:==========================================>           (94 + 25) / 119][Stage 47:================================================>    (108 + 11) / 119][Stage 47:==================================================>   (111 + 8) / 119][Stage 47:====================================================> (115 + 4) / 119][Stage 47:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.467082578 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476262735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (71 + 44) / 115][Stage 48:=======================================>              (85 + 30) / 115][Stage 48:==============================================>       (98 + 17) / 115][Stage 48:===================================================>  (110 + 5) / 115]                                                                                [Stage 49:================================>                     (70 + 46) / 116][Stage 49:===========================================>          (94 + 22) / 116][Stage 49:===============================================>     (103 + 13) / 116][Stage 49:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.978235041 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395325665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=====================================>                (80 + 35) / 115][Stage 50:========================================>             (86 + 29) / 115][Stage 50:==============================================>      (100 + 15) / 115][Stage 50:====================================================> (112 + 3) / 115]                                                                                [Stage 51:=========================================>            (90 + 26) / 116][Stage 51:==============================================>      (102 + 14) / 116][Stage 51:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.707012219 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460309213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:===============================>                      (65 + 48) / 113][Stage 52:=======================================>              (83 + 30) / 113][Stage 52:==============================================>      (100 + 13) / 113][Stage 52:===================================================>  (108 + 5) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:===========================>                          (59 + 55) / 114][Stage 53:==============================>                       (64 + 50) / 114][Stage 53:======================================>               (82 + 32) / 114][Stage 53:==============================================>      (100 + 14) / 114][Stage 53:=====================================================>(112 + 2) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.633712103 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430219076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==============================>                       (65 + 50) / 115][Stage 54:==================================>                   (74 + 41) / 115][Stage 54:==========================================>           (91 + 24) / 115][Stage 54:===============================================>     (104 + 11) / 115][Stage 54:====================================================> (112 + 3) / 115]                                                                                [Stage 55:====================================>                 (78 + 38) / 116][Stage 55:============================================>         (95 + 21) / 116][Stage 55:===============================================>     (105 + 11) / 116][Stage 55:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.036537356 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377427559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=======================================>              (84 + 31) / 115][Stage 56:==============================================>       (99 + 16) / 115][Stage 56:==================================================>   (108 + 7) / 115]                                                                                [Stage 57:======================================>               (82 + 34) / 116][Stage 57:==========================================>           (91 + 25) / 116][Stage 57:=============================================>        (98 + 18) / 116][Stage 57:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.925764864 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388398588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:====================================>                 (76 + 37) / 113][Stage 58:=========================================>            (86 + 27) / 113][Stage 58:=============================================>        (96 + 17) / 113][Stage 58:==================================================>   (105 + 8) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:========================================>             (86 + 28) / 114][Stage 59:===========================================>          (92 + 22) / 114][Stage 59:==================================================>   (106 + 8) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.224155706 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399374756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==================================>                   (73 + 40) / 113][Stage 60:========================================>             (84 + 29) / 113][Stage 60:===========================================>          (92 + 21) / 113][Stage 60:===============================================>     (101 + 12) / 113][Stage 60:====================================================> (110 + 3) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:========================================>             (85 + 29) / 114][Stage 61:=============================================>        (95 + 19) / 114][Stage 61:==================================================>   (107 + 7) / 114][Stage 61:====================================================> (111 + 3) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.312550557 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374168411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (81 + 34) / 115][Stage 62:========================================>             (87 + 28) / 115][Stage 62:==============================================>      (101 + 14) / 115][Stage 62:====================================================> (112 + 3) / 115]                                                                                [Stage 63:========================================>             (86 + 30) / 116][Stage 63:===========================================>          (94 + 22) / 116][Stage 63:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.614921508 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448942145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:=============================>                        (66 + 54) / 120][Stage 64:======================================>               (85 + 35) / 120][Stage 64:================================================>    (110 + 10) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:=============================>                        (66 + 55) / 121][Stage 65:=======================================>              (88 + 33) / 121][Stage 65:===============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.214666206 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459266672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=============================>                        (61 + 52) / 113][Stage 66:==================================>                   (73 + 40) / 113][Stage 66:===========================================>          (90 + 23) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:==============================>                       (65 + 49) / 114][Stage 67:====================================>                 (76 + 38) / 114][Stage 67:============================================>         (94 + 20) / 114][Stage 67:==================================================>   (107 + 7) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.378749973 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387020505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (70 + 43) / 113][Stage 68:=======================================>              (83 + 30) / 113][Stage 68:=============================================>        (95 + 18) / 113][Stage 68:=================================================>    (104 + 9) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:======================================>               (82 + 32) / 114][Stage 69:===========================================>          (92 + 22) / 114][Stage 69:================================================>    (104 + 10) / 114][Stage 69:====================================================> (110 + 4) / 114][Stage 69:=====================================================>(112 + 2) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.397656442 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452058874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==========================>                           (60 + 61) / 121][Stage 70:============================>                         (64 + 57) / 121][Stage 70:==================================>                   (78 + 43) / 121][Stage 70:===========================================>          (97 + 24) / 121][Stage 70:===================================================>  (115 + 6) / 121]                                                                                [Stage 71:===========================>                          (62 + 60) / 122][Stage 71:==================================>                   (78 + 44) / 122][Stage 71:==========================================>           (96 + 26) / 122][Stage 71:==================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.42247667 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449979289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:================================>                     (67 + 46) / 113][Stage 72:============================================>         (93 + 20) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:=============================>                        (62 + 52) / 114][Stage 73:=================================>                    (71 + 43) / 114][Stage 73:===========================================>          (92 + 22) / 114][Stage 73:====================================================> (111 + 3) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.430699653 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432597664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===============================>                      (67 + 48) / 115][Stage 74:=======================================>              (84 + 31) / 115][Stage 74:==============================================>       (99 + 16) / 115][Stage 74:===================================================>  (110 + 5) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:=================================>                    (71 + 45) / 116][Stage 75:========================================>             (88 + 28) / 116][Stage 75:===============================================>     (103 + 13) / 116][Stage 75:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.784275815 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370011842 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=====================================>                (80 + 35) / 115][Stage 76:==========================================>           (90 + 25) / 115][Stage 76:=================================================>    (106 + 9) / 115][Stage 76:====================================================> (111 + 4) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:=========================================>            (89 + 27) / 116][Stage 77:============================================>         (96 + 20) / 116][Stage 77:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.861409917 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424194123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (60 + 53) / 113][Stage 78:===================================>                  (74 + 39) / 113][Stage 78:==============================================>      (100 + 13) / 113][Stage 78:==================================================>   (106 + 7) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:===============================>                      (66 + 48) / 114][Stage 79:=======================================>              (83 + 31) / 114][Stage 79:==============================================>       (99 + 15) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.307220337 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424092223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:=============================>                        (67 + 54) / 121][Stage 80:====================================>                 (82 + 39) / 121][Stage 80:=============================================>       (103 + 18) / 121][Stage 80:====================================================> (118 + 3) / 121]                                                                                [Stage 81:===========================>                          (63 + 59) / 122][Stage 81:===================================>                  (80 + 42) / 122][Stage 81:===========================================>         (100 + 22) / 122][Stage 81:==================================================>   (113 + 9) / 122][Stage 81:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.395818629 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=5", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=5,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39599049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==================================>                   (74 + 41) / 115][Stage 82:============================================>         (94 + 21) / 115][Stage 82:==================================================>   (107 + 8) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:================================>                     (70 + 46) / 116][Stage 83:======================================>               (83 + 33) / 116][Stage 83:==============================================>       (99 + 17) / 116][Stage 83:===================================================>  (111 + 5) / 116][Stage 83:=====================================================>(114 + 2) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.010091448 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407070418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (70 + 45) / 115][Stage 84:======================================>               (83 + 32) / 115][Stage 84:==============================================>       (99 + 16) / 115][Stage 84:=================================================>    (106 + 9) / 115][Stage 84:===================================================>  (110 + 5) / 115][Stage 84:=====================================================>(113 + 2) / 115]                                                                                [Stage 85:================================>                     (69 + 47) / 116][Stage 85:====================================>                 (78 + 38) / 116][Stage 85:===========================================>          (94 + 22) / 116][Stage 85:================================================>    (106 + 10) / 116][Stage 85:====================================================> (113 + 3) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.41042965 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491734959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:====================================>                 (76 + 37) / 113][Stage 86:==========================================>           (88 + 25) / 113][Stage 86:==============================================>       (98 + 15) / 113][Stage 86:==================================================>   (105 + 8) / 113][Stage 86:====================================================> (110 + 3) / 113]                                                                                [Stage 87:====================================>                 (77 + 37) / 114][Stage 87:========================================>             (85 + 29) / 114][Stage 87:==============================================>      (100 + 14) / 114][Stage 87:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.078373328 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356936508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:======================================>               (82 + 33) / 115][Stage 88:===========================================>          (93 + 22) / 115][Stage 88:==================================================>   (107 + 8) / 115]                                                                                [Stage 89:=======================================>              (84 + 32) / 116][Stage 89:=========================================>            (89 + 27) / 116][Stage 89:===============================================>     (103 + 13) / 116][Stage 89:==================================================>   (109 + 7) / 116][Stage 89:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.977049248 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367754817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===================================>                  (74 + 39) / 113][Stage 90:========================================>             (85 + 28) / 113][Stage 90:===========================================>          (91 + 22) / 113][Stage 90:==================================================>   (106 + 7) / 113][Stage 90:===================================================>  (108 + 5) / 113][Stage 90:=====================================================>(111 + 2) / 113]                                                                                [Stage 91:=======================================>              (84 + 30) / 114][Stage 91:============================================>         (94 + 20) / 114][Stage 91:===============================================>     (102 + 12) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.147608051 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383219058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:===================================>                  (78 + 40) / 118][Stage 92:======================================>               (85 + 33) / 118][Stage 92:==========================================>           (93 + 25) / 118][Stage 92:=================================================>    (109 + 9) / 118][Stage 92:=====================================================>(117 + 1) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:===================================>                  (79 + 40) / 119][Stage 93:=======================================>              (87 + 32) / 119][Stage 93:=========================================>            (92 + 27) / 119][Stage 93:==================================================>   (111 + 8) / 119][Stage 93:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.10322144 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371713668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (80 + 33) / 113][Stage 94:===========================================>          (90 + 23) / 113][Stage 94:=================================================>    (104 + 9) / 113][Stage 94:====================================================> (110 + 3) / 113]                                                                                [Stage 95:====================================>                 (77 + 37) / 114][Stage 95:===========================================>          (92 + 22) / 114][Stage 95:===============================================>     (103 + 11) / 114][Stage 95:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.852117305 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390084315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (74 + 44) / 118][Stage 96:=====================================>                (81 + 37) / 118][Stage 96:============================================>         (98 + 20) / 118][Stage 96:====================================================> (115 + 3) / 118]                                                                                [Stage 97:=================================>                    (74 + 45) / 119][Stage 97:=======================================>              (87 + 32) / 119][Stage 97:============================================>        (100 + 19) / 119][Stage 97:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.153088489 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393285764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (69 + 46) / 115][Stage 98:====================================>                 (78 + 37) / 115][Stage 98:========================================>             (87 + 28) / 115][Stage 98:==============================================>      (101 + 14) / 115][Stage 98:==================================================>   (108 + 7) / 115][Stage 98:===================================================>  (110 + 5) / 115]                                                                                [Stage 99:==================================>                   (74 + 42) / 116][Stage 99:======================================>               (83 + 33) / 116][Stage 99:============================================>         (95 + 21) / 116][Stage 99:================================================>    (106 + 10) / 116][Stage 99:==================================================>   (108 + 8) / 116][Stage 99:====================================================> (112 + 4) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.103075234 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398910499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (61 + 52) / 113][Stage 100:=================================>                   (71 + 42) / 113][Stage 100:========================================>            (86 + 27) / 113][Stage 100:=================================================>   (106 + 7) / 113]                                                                                [Stage 101:===========================>                         (59 + 55) / 114][Stage 101:==============================>                      (66 + 48) / 114][Stage 101:=======================================>             (84 + 30) / 114][Stage 101:==============================================>     (102 + 12) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.64341089 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504898316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:==============================>                      (65 + 48) / 113][Stage 102:====================================>                (77 + 36) / 113][Stage 102:==============================================>     (100 + 13) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:=============================>                       (63 + 51) / 114][Stage 103:====================================>                (79 + 35) / 114][Stage 103:============================================>        (95 + 19) / 114][Stage 103:==================================================>  (109 + 5) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.651855133 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376675161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:==================================>                  (76 + 42) / 118][Stage 104:======================================>              (85 + 33) / 118][Stage 104:===========================================>         (97 + 21) / 118][Stage 104:===================================================> (115 + 3) / 118][Stage 104:====================================================>(117 + 1) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:================================>                    (74 + 45) / 119][Stage 105:====================================>                (83 + 36) / 119][Stage 105:========================================>            (90 + 29) / 119][Stage 105:=============================================>      (105 + 14) / 119][Stage 105:===================================================> (115 + 4) / 119][Stage 105:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.310054691 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435674456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=================================>                   (73 + 42) / 115][Stage 106:========================================>            (87 + 28) / 115][Stage 106:============================================>        (96 + 19) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:==================================>                  (76 + 40) / 116][Stage 107:==========================================>          (94 + 22) / 116][Stage 107:==============================================>     (104 + 12) / 116][Stage 107:==================================================>  (111 + 5) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.085617874 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=176", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=176,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43709104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 60) / 120][Stage 108:============================>                        (65 + 55) / 120][Stage 108:=====================================>               (84 + 36) / 120][Stage 108:==============================================>     (108 + 12) / 120][Stage 108:====================================================>(118 + 2) / 120]                                                                                [Stage 109:==========================>                          (61 + 60) / 121][Stage 109:=============================>                       (67 + 54) / 121][Stage 109:===================================>                 (81 + 40) / 121][Stage 109:==============================================>     (109 + 12) / 121][Stage 109:===================================================> (118 + 3) / 121][Stage 109:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.423426164 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378933908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (73 + 45) / 118][Stage 110:===================================>                 (78 + 40) / 118][Stage 110:==========================================>          (94 + 24) / 118][Stage 110:===============================================>    (108 + 10) / 118][Stage 110:===================================================> (115 + 3) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:==================================>                  (77 + 42) / 119][Stage 111:==========================================>          (95 + 24) / 119][Stage 111:=================================================>   (111 + 8) / 119][Stage 111:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.308690886 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413191717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:===============================>                     (71 + 50) / 121][Stage 112:======================================>              (89 + 32) / 121][Stage 112:==============================================>     (109 + 12) / 121][Stage 112:====================================================>(120 + 1) / 121]                                                                                [Stage 113:========================>                            (57 + 65) / 122][Stage 113:============================>                        (66 + 56) / 122][Stage 113:====================================>                (83 + 39) / 122][Stage 113:============================================>       (104 + 18) / 122][Stage 113:===================================================> (119 + 3) / 122][Stage 113:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.318873495 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377315004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==============================>                      (67 + 48) / 115][Stage 114:===================================>                 (78 + 37) / 115][Stage 114:============================================>        (97 + 18) / 115][Stage 114:==================================================>  (109 + 6) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:===============================>                     (69 + 47) / 116][Stage 115:=======================================>             (86 + 30) / 116][Stage 115:=============================================>       (99 + 17) / 116][Stage 115:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.786822048 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375837101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==================================>                  (74 + 41) / 115][Stage 116:=========================================>           (89 + 26) / 115][Stage 116:============================================>        (97 + 18) / 115][Stage 116:=================================================>   (108 + 7) / 115]                                                                                [Stage 117:=================================>                   (74 + 42) / 116][Stage 117:=====================================>               (83 + 33) / 116][Stage 117:===========================================>         (96 + 20) / 116][Stage 117:=================================================>   (109 + 7) / 116][Stage 117:===================================================> (112 + 4) / 116][Stage 117:===================================================> (113 + 3) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.394532823 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338800484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:======================================>              (83 + 32) / 115][Stage 118:===========================================>         (94 + 21) / 115][Stage 118:==================================================>  (109 + 6) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:======================================>              (84 + 32) / 116][Stage 119:========================================>            (89 + 27) / 116][Stage 119:=============================================>      (101 + 15) / 116][Stage 119:==================================================>  (110 + 6) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.915273906 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340313228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=======================================>             (86 + 29) / 115][Stage 120:============================================>        (96 + 19) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:==========================================>          (93 + 23) / 116][Stage 121:=================================================>   (108 + 8) / 116][Stage 121:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.489067035 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380211092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:================================>                    (73 + 45) / 118][Stage 122:======================================>              (85 + 33) / 118][Stage 122:============================================>       (101 + 17) / 118][Stage 122:====================================================>(117 + 1) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:==================================>                  (77 + 42) / 119][Stage 123:=======================================>             (89 + 30) / 119][Stage 123:==============================================>     (106 + 13) / 119][Stage 123:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.135932164 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334880774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=====================================>               (81 + 34) / 115][Stage 124:=========================================>           (89 + 26) / 115][Stage 124:==============================================>     (103 + 12) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:=====================================>               (83 + 33) / 116][Stage 125:==========================================>          (94 + 22) / 116][Stage 125:================================================>    (107 + 9) / 116][Stage 125:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.567932443 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397475797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:==============================>                      (70 + 50) / 120][Stage 126:========================================>            (92 + 28) / 120][Stage 126:===================================================> (116 + 4) / 120]                                                                                [Stage 127:============================>                        (65 + 56) / 121][Stage 127:=================================>                   (76 + 45) / 121][Stage 127:==========================================>          (98 + 23) / 121][Stage 127:==================================================>  (115 + 6) / 121][Stage 127:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.203341483 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403685373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:============================>                        (65 + 55) / 120][Stage 128:====================================>                (82 + 38) / 120][Stage 128:==========================================>          (96 + 24) / 120][Stage 128:====================================================>(118 + 2) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:=============================>                       (67 + 54) / 121][Stage 129:====================================>                (83 + 38) / 121][Stage 129:=============================================>      (107 + 14) / 121][Stage 129:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.139847098 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401057927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:==============================>                      (68 + 52) / 120][Stage 130:=====================================>               (84 + 36) / 120][Stage 130:==============================================>     (107 + 13) / 120][Stage 130:====================================================>(119 + 1) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:===============================>                     (73 + 48) / 121][Stage 131:====================================>                (84 + 37) / 121][Stage 131:==============================================>     (108 + 13) / 121][Stage 131:===================================================> (117 + 4) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.417090355 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345290802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:====================================>                (80 + 35) / 115][Stage 132:=======================================>             (86 + 29) / 115][Stage 132:=============================================>       (99 + 16) / 115][Stage 132:==================================================>  (110 + 5) / 115][Stage 132:====================================================>(113 + 2) / 115]                                                                                [Stage 133:======================================>              (84 + 32) / 116][Stage 133:=========================================>           (91 + 25) / 116][Stage 133:==============================================>     (103 + 13) / 116][Stage 133:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.789964467 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406512762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 61) / 121][Stage 134:==============================>                      (69 + 52) / 121][Stage 134:=======================================>             (91 + 30) / 121][Stage 134:=================================================>   (113 + 8) / 121][Stage 134:====================================================>(120 + 1) / 121]                                                                                [Stage 135:==========================>                          (61 + 61) / 122][Stage 135:=============================>                       (67 + 55) / 122][Stage 135:===================================>                 (82 + 40) / 122][Stage 135:==============================================>     (108 + 14) / 122][Stage 135:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.531111785 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368579543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:>                                                      (0 + 0) / 118][Stage 136:================================>                    (72 + 46) / 118][Stage 136:===================================>                 (78 + 40) / 118][Stage 136:========================================>            (91 + 27) / 118][Stage 136:===============================================>    (108 + 10) / 118][Stage 136:===================================================> (114 + 4) / 118]                                                                                [Stage 137:==================================>                  (77 + 42) / 119][Stage 137:=======================================>             (88 + 31) / 119][Stage 137:=============================================>      (103 + 16) / 119][Stage 137:====================================================>(117 + 2) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.62453055 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360827743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:=================================>                   (75 + 43) / 118][Stage 138:=====================================>               (84 + 34) / 118][Stage 138:==========================================>          (95 + 23) / 118][Stage 138:=================================================>   (111 + 7) / 118][Stage 138:====================================================>(117 + 1) / 118]                                                                                [Stage 139:================================>                    (74 + 45) / 119][Stage 139:==================================>                  (78 + 41) / 119][Stage 139:=======================================>             (88 + 31) / 119][Stage 139:==============================================>     (107 + 12) / 119][Stage 139:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.39823014 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381549657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:============================>                        (61 + 52) / 113][Stage 140:====================================>                (78 + 35) / 113][Stage 140:=========================================>           (89 + 24) / 113][Stage 140:================================================>    (104 + 9) / 113]                                                                                [Stage 141:===========================>                         (59 + 55) / 114][Stage 141:=================================>                   (73 + 41) / 114][Stage 141:===========================================>         (93 + 21) / 114][Stage 141:==================================================>  (108 + 6) / 114][Stage 141:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.220141856 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333694832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:======================================>              (83 + 32) / 115][Stage 142:===========================================>         (94 + 21) / 115][Stage 142:==================================================>  (109 + 6) / 115]                                                                                [Stage 143:======================================>              (84 + 32) / 116][Stage 143:==========================================>          (93 + 23) / 116][Stage 143:===============================================>    (105 + 11) / 116][Stage 143:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.542712906 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335530297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (82 + 33) / 115][Stage 144:=============================================>       (98 + 17) / 115][Stage 144:==================================================>  (110 + 5) / 115]                                                                                [Stage 145:=====================================>               (82 + 34) / 116][Stage 145:=======================================>             (87 + 29) / 116][Stage 145:===============================================>    (106 + 10) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.498226171 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380232654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==============================>                      (67 + 48) / 115][Stage 146:==================================>                  (74 + 41) / 115][Stage 146:============================================>        (97 + 18) / 115][Stage 146:===============================================>    (105 + 10) / 115][Stage 146:===================================================> (112 + 3) / 115][Stage 146:====================================================>(114 + 1) / 115]                                                                                [Stage 147:===============================>                     (68 + 48) / 116][Stage 147:=====================================>               (81 + 35) / 116][Stage 147:===========================================>         (95 + 21) / 116][Stage 147:=============================================>      (101 + 15) / 116][Stage 147:===============================================>    (106 + 10) / 116][Stage 147:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 5.269264918 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368853145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (73 + 45) / 118][Stage 148:====================================>                (82 + 36) / 118][Stage 148:==========================================>          (94 + 24) / 118][Stage 148:==============================================>     (105 + 13) / 118][Stage 148:====================================================>(116 + 2) / 118]                                                                                [Stage 149:================================>                    (73 + 46) / 119][Stage 149:==================================>                  (78 + 41) / 119][Stage 149:=========================================>           (93 + 26) / 119][Stage 149:==============================================>     (107 + 12) / 119][Stage 149:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.410190978 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39364679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:===============================>                     (71 + 49) / 120][Stage 150:====================================>                (83 + 37) / 120][Stage 150:=============================================>      (106 + 14) / 120][Stage 150:===================================================> (117 + 3) / 120]                                                                                [Stage 151:=============================>                       (67 + 54) / 121][Stage 151:================================>                    (74 + 47) / 121][Stage 151:===========================================>         (99 + 22) / 121][Stage 151:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.320228705 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398362963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (62 + 58) / 120][Stage 152:================================>                    (74 + 46) / 120][Stage 152:=========================================>           (93 + 27) / 120][Stage 152:=================================================>   (112 + 8) / 120][Stage 152:=====================================================(120 + 0) / 120]                                                                                [Stage 153:==========================>                          (61 + 60) / 121][Stage 153:==============================>                      (70 + 51) / 121][Stage 153:======================================>              (87 + 34) / 121][Stage 153:=============================================>      (106 + 15) / 121][Stage 153:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.296949245 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378965652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==================================>                  (74 + 41) / 115][Stage 154:========================================>            (88 + 27) / 115][Stage 154:=================================================>   (108 + 7) / 115][Stage 154:====================================================>(113 + 2) / 115][Stage 154:====================================================>(114 + 1) / 115]                                                                                [Stage 155:=================================>                   (73 + 43) / 116][Stage 155:==========================================>          (93 + 23) / 116][Stage 155:==============================================>     (103 + 13) / 116][Stage 155:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.135793265 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39726758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:===============================>                     (71 + 50) / 121][Stage 156:======================================>              (87 + 34) / 121][Stage 156:==============================================>     (108 + 13) / 121][Stage 156:====================================================>(120 + 1) / 121]                                                                                [Stage 157:==========================>                          (61 + 61) / 122][Stage 157:=============================>                       (69 + 53) / 122][Stage 157:======================================>              (88 + 34) / 122][Stage 157:===============================================>    (111 + 11) / 122][Stage 157:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.227107525 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397880161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (62 + 58) / 120][Stage 158:==================================>                  (77 + 43) / 120][Stage 158:===========================================>         (99 + 21) / 120][Stage 158:===================================================> (117 + 3) / 120]                                                                                [Stage 159:==============================>                      (69 + 52) / 121][Stage 159:===================================>                 (81 + 40) / 121][Stage 159:==========================================>         (100 + 21) / 121][Stage 159:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.300880299 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369449687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=============================>                       (65 + 50) / 115][Stage 160:===================================>                 (77 + 38) / 115][Stage 160:===========================================>         (94 + 21) / 115][Stage 160:===============================================>    (105 + 10) / 115][Stage 160:==================================================>  (110 + 5) / 115][Stage 160:====================================================>(113 + 2) / 115]                                                                                [Stage 161:===============================>                     (68 + 48) / 116][Stage 161:===================================>                 (78 + 38) / 116][Stage 161:============================================>        (97 + 19) / 116][Stage 161:===============================================>    (105 + 11) / 116][Stage 161:==================================================>  (110 + 6) / 116][Stage 161:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.559582116 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381360979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:==================================>                  (76 + 42) / 118][Stage 162:==========================================>          (94 + 24) / 118][Stage 162:=============================================>      (104 + 14) / 118][Stage 162:====================================================>(117 + 1) / 118]                                                                                [Stage 163:================================>                    (73 + 46) / 119][Stage 163:=================================>                   (75 + 44) / 119][Stage 163:======================================>              (86 + 33) / 119][Stage 163:=============================================>      (103 + 16) / 119][Stage 163:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.220258492 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333320173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:====================================>                (80 + 35) / 115][Stage 164:=======================================>             (85 + 30) / 115][Stage 164:==========================================>          (92 + 23) / 115][Stage 164:==============================================>     (103 + 12) / 115][Stage 164:===================================================> (112 + 3) / 115]                                                                                [Stage 165:=======================================>             (86 + 30) / 116][Stage 165:===========================================>         (95 + 21) / 116][Stage 165:===============================================>    (105 + 11) / 116][Stage 165:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.955250279 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406480244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:===============================>                     (71 + 50) / 121][Stage 166:======================================>              (88 + 33) / 121][Stage 166:==================================================>  (116 + 5) / 121]                                                                                [Stage 167:==========================>                          (62 + 60) / 122][Stage 167:==============================>                      (71 + 51) / 122][Stage 167:====================================>                (85 + 37) / 122][Stage 167:============================================>       (104 + 18) / 122][Stage 167:====================================================>(120 + 2) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.485213608 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409356052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (62 + 58) / 120][Stage 168:==============================>                      (69 + 51) / 120][Stage 168:===========================================>        (100 + 20) / 120][Stage 168:====================================================>(118 + 2) / 120]                                                                                [Stage 169:==========================>                          (61 + 60) / 121][Stage 169:=============================>                       (68 + 53) / 121][Stage 169:====================================>                (84 + 37) / 121][Stage 169:=============================================>      (105 + 16) / 121][Stage 169:===================================================> (117 + 4) / 121][Stage 169:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.557876841 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383459725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:============================>                        (61 + 52) / 113][Stage 170:===================================>                 (76 + 37) / 113][Stage 170:============================================>        (95 + 18) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:===============================>                     (67 + 47) / 114][Stage 171:=======================================>             (84 + 30) / 114][Stage 171:===============================================>    (104 + 10) / 114][Stage 171:====================================================>(112 + 2) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.322250385 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371826595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==================================>                  (75 + 40) / 115][Stage 172:=======================================>             (86 + 29) / 115][Stage 172:=============================================>       (98 + 17) / 115][Stage 172:===================================================> (112 + 3) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:===============================>                     (70 + 46) / 116][Stage 173:====================================>                (79 + 37) / 116][Stage 173:============================================>        (98 + 18) / 116][Stage 173:===============================================>    (105 + 11) / 116][Stage 173:===================================================> (112 + 4) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.162535169 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389798802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (71 + 44) / 115][Stage 174:=======================================>             (85 + 30) / 115][Stage 174:=============================================>      (101 + 14) / 115][Stage 174:===================================================> (112 + 3) / 115]                                                                                [Stage 175:===================================>                 (77 + 39) / 116][Stage 175:===========================================>         (95 + 21) / 116][Stage 175:==============================================>     (103 + 13) / 116][Stage 175:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.831985983 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.329554904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (82 + 33) / 115][Stage 176:=======================================>             (85 + 30) / 115][Stage 176:============================================>        (96 + 19) / 115][Stage 176:==============================================>     (103 + 12) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:=====================================>               (83 + 33) / 116][Stage 177:========================================>            (89 + 27) / 116][Stage 177:=============================================>      (102 + 14) / 116][Stage 177:================================================>    (107 + 9) / 116][Stage 177:==================================================>  (111 + 5) / 116][Stage 177:====================================================>(114 + 2) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.434306865 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414742008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 60) / 120][Stage 178:==============================>                      (68 + 52) / 120][Stage 178:======================================>              (87 + 33) / 120][Stage 178:==============================================>     (107 + 13) / 120][Stage 178:====================================================>(119 + 1) / 120]                                                                                [Stage 179:==========================>                          (61 + 60) / 121][Stage 179:===============================>                     (71 + 50) / 121][Stage 179:======================================>              (89 + 32) / 121][Stage 179:===============================================>    (110 + 11) / 121][Stage 179:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.40185824 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362709091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:================================>                    (73 + 45) / 118][Stage 180:=======================================>             (88 + 30) / 118][Stage 180:============================================>       (102 + 16) / 118][Stage 180:====================================================>(117 + 1) / 118]                                                                                [Stage 181:================================>                    (73 + 46) / 119][Stage 181:===================================>                 (80 + 39) / 119][Stage 181:=======================================>             (88 + 31) / 119][Stage 181:===============================================>    (108 + 11) / 119][Stage 181:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.110785798 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405777404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:===================================>                 (79 + 39) / 118][Stage 182:=========================================>           (93 + 25) / 118][Stage 182:============================================>       (100 + 18) / 118][Stage 182:=================================================>   (111 + 7) / 118]                                                                                [Stage 183:================================>                    (74 + 45) / 119][Stage 183:=================================>                   (76 + 43) / 119][Stage 183:========================================>            (91 + 28) / 119][Stage 183:==============================================>     (107 + 12) / 119][Stage 183:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.395775507 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389152621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:=============================>                       (63 + 50) / 113][Stage 184:=======================================>             (84 + 29) / 113][Stage 184:===============================================>    (103 + 10) / 113][Stage 184:====================================================>(111 + 2) / 113]                                                                                [Stage 185:===========================>                         (59 + 55) / 114][Stage 185:=============================>                       (64 + 50) / 114][Stage 185:======================================>              (82 + 32) / 114][Stage 185:=============================================>       (98 + 16) / 114][Stage 185:===================================================> (110 + 4) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.474622734 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362190031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:==================================>                  (77 + 41) / 118][Stage 186:=======================================>             (88 + 30) / 118][Stage 186:==============================================>     (105 + 13) / 118][Stage 186:===================================================> (114 + 4) / 118]                                                                                [Stage 187:==================================>                  (77 + 42) / 119][Stage 187:====================================>                (81 + 38) / 119][Stage 187:=========================================>           (94 + 25) / 119][Stage 187:================================================>    (110 + 9) / 119][Stage 187:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.385576962 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405804145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:============================>                        (64 + 56) / 120][Stage 188:=================================>                   (75 + 45) / 120][Stage 188:============================================>       (103 + 17) / 120][Stage 188:====================================================>(119 + 1) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:============================>                        (66 + 55) / 121][Stage 189:==================================>                  (78 + 43) / 121][Stage 189:=============================================>      (105 + 16) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.478384707 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353659108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===================================>                 (75 + 38) / 113][Stage 190:=========================================>           (89 + 24) / 113][Stage 190:=============================================>       (98 + 15) / 113][Stage 190:===================================================> (109 + 4) / 113][Stage 190:===================================================> (110 + 3) / 113]                                                                                [Stage 191:=====================================>               (80 + 34) / 114][Stage 191:===========================================>         (93 + 21) / 114][Stage 191:==============================================>     (103 + 11) / 114][Stage 191:===================================================> (110 + 4) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.155658042 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357490218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:=================================>                   (75 + 43) / 118][Stage 192:==========================================>          (94 + 24) / 118][Stage 192:================================================>    (109 + 9) / 118][Stage 192:====================================================>(116 + 2) / 118]                                                                                [Stage 193:================================>                    (73 + 46) / 119][Stage 193:===================================>                 (79 + 40) / 119][Stage 193:==========================================>          (95 + 24) / 119][Stage 193:===============================================>    (109 + 10) / 119][Stage 193:====================================================>(117 + 2) / 119][Stage 193:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.450604357 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403142378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:============================>                        (64 + 56) / 120][Stage 194:=====================================>               (84 + 36) / 120][Stage 194:=============================================>      (106 + 14) / 120][Stage 194:====================================================>(119 + 1) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:============================>                        (66 + 55) / 121][Stage 195:=====================================>               (85 + 36) / 121][Stage 195:==============================================>     (109 + 12) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.736208429 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378090533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:====================================>                (80 + 35) / 115][Stage 196:===========================================>         (94 + 21) / 115][Stage 196:==================================================>  (109 + 6) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:================================>                    (71 + 45) / 116][Stage 197:======================================>              (85 + 31) / 116][Stage 197:===============================================>    (106 + 10) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.845784992 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383548067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=============================>                       (65 + 50) / 115][Stage 198:=========================================>           (89 + 26) / 115][Stage 198:=============================================>       (99 + 16) / 115][Stage 198:==================================================>  (109 + 6) / 115][Stage 198:====================================================>(114 + 1) / 115]                                                                                [Stage 199:================================>                    (72 + 44) / 116][Stage 199:==========================================>          (92 + 24) / 116][Stage 199:================================================>    (107 + 9) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.977481499 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335309281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:======================================>              (84 + 31) / 115][Stage 200:=========================================>           (90 + 25) / 115][Stage 200:===============================================>    (104 + 11) / 115][Stage 200:====================================================>(113 + 2) / 115]                                                                                [Stage 201:========================================>            (89 + 27) / 116][Stage 201:===============================================>    (106 + 10) / 116][Stage 201:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.651524624 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 08:19:33 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:35036) dropped. RpcEnv already stopped.
17/05/22 08:19:33 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:35036) dropped. RpcEnv already stopped.

real	10m34.788s
user	11m36.624s
sys	0m55.116s
