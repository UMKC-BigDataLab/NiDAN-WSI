Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 11:51:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:51:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:51:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:51:59 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 11:52:01 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:52:11 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522115201-0455).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.450813029 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=================>                                     (37 + 78) / 115][Stage 0:=========================>                             (54 + 61) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.822135309 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.636986498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==========================>                            (55 + 58) / 113][Stage 2:===================================>                   (72 + 41) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:==========================================>            (87 + 26) / 113][Stage 2:===============================================>       (97 + 16) / 113][Stage 2:================================================>     (102 + 11) / 113][Stage 2:===================================================>   (106 + 7) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:=================================>                     (70 + 44) / 114][Stage 3:====================================>                  (76 + 38) / 114][Stage 3:=====================================>                 (78 + 36) / 114][Stage 3:=========================================>             (87 + 27) / 114][Stage 3:==============================================>        (96 + 18) / 114][Stage 3:===================================================>   (106 + 8) / 114][Stage 3:=====================================================> (110 + 4) / 114][Stage 3:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.083924982 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.636862461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==================================>                    (70 + 43) / 113][Stage 4:======================================>                (79 + 34) / 113][Stage 4:=======================================>               (82 + 31) / 113][Stage 4:==========================================>            (87 + 26) / 113][Stage 4:==============================================>        (95 + 18) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===================================>                   (74 + 40) / 114][Stage 5:======================================>                (80 + 34) / 114][Stage 5:========================================>              (84 + 30) / 114][Stage 5:===========================================>           (90 + 24) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:================================================>     (103 + 11) / 114][Stage 5:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.953120397 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.680329432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:==============================>                        (63 + 50) / 113][Stage 6:=====================================>                 (77 + 36) / 113][Stage 6:=========================================>             (85 + 28) / 113][Stage 6:==========================================>            (88 + 25) / 113][Stage 6:================================================>     (101 + 12) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:===========================>                           (58 + 56) / 114][Stage 7:=============================>                         (61 + 53) / 114][Stage 7:==================================>                    (72 + 42) / 114][Stage 7:=======================================>               (81 + 33) / 114][Stage 7:================================================>     (103 + 11) / 114][Stage 7:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.253785635 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.600764311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==============================>                        (64 + 51) / 115][Stage 8:=====================================>                 (78 + 37) / 115][Stage 8:=========================================>             (86 + 29) / 115][Stage 8:==============================================>        (97 + 18) / 115][Stage 8:=====================================================> (112 + 3) / 115][Stage 8:======================================================>(113 + 2) / 115]                                                                                [Stage 9:=================================>                     (71 + 45) / 116][Stage 9:========================================>              (85 + 31) / 116][Stage 9:============================================>          (93 + 23) / 116][Stage 9:==============================================>        (99 + 17) / 116][Stage 9:==================================================>    (107 + 9) / 116][Stage 9:====================================================>  (111 + 5) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.939292873 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.57585849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:>                                                       (0 + 0) / 113][Stage 10:==========================>                           (55 + 58) / 113][Stage 10:=============================>                        (61 + 52) / 113][Stage 10:==================================>                   (72 + 41) / 113][Stage 10:=========================================>            (86 + 27) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:================================================>    (103 + 10) / 113][Stage 10:====================================================> (110 + 3) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:=========================>                            (54 + 60) / 114][Stage 11:=============================>                        (62 + 52) / 114][Stage 11:================================>                     (68 + 46) / 114][Stage 11:====================================>                 (78 + 36) / 114][Stage 11:======================================>               (82 + 32) / 114][Stage 11:=============================================>        (95 + 19) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:=====================================================>(112 + 2) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.531746126 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.577070191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===============================>                      (68 + 47) / 115][Stage 12:=====================================>                (79 + 36) / 115][Stage 12:=========================================>            (88 + 27) / 115][Stage 12:===========================================>          (93 + 22) / 115][Stage 12:==============================================>       (99 + 16) / 115][Stage 12:================================================>    (105 + 10) / 115][Stage 12:===================================================>  (109 + 6) / 115]                                                                                [Stage 13:==============================>                       (65 + 51) / 116][Stage 13:=================================>                    (73 + 43) / 116][Stage 13:========================================>             (86 + 30) / 116][Stage 13:===========================================>          (94 + 22) / 116][Stage 13:=============================================>       (100 + 16) / 116][Stage 13:===============================================>     (105 + 11) / 116][Stage 13:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.20647359 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472493328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=====================================>                (79 + 36) / 115][Stage 14:======================================>               (83 + 32) / 115][Stage 14:===========================================>          (93 + 22) / 115][Stage 14:===================================================>  (109 + 6) / 115]                                                                                [Stage 15:=====================================>                (80 + 36) / 116][Stage 15:=======================================>              (85 + 31) / 116][Stage 15:============================================>         (96 + 20) / 116][Stage 15:================================================>    (106 + 10) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.318535626 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474832646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=================================>                    (70 + 43) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:==========================================>           (88 + 25) / 113][Stage 16:=============================================>        (96 + 17) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===================================>                  (75 + 39) / 114][Stage 17:========================================>             (85 + 29) / 114][Stage 17:=============================================>        (96 + 18) / 114][Stage 17:==============================================>      (101 + 13) / 114][Stage 17:====================================================> (110 + 4) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.14035164 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504928488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:==============================>                       (63 + 50) / 113][Stage 18:================================>                     (69 + 44) / 113][Stage 18:===========================================>          (92 + 21) / 113][Stage 18:===============================================>      (99 + 14) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:==============================>                       (64 + 50) / 114][Stage 19:===================================>                  (74 + 40) / 114][Stage 19:=========================================>            (87 + 27) / 114][Stage 19:===========================================>          (92 + 22) / 114][Stage 19:==============================================>      (101 + 13) / 114][Stage 19:===================================================>  (109 + 5) / 114][Stage 19:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.180160064 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.56003295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (60 + 61) / 121][Stage 20:=============================>                        (67 + 54) / 121][Stage 20:=====================================>                (85 + 36) / 121][Stage 20:==============================================>      (107 + 14) / 121][Stage 20:===================================================>  (115 + 6) / 121][Stage 20:=====================================================>(119 + 2) / 121]                                                                                [Stage 21:===========================>                          (61 + 61) / 122][Stage 21:============================>                         (64 + 58) / 122][Stage 21:===================================>                  (80 + 42) / 122][Stage 21:===========================================>          (98 + 24) / 122][Stage 21:==================================================>   (113 + 9) / 122][Stage 21:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.604350756 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.632693401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:=============================>                        (66 + 54) / 120][Stage 22:==========================================>           (95 + 25) / 120][Stage 22:==============================================>      (106 + 14) / 120][Stage 22:===================================================>  (114 + 6) / 120][Stage 22:=====================================================>(119 + 1) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:===============================>                      (71 + 50) / 121][Stage 23:========================================>             (90 + 31) / 121][Stage 23:===============================================>     (109 + 12) / 121][Stage 23:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.591908955 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491247861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:================================>                     (69 + 46) / 115][Stage 24:=======================================>              (85 + 30) / 115][Stage 24:==============================================>      (101 + 14) / 115][Stage 24:===================================================>  (110 + 5) / 115][Stage 24:=====================================================>(113 + 2) / 115]                                                                                [Stage 25:===================================>                  (76 + 40) / 116][Stage 25:==========================================>           (91 + 25) / 116][Stage 25:==================================================>   (108 + 8) / 116][Stage 25:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.039938524 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515428366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:=============================>                        (66 + 55) / 121][Stage 26:===================================>                  (80 + 41) / 121][Stage 26:===========================================>          (98 + 23) / 121][Stage 26:==============================================>      (106 + 15) / 121][Stage 26:==================================================>   (114 + 7) / 121]                                                                                [Stage 27:===========================>                          (61 + 61) / 122][Stage 27:==============================>                       (70 + 52) / 122][Stage 27:===========================================>          (99 + 23) / 122][Stage 27:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.359828091 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452153949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==============================>                       (64 + 51) / 115][Stage 28:==================================>                   (73 + 42) / 115][Stage 28:========================================>             (86 + 29) / 115][Stage 28:===============================================>     (104 + 11) / 115][Stage 28:====================================================> (112 + 3) / 115]                                                                                [Stage 29:================================>                     (69 + 47) / 116][Stage 29:=====================================>                (80 + 36) / 116][Stage 29:=============================================>       (100 + 16) / 116][Stage 29:===============================================>     (105 + 11) / 116][Stage 29:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.295958144 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440700339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:======================================>               (81 + 34) / 115][Stage 30:========================================>             (87 + 28) / 115][Stage 30:================================================>    (105 + 10) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:========================================>             (88 + 28) / 116][Stage 31:===============================================>     (103 + 13) / 116][Stage 31:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.736391433 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445222017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=================================>                    (73 + 45) / 118][Stage 32:=======================================>              (86 + 32) / 118][Stage 32:============================================>        (100 + 18) / 118][Stage 32:==================================================>   (111 + 7) / 118][Stage 32:=====================================================>(116 + 2) / 118]                                                                                [Stage 33:==================================>                   (75 + 44) / 119][Stage 33:=====================================>                (82 + 37) / 119][Stage 33:==========================================>           (93 + 26) / 119][Stage 33:================================================>    (108 + 11) / 119][Stage 33:====================================================> (115 + 4) / 119][Stage 33:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.582706604 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505542057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (59 + 61) / 120][Stage 34:===========================>                          (61 + 59) / 120][Stage 34:=================================>                    (74 + 46) / 120][Stage 34:=============================================>       (104 + 16) / 120][Stage 34:==================================================>   (113 + 7) / 120][Stage 34:====================================================> (117 + 3) / 120]                                                                                [Stage 35:============================>                         (63 + 58) / 121][Stage 35:================================>                     (72 + 49) / 121][Stage 35:============================================>         (99 + 22) / 121][Stage 35:==================================================>   (113 + 8) / 121][Stage 35:====================================================> (117 + 4) / 121][Stage 35:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.790743412 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470111922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=================================>                    (74 + 44) / 118][Stage 36:====================================>                 (79 + 39) / 118][Stage 36:=========================================>            (91 + 27) / 118][Stage 36:===============================================>     (106 + 12) / 118][Stage 36:====================================================> (115 + 3) / 118][Stage 36:=====================================================>(117 + 1) / 118]                                                                                [Stage 37:=================================>                    (73 + 46) / 119][Stage 37:=====================================>                (82 + 37) / 119][Stage 37:========================================>             (89 + 30) / 119][Stage 37:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.499959018 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453786654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (81 + 32) / 113][Stage 38:===========================================>          (91 + 22) / 113][Stage 38:===============================================>     (102 + 11) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:====================================>                 (77 + 37) / 114][Stage 39:=========================================>            (87 + 27) / 114][Stage 39:============================================>         (93 + 21) / 114][Stage 39:==================================================>   (106 + 8) / 114][Stage 39:====================================================> (111 + 3) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.277300977 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43281463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (73 + 45) / 118][Stage 40:=====================================>                (81 + 37) / 118][Stage 40:============================================>         (97 + 21) / 118][Stage 40:====================================================> (114 + 4) / 118]                                                                                [Stage 41:=================================>                    (73 + 46) / 119][Stage 41:==================================>                   (77 + 42) / 119][Stage 41:=======================================>              (88 + 31) / 119][Stage 41:============================================>        (100 + 19) / 119][Stage 41:==================================================>   (111 + 8) / 119][Stage 41:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.20909161 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512382358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:============================>                         (60 + 53) / 113][Stage 42:================================>                     (68 + 45) / 113][Stage 42:========================================>             (85 + 28) / 113][Stage 42:==================================================>   (106 + 7) / 113][Stage 42:====================================================> (109 + 4) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:===================================>                  (74 + 40) / 114][Stage 43:==============================================>       (99 + 15) / 114][Stage 43:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.288837304 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456041296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:===================================>                  (78 + 40) / 118][Stage 44:=========================================>            (91 + 27) / 118][Stage 44:============================================>        (100 + 18) / 118][Stage 44:====================================================> (114 + 4) / 118]                                                                                [Stage 45:==================================>                   (76 + 43) / 119][Stage 45:======================================>               (84 + 35) / 119][Stage 45:=============================================>       (102 + 17) / 119][Stage 45:=================================================>    (110 + 9) / 119][Stage 45:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.222368076 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379307848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:======================================>               (81 + 34) / 115][Stage 46:========================================>             (87 + 28) / 115][Stage 46:===============================================>     (103 + 12) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:=======================================>              (85 + 31) / 116][Stage 47:=============================================>        (97 + 19) / 116][Stage 47:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.660136936 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45451534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:============================>                         (60 + 53) / 113][Stage 48:=====================================>                (78 + 35) / 113][Stage 48:==============================================>      (100 + 13) / 113][Stage 48:====================================================> (110 + 3) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:==================================>                   (72 + 42) / 114][Stage 49:==============================================>       (98 + 16) / 114][Stage 49:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.091860516 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444117787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==============================>                       (66 + 49) / 115][Stage 50:====================================>                 (78 + 37) / 115][Stage 50:=============================================>        (97 + 18) / 115][Stage 50:====================================================> (112 + 3) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:================================>                     (70 + 46) / 116][Stage 51:=======================================>              (84 + 32) / 116][Stage 51:==============================================>       (99 + 17) / 116][Stage 51:===================================================>  (111 + 5) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.134732536 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426593999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:=================================>                    (73 + 45) / 118][Stage 52:======================================>               (84 + 34) / 118][Stage 52:============================================>         (97 + 21) / 118][Stage 52:==================================================>   (111 + 7) / 118][Stage 52:====================================================> (115 + 3) / 118]                                                                                [Stage 53:==================================>                   (76 + 43) / 119][Stage 53:=======================================>              (86 + 33) / 119][Stage 53:===========================================>          (95 + 24) / 119][Stage 53:================================================>    (108 + 11) / 119][Stage 53:====================================================> (115 + 4) / 119][Stage 53:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.695895395 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385603528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=======================================>              (84 + 31) / 115][Stage 54:============================================>         (95 + 20) / 115][Stage 54:===================================================>  (109 + 6) / 115][Stage 54:=====================================================>(113 + 2) / 115]                                                                                [Stage 55:=======================================>              (85 + 31) / 116][Stage 55:=========================================>            (89 + 27) / 116][Stage 55:=================================================>    (107 + 9) / 116][Stage 55:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.723795658 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449641586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:=============================>                        (66 + 55) / 121][Stage 56:=====================================>                (84 + 37) / 121][Stage 56:============================================>        (101 + 20) / 121][Stage 56:===================================================>  (116 + 5) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:============================>                         (64 + 58) / 122][Stage 57:==================================>                   (79 + 43) / 122][Stage 57:===========================================>         (100 + 22) / 122][Stage 57:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.074112976 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376422295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (81 + 34) / 115][Stage 58:========================================>             (87 + 28) / 115][Stage 58:=============================================>        (96 + 19) / 115][Stage 58:===================================================>  (109 + 6) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:========================================>             (86 + 30) / 116][Stage 59:=============================================>       (100 + 16) / 116][Stage 59:===============================================>     (105 + 11) / 116][Stage 59:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.9553743 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437841916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:=================================>                    (70 + 43) / 113][Stage 60:============================================>         (94 + 19) / 113][Stage 60:====================================================> (109 + 4) / 113]                                                                                [Stage 61:============================>                         (60 + 54) / 114][Stage 61:=============================>                        (63 + 51) / 114][Stage 61:======================================>               (82 + 32) / 114][Stage 61:=============================================>        (97 + 17) / 114][Stage 61:===================================================>  (109 + 5) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.183243979 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436859458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==========================>                           (60 + 61) / 121][Stage 62:=============================>                        (67 + 54) / 121][Stage 62:=========================================>            (93 + 28) / 121][Stage 62:=================================================>    (112 + 9) / 121]                                                                                [Stage 63:===========================>                          (61 + 61) / 122][Stage 63:=============================>                        (67 + 55) / 122][Stage 63:=======================================>              (90 + 32) / 122][Stage 63:================================================>    (112 + 10) / 122][Stage 63:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.226480119 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433238421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===============================>                      (68 + 47) / 115][Stage 64:===================================>                  (76 + 39) / 115][Stage 64:==========================================>           (90 + 25) / 115][Stage 64:================================================>    (105 + 10) / 115][Stage 64:====================================================> (111 + 4) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:=================================>                    (71 + 45) / 116][Stage 65:======================================>               (83 + 33) / 116][Stage 65:============================================>         (95 + 21) / 116][Stage 65:==============================================>      (102 + 14) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.200491242 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382768314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (78 + 35) / 113][Stage 66:===========================================>          (90 + 23) / 113][Stage 66:===============================================>     (101 + 12) / 113][Stage 66:====================================================> (110 + 3) / 113]                                                                                [Stage 67:=======================================>              (84 + 30) / 114][Stage 67:============================================>         (94 + 20) / 114][Stage 67:===============================================>     (103 + 11) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.853177492 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379407877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=====================================>                (79 + 36) / 115][Stage 68:=======================================>              (85 + 30) / 115][Stage 68:=============================================>        (96 + 19) / 115][Stage 68:===================================================>  (109 + 6) / 115]                                                                                [Stage 69:=======================================>              (85 + 31) / 116][Stage 69:=============================================>        (98 + 18) / 116][Stage 69:====================================================> (112 + 4) / 116][Stage 69:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.911306181 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402142684 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=================================>                    (71 + 42) / 113][Stage 70:======================================>               (81 + 32) / 113][Stage 70:===========================================>          (92 + 21) / 113][Stage 70:===============================================>     (101 + 12) / 113][Stage 70:====================================================> (109 + 4) / 113]                                                                                [Stage 71:====================================>                 (77 + 37) / 114][Stage 71:=========================================>            (88 + 26) / 114][Stage 71:==============================================>       (99 + 15) / 114][Stage 71:=================================================>    (105 + 9) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.483690483 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45646411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:=============================>                        (67 + 54) / 121][Stage 72:===================================>                  (80 + 41) / 121][Stage 72:=============================================>       (104 + 17) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:============================>                         (65 + 57) / 122][Stage 73:====================================>                 (82 + 40) / 122][Stage 73:==============================================>      (107 + 15) / 122]                                                                                Time elapsed: 3.036377075 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366127088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:========================================>             (86 + 29) / 115][Stage 74:===============================================>     (104 + 11) / 115][Stage 74:====================================================> (112 + 3) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:=======================================>              (84 + 32) / 116][Stage 75:==============================================>      (101 + 15) / 116][Stage 75:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.717341463 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453907654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:============================>                         (60 + 53) / 113][Stage 76:===================================>                  (75 + 38) / 113][Stage 76:=============================================>        (95 + 18) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:===========================>                          (59 + 55) / 114][Stage 77:================================>                     (68 + 46) / 114][Stage 77:============================================>         (94 + 20) / 114][Stage 77:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.893016437 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378495162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (81 + 34) / 115][Stage 78:=========================================>            (89 + 26) / 115][Stage 78:===============================================>     (104 + 11) / 115][Stage 78:====================================================> (111 + 4) / 115]                                                                                [Stage 79:========================================>             (87 + 29) / 116][Stage 79:==============================================>      (102 + 14) / 116][Stage 79:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.637935143 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35073538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (83 + 32) / 115][Stage 80:==========================================>           (91 + 24) / 115][Stage 80:===================================================>  (110 + 5) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:=======================================>              (85 + 31) / 116][Stage 81:=============================================>       (100 + 16) / 116][Stage 81:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.722800496 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38373442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:==================================>                   (76 + 42) / 118][Stage 82:========================================>             (88 + 30) / 118][Stage 82:=============================================>       (102 + 16) / 118][Stage 82:=====================================================>(117 + 1) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:======================================>               (84 + 35) / 119][Stage 83:=============================================>       (103 + 16) / 119][Stage 83:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.991718313 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360783235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=======================================>              (84 + 31) / 115][Stage 84:=========================================>            (89 + 26) / 115][Stage 84:=============================================>        (96 + 19) / 115][Stage 84:===================================================>  (110 + 5) / 115]                                                                                [Stage 85:========================================>             (86 + 30) / 116][Stage 85:===========================================>          (93 + 23) / 116][Stage 85:==================================================>   (108 + 8) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.900360036 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388200959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==============================>                       (64 + 51) / 115][Stage 86:====================================>                 (78 + 37) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:==============================================>      (101 + 14) / 115][Stage 86:==================================================>   (108 + 7) / 115][Stage 86:====================================================> (111 + 4) / 115]                                                                                [Stage 87:==================================>                   (75 + 41) / 116][Stage 87:===========================================>          (94 + 22) / 116][Stage 87:===============================================>     (105 + 11) / 116][Stage 87:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.278256488 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356773439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:======================================>               (82 + 33) / 115][Stage 88:==========================================>           (90 + 25) / 115][Stage 88:==================================================>   (107 + 8) / 115][Stage 88:=====================================================>(113 + 2) / 115]                                                                                [Stage 89:======================================>               (83 + 33) / 116][Stage 89:==========================================>           (91 + 25) / 116][Stage 89:==============================================>      (101 + 15) / 116][Stage 89:====================================================> (113 + 3) / 116][Stage 89:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.876338344 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367525853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:======================================>               (81 + 32) / 113][Stage 90:===========================================>          (90 + 23) / 113][Stage 90:==============================================>      (100 + 13) / 113][Stage 90:===================================================>  (108 + 5) / 113][Stage 90:=====================================================>(111 + 2) / 113]                                                                                [Stage 91:======================================>               (81 + 33) / 114][Stage 91:==========================================>           (89 + 25) / 114][Stage 91:=============================================>        (97 + 17) / 114][Stage 91:===============================================>     (102 + 12) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.404070065 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384573404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:=================================>                    (74 + 44) / 118][Stage 92:=====================================>                (82 + 36) / 118][Stage 92:=========================================>            (90 + 28) / 118][Stage 92:================================================>    (108 + 10) / 118][Stage 92:====================================================> (114 + 4) / 118]                                                                                [Stage 93:=================================>                    (74 + 45) / 119][Stage 93:====================================>                 (80 + 39) / 119][Stage 93:============================================>         (97 + 22) / 119][Stage 93:==================================================>   (111 + 8) / 119][Stage 93:=====================================================>(117 + 2) / 119][Stage 93:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.595732215 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349371467 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (83 + 32) / 115][Stage 94:=========================================>            (88 + 27) / 115][Stage 94:===============================================>     (102 + 13) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:=======================================>              (84 + 32) / 116][Stage 95:=========================================>            (90 + 26) / 116][Stage 95:=================================================>    (107 + 9) / 116][Stage 95:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.726421414 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511072688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===============================>                      (68 + 47) / 115][Stage 96:======================================>               (82 + 33) / 115][Stage 96:=============================================>        (96 + 19) / 115][Stage 96:===============================================>     (103 + 12) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:================================>                     (69 + 47) / 116][Stage 97:=======================================>              (85 + 31) / 116][Stage 97:=============================================>       (100 + 16) / 116][Stage 97:===================================================>  (110 + 6) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.224779796 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372023153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (80 + 33) / 113][Stage 98:==========================================>           (89 + 24) / 113][Stage 98:==============================================>      (100 + 13) / 113][Stage 98:===================================================>  (108 + 5) / 113]                                                                                [Stage 99:======================================>               (81 + 33) / 114][Stage 99:==========================================>           (90 + 24) / 114][Stage 99:===============================================>     (102 + 12) / 114][Stage 99:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.951394548 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37885315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (73 + 45) / 118][Stage 100:==================================>                  (76 + 42) / 118][Stage 100:====================================>                (81 + 37) / 118][Stage 100:=========================================>           (93 + 25) / 118][Stage 100:==============================================>     (106 + 12) / 118][Stage 100:====================================================>(117 + 1) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:==================================>                  (77 + 42) / 119][Stage 101:=====================================>               (85 + 34) / 119][Stage 101:===========================================>         (98 + 21) / 119][Stage 101:===============================================>    (108 + 11) / 119][Stage 101:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.435740082 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407223475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:==============================>                      (69 + 52) / 121][Stage 102:======================================>              (88 + 33) / 121][Stage 102:=================================================>   (114 + 7) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:===============================>                     (72 + 50) / 122][Stage 103:======================================>              (88 + 34) / 122][Stage 103:==============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.024739277 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38347067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===============================>                     (68 + 47) / 115][Stage 104:=====================================>               (82 + 33) / 115][Stage 104:=================================================>   (108 + 7) / 115][Stage 104:===================================================> (112 + 3) / 115]                                                                                [Stage 105:=====================================>               (81 + 35) / 116][Stage 105:============================================>        (97 + 19) / 116][Stage 105:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.719655846 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41758951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:============================>                        (64 + 56) / 120][Stage 106:==================================>                  (79 + 41) / 120][Stage 106:===========================================>        (101 + 19) / 120][Stage 106:==================================================>  (114 + 6) / 120][Stage 106:====================================================>(119 + 1) / 120]                                                                                [Stage 107:==========================>                          (61 + 60) / 121][Stage 107:============================>                        (66 + 55) / 121][Stage 107:======================================>              (87 + 34) / 121][Stage 107:=================================================>   (112 + 9) / 121][Stage 107:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.196218987 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41887001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==============================>                      (67 + 48) / 115][Stage 108:==================================>                  (75 + 40) / 115][Stage 108:=========================================>           (89 + 26) / 115][Stage 108:===============================================>    (104 + 11) / 115][Stage 108:====================================================>(113 + 2) / 115]                                                                                [Stage 109:================================>                    (71 + 45) / 116][Stage 109:=====================================>               (81 + 35) / 116][Stage 109:==========================================>          (93 + 23) / 116][Stage 109:=============================================>      (102 + 14) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.113535483 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346726613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=======================================>             (85 + 30) / 115][Stage 110:===========================================>         (95 + 20) / 115][Stage 110:=================================================>   (108 + 7) / 115]                                                                                [Stage 111:======================================>              (84 + 32) / 116][Stage 111:============================================>        (98 + 18) / 116][Stage 111:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.559803958 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377019736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:===================================>                 (78 + 40) / 118][Stage 112:======================================>              (86 + 32) / 118][Stage 112:=============================================>      (104 + 14) / 118][Stage 112:===================================================> (115 + 3) / 118]                                                                                [Stage 113:=================================>                   (76 + 43) / 119][Stage 113:====================================>                (81 + 38) / 119][Stage 113:============================================>       (101 + 18) / 119][Stage 113:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.313380198 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4399897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (62 + 59) / 121][Stage 114:================================>                    (74 + 47) / 121][Stage 114:=========================================>           (94 + 27) / 121][Stage 114:=================================================>   (114 + 7) / 121]                                                                                [Stage 115:==========================>                          (62 + 60) / 122][Stage 115:=================================>                   (76 + 46) / 122][Stage 115:===========================================>        (101 + 21) / 122][Stage 115:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.018941738 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409801358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:===========================>                         (62 + 59) / 121][Stage 116:=================================>                   (76 + 45) / 121][Stage 116:===========================================>        (102 + 19) / 121][Stage 116:====================================================>(119 + 2) / 121]                                                                                [Stage 117:==========================>                          (61 + 61) / 122][Stage 117:============================>                        (65 + 57) / 122][Stage 117:==================================>                  (80 + 42) / 122][Stage 117:============================================>       (105 + 17) / 122][Stage 117:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.969721493 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400999885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 61) / 121][Stage 118:===============================>                     (73 + 48) / 121][Stage 118:======================================>              (88 + 33) / 121][Stage 118:==================================================>  (116 + 5) / 121]                                                                                [Stage 119:============================>                        (65 + 57) / 122][Stage 119:=================================>                   (76 + 46) / 122][Stage 119:=========================================>           (95 + 27) / 122][Stage 119:===============================================>    (112 + 10) / 122][Stage 119:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.103144881 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402769944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (61 + 60) / 121][Stage 120:================================>                    (74 + 47) / 121][Stage 120:=========================================>           (94 + 27) / 121][Stage 120:==================================================>  (115 + 6) / 121]                                                                                [Stage 121:==========================>                          (62 + 60) / 122][Stage 121:==================================>                  (79 + 43) / 122][Stage 121:==========================================>          (98 + 24) / 122][Stage 121:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 2.862372908 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403549065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:==============================>                      (70 + 50) / 120][Stage 122:=========================================>           (93 + 27) / 120][Stage 122:===================================================> (117 + 3) / 120]                                                                                [Stage 123:==========================>                          (61 + 60) / 121][Stage 123:============================>                        (65 + 56) / 121][Stage 123:====================================>                (83 + 38) / 121][Stage 123:=================================================>   (112 + 9) / 121][Stage 123:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.863945293 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362712149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (73 + 45) / 118][Stage 124:=====================================>               (83 + 35) / 118][Stage 124:============================================>       (102 + 16) / 118][Stage 124:===================================================> (114 + 4) / 118]                                                                                [Stage 125:=================================>                   (76 + 43) / 119][Stage 125:======================================>              (87 + 32) / 119][Stage 125:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 2.836972114 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361038811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===================================>                 (75 + 38) / 113][Stage 126:======================================>              (82 + 31) / 113][Stage 126:============================================>        (94 + 19) / 113][Stage 126:==============================================>     (100 + 13) / 113][Stage 126:====================================================>(111 + 2) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:======================================>              (82 + 32) / 114][Stage 127:===========================================>         (93 + 21) / 114][Stage 127:==============================================>     (103 + 11) / 114][Stage 127:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.593989723 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406653645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:============================>                        (65 + 56) / 121][Stage 128:=================================>                   (77 + 44) / 121][Stage 128:=========================================>           (94 + 27) / 121][Stage 128:=================================================>   (113 + 8) / 121]                                                                                [Stage 129:==========================>                          (61 + 61) / 122][Stage 129:==============================>                      (71 + 51) / 122][Stage 129:==========================================>          (98 + 24) / 122][Stage 129:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 2.994792496 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412051183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:==============================>                      (69 + 52) / 121][Stage 130:=====================================>               (85 + 36) / 121][Stage 130:==================================================>  (115 + 6) / 121][Stage 130:====================================================>(120 + 1) / 121]                                                                                [Stage 131:==========================>                          (61 + 61) / 122][Stage 131:=============================>                       (67 + 55) / 122][Stage 131:====================================>                (85 + 37) / 122][Stage 131:==============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.051969089 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409434346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 60) / 120][Stage 132:===========================>                         (62 + 58) / 120][Stage 132:==============================>                      (70 + 50) / 120][Stage 132:=======================================>             (90 + 30) / 120][Stage 132:=================================================>   (111 + 9) / 120]                                                                                [Stage 133:===========================>                         (63 + 58) / 121][Stage 133:================================>                    (74 + 47) / 121][Stage 133:======================================>              (89 + 32) / 121][Stage 133:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.034115246 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369515709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:===================================>                 (80 + 38) / 118][Stage 134:========================================>            (91 + 27) / 118][Stage 134:==============================================>     (106 + 12) / 118][Stage 134:===================================================> (114 + 4) / 118]                                                                                [Stage 135:=================================>                   (75 + 44) / 119][Stage 135:====================================>                (82 + 37) / 119][Stage 135:==========================================>          (95 + 24) / 119][Stage 135:=================================================>   (111 + 8) / 119][Stage 135:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.226220843 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340299106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:====================================>                (80 + 35) / 115][Stage 136:========================================>            (88 + 27) / 115][Stage 136:=============================================>       (99 + 16) / 115][Stage 136:==================================================>  (110 + 5) / 115][Stage 136:====================================================>(114 + 1) / 115]                                                                                [Stage 137:=====================================>               (83 + 33) / 116][Stage 137:=========================================>           (90 + 26) / 116][Stage 137:=============================================>      (102 + 14) / 116][Stage 137:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.825042077 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372648109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (71 + 44) / 115][Stage 138:========================================>            (87 + 28) / 115][Stage 138:================================================>    (106 + 9) / 115][Stage 138:====================================================>(113 + 2) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:===================================>                 (77 + 39) / 116][Stage 139:==========================================>          (93 + 23) / 116][Stage 139:==================================================>  (110 + 6) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.09411887 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473248193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:====================================>                (77 + 36) / 113][Stage 140:=======================================>             (85 + 28) / 113][Stage 140:==============================================>     (100 + 13) / 113][Stage 140:==================================================>  (108 + 5) / 113]                                                                                [Stage 141:====================================>                (78 + 36) / 114][Stage 141:========================================>            (87 + 27) / 114][Stage 141:=============================================>       (97 + 17) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.897146567 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352724921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=================================>                   (72 + 41) / 113][Stage 142:======================================>              (83 + 30) / 113][Stage 142:============================================>        (95 + 18) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:=================================>                   (73 + 41) / 114][Stage 143:======================================>              (83 + 31) / 114][Stage 143:============================================>        (95 + 19) / 114][Stage 143:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.695143547 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371364552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===============================>                     (68 + 47) / 115][Stage 144:======================================>              (83 + 32) / 115][Stage 144:=============================================>      (101 + 14) / 115][Stage 144:=================================================>   (108 + 7) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:=================================>                   (74 + 42) / 116][Stage 145:========================================>            (89 + 27) / 116][Stage 145:============================================>       (100 + 16) / 116][Stage 145:===================================================> (112 + 4) / 116][Stage 145:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.255762318 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368310014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (73 + 45) / 118][Stage 146:======================================>              (86 + 32) / 118][Stage 146:============================================>       (101 + 17) / 118][Stage 146:====================================================>(116 + 2) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:======================================>              (87 + 32) / 119][Stage 147:============================================>       (102 + 17) / 119][Stage 147:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.889728708 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338908631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=====================================>               (81 + 34) / 115][Stage 148:=========================================>           (90 + 25) / 115][Stage 148:=============================================>      (101 + 14) / 115][Stage 148:===================================================> (112 + 3) / 115]                                                                                [Stage 149:=======================================>             (87 + 29) / 116][Stage 149:============================================>        (97 + 19) / 116][Stage 149:==================================================>  (110 + 6) / 116][Stage 149:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.868668226 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372740733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=============================>                       (65 + 50) / 115][Stage 150:===================================>                 (77 + 38) / 115][Stage 150:==========================================>          (92 + 23) / 115][Stage 150:===============================================>    (105 + 10) / 115][Stage 150:==================================================>  (110 + 5) / 115]                                                                                [Stage 151:================================>                    (71 + 45) / 116][Stage 151:=======================================>             (86 + 30) / 116][Stage 151:============================================>       (100 + 16) / 116][Stage 151:=================================================>   (109 + 7) / 116][Stage 151:===================================================> (113 + 3) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.535323763 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352377225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===================================>                 (75 + 38) / 113][Stage 152:========================================>            (86 + 27) / 113][Stage 152:============================================>        (95 + 18) / 113][Stage 152:=================================================>   (105 + 8) / 113][Stage 152:==================================================>  (107 + 6) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:===================================>                 (76 + 38) / 114][Stage 153:=======================================>             (85 + 29) / 114][Stage 153:============================================>        (96 + 18) / 114][Stage 153:===============================================>    (104 + 10) / 114][Stage 153:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.214145328 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355468364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=================================>                   (74 + 44) / 118][Stage 154:======================================>              (86 + 32) / 118][Stage 154:==============================================>     (106 + 12) / 118][Stage 154:===================================================> (115 + 3) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:====================================>                (83 + 36) / 119][Stage 155:===============================================>    (108 + 11) / 119][Stage 155:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.043999548 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386669428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=============================>                       (64 + 51) / 115][Stage 156:===================================>                 (78 + 37) / 115][Stage 156:============================================>        (97 + 18) / 115][Stage 156:=================================================>   (108 + 7) / 115]                                                                                [Stage 157:=================================>                   (74 + 42) / 116][Stage 157:=========================================>           (90 + 26) / 116][Stage 157:===============================================>    (105 + 11) / 116][Stage 157:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.806330744 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371570717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (70 + 45) / 115][Stage 158:=======================================>             (85 + 30) / 115][Stage 158:=================================================>   (107 + 8) / 115][Stage 158:====================================================>(113 + 2) / 115]                                                                                [Stage 159:================================>                    (71 + 45) / 116][Stage 159:======================================>              (85 + 31) / 116][Stage 159:============================================>        (97 + 19) / 116][Stage 159:===================================================> (113 + 3) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.113066962 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351180809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==================================>                  (73 + 40) / 113][Stage 160:=======================================>             (85 + 28) / 113][Stage 160:=============================================>       (96 + 17) / 113][Stage 160:===================================================> (109 + 4) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:==================================>                  (75 + 39) / 114][Stage 161:========================================>            (88 + 26) / 114][Stage 161:=============================================>      (100 + 14) / 114][Stage 161:=================================================>   (107 + 7) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.16411396 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389248069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:===============================>                     (67 + 46) / 113][Stage 162:=====================================>               (80 + 33) / 113][Stage 162:=================================================>   (105 + 8) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:===========================>                         (60 + 54) / 114][Stage 163:==================================>                  (74 + 40) / 114][Stage 163:=======================================>             (85 + 29) / 114][Stage 163:==============================================>     (101 + 13) / 114]                                                                                Time elapsed: 2.924094357 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35187139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:====================================>                (77 + 36) / 113][Stage 164:========================================>            (87 + 26) / 113][Stage 164:============================================>        (94 + 19) / 113][Stage 164:==================================================>  (108 + 5) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:====================================>                (79 + 35) / 114][Stage 165:========================================>            (87 + 27) / 114][Stage 165:=============================================>      (100 + 14) / 114][Stage 165:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.001922421 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401624923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (61 + 60) / 121][Stage 166:==============================>                      (69 + 52) / 121][Stage 166:=========================================>           (94 + 27) / 121][Stage 166:===================================================> (117 + 4) / 121]                                                                                [Stage 167:==========================>                          (61 + 61) / 122][Stage 167:=============================>                       (67 + 55) / 122][Stage 167:==================================>                  (80 + 42) / 122][Stage 167:========================================>            (94 + 28) / 122][Stage 167:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 2.954836032 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404414883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:===========================>                         (63 + 57) / 120][Stage 168:====================================>                (82 + 38) / 120][Stage 168:=================================================>   (111 + 9) / 120]                                                                                [Stage 169:==========================>                          (61 + 60) / 121][Stage 169:=============================>                       (68 + 53) / 121][Stage 169:=======================================>             (90 + 31) / 121][Stage 169:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 2.975682386 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357218669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:====================================>                (78 + 35) / 113][Stage 170:=========================================>           (88 + 25) / 113][Stage 170:============================================>        (95 + 18) / 113][Stage 170:==================================================>  (108 + 5) / 113]                                                                                [Stage 171:======================================>              (82 + 32) / 114][Stage 171:===========================================>         (93 + 21) / 114][Stage 171:================================================>    (105 + 9) / 114][Stage 171:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.939520652 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401743246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:>                                                      (0 + 0) / 120][Stage 172:==========================>                          (60 + 60) / 120][Stage 172:===============================>                     (71 + 49) / 120][Stage 172:=========================================>           (95 + 25) / 120][Stage 172:=================================================>   (113 + 7) / 120][Stage 172:===================================================> (117 + 3) / 120]                                                                                [Stage 173:===========================>                         (63 + 58) / 121][Stage 173:==================================>                  (78 + 43) / 121][Stage 173:=========================================>           (95 + 26) / 121][Stage 173:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.134822633 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362621367 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (73 + 45) / 118][Stage 174:===================================>                 (79 + 39) / 118][Stage 174:========================================>            (91 + 27) / 118][Stage 174:==============================================>     (106 + 12) / 118][Stage 174:====================================================>(117 + 1) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:==================================>                  (78 + 41) / 119][Stage 175:=========================================>           (94 + 25) / 119][Stage 175:==============================================>     (106 + 13) / 119][Stage 175:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.038567491 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396917451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (61 + 59) / 120][Stage 176:=============================>                       (67 + 53) / 120][Stage 176:======================================>              (87 + 33) / 120][Stage 176:==================================================>  (114 + 6) / 120]                                                                                [Stage 177:==========================>                          (61 + 60) / 121][Stage 177:==============================>                      (69 + 52) / 121][Stage 177:======================================>              (89 + 32) / 121][Stage 177:===============================================>    (110 + 11) / 121][Stage 177:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.896885072 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382011119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (73 + 45) / 118][Stage 178:==================================>                  (76 + 42) / 118][Stage 178:=======================================>             (89 + 29) / 118][Stage 178:============================================>       (102 + 16) / 118][Stage 178:===================================================> (114 + 4) / 118]                                                                                [Stage 179:================================>                    (74 + 45) / 119][Stage 179:==================================>                  (77 + 42) / 119][Stage 179:======================================>              (86 + 33) / 119][Stage 179:==============================================>     (106 + 13) / 119][Stage 179:=================================================>   (112 + 7) / 119][Stage 179:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.486377928 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398849411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:=============================>                       (66 + 54) / 120][Stage 180:==================================>                  (79 + 41) / 120][Stage 180:===========================================>        (100 + 20) / 120][Stage 180:==================================================>  (115 + 5) / 120]                                                                                [Stage 181:============================>                        (66 + 55) / 121][Stage 181:==================================>                  (78 + 43) / 121][Stage 181:===========================================>        (101 + 20) / 121][Stage 181:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.069552234 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380304802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===================================>                 (75 + 38) / 113][Stage 182:=========================================>           (88 + 25) / 113][Stage 182:==============================================>      (99 + 14) / 113][Stage 182:==================================================>  (107 + 6) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:=====================================>               (80 + 34) / 114][Stage 183:=========================================>           (90 + 24) / 114][Stage 183:=============================================>       (98 + 16) / 114][Stage 183:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.095643546 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372876466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:================================>                    (72 + 46) / 118][Stage 184:===================================>                 (79 + 39) / 118][Stage 184:==========================================>          (95 + 23) / 118][Stage 184:====================================================>(116 + 2) / 118]                                                                                [Stage 185:=================================>                   (76 + 43) / 119][Stage 185:=====================================>               (84 + 35) / 119][Stage 185:=============================================>      (103 + 16) / 119][Stage 185:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.903323592 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356225615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:===================================>                 (80 + 38) / 118][Stage 186:============================================>       (101 + 17) / 118][Stage 186:====================================================>(116 + 2) / 118]                                                                                [Stage 187:================================>                    (74 + 45) / 119][Stage 187:====================================>                (82 + 37) / 119][Stage 187:=============================================>      (105 + 14) / 119]                                                                                Time elapsed: 2.815076163 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356072676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (70 + 43) / 113][Stage 188:======================================>              (83 + 30) / 113][Stage 188:==========================================>          (90 + 23) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:===================================================> (110 + 3) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:=======================================>             (84 + 30) / 114][Stage 189:==========================================>          (91 + 23) / 114][Stage 189:==============================================>     (103 + 11) / 114][Stage 189:===================================================> (110 + 4) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.324551565 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518813153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:===============================>                     (68 + 45) / 113][Stage 190:=====================================>               (81 + 32) / 113][Stage 190:==============================================>     (101 + 12) / 113]                                                                                [Stage 191:============================>                        (61 + 53) / 114][Stage 191:==================================>                  (74 + 40) / 114][Stage 191:==========================================>          (92 + 22) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.142143606 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385074503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (62 + 58) / 120][Stage 192:=================================>                   (75 + 45) / 120][Stage 192:======================================>              (87 + 33) / 120][Stage 192:=================================================>   (112 + 8) / 120][Stage 192:====================================================>(118 + 2) / 120]                                                                                [Stage 193:===========================>                         (62 + 59) / 121][Stage 193:================================>                    (74 + 47) / 121][Stage 193:=======================================>             (90 + 31) / 121][Stage 193:==============================================>     (108 + 13) / 121][Stage 193:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.10681275 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378435007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:=====================================>               (84 + 34) / 118][Stage 194:============================================>       (100 + 18) / 118][Stage 194:====================================================>(116 + 2) / 118]                                                                                [Stage 195:================================>                    (73 + 46) / 119][Stage 195:====================================>                (82 + 37) / 119][Stage 195:==========================================>          (96 + 23) / 119][Stage 195:==================================================>  (113 + 6) / 119][Stage 195:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.141324179 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.329970032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=====================================>               (81 + 34) / 115][Stage 196:========================================>            (87 + 28) / 115][Stage 196:=============================================>      (101 + 14) / 115][Stage 196:===================================================> (111 + 4) / 115]                                                                                [Stage 197:=======================================>             (87 + 29) / 116][Stage 197:============================================>        (98 + 18) / 116][Stage 197:===============================================>    (105 + 11) / 116][Stage 197:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.944392705 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39518732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=================================>                   (72 + 43) / 115][Stage 198:==========================================>          (93 + 22) / 115][Stage 198:==================================================>  (110 + 5) / 115]                                                                                [Stage 199:====================================>                (80 + 36) / 116][Stage 199:============================================>        (97 + 19) / 116][Stage 199:==================================================>  (110 + 6) / 116][Stage 199:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.750900969 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39597604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 60) / 120][Stage 200:============================>                        (65 + 55) / 120][Stage 200:=====================================>               (84 + 36) / 120][Stage 200:=============================================>      (105 + 15) / 120][Stage 200:===================================================> (116 + 4) / 120]                                                                                [Stage 201:==========================>                          (61 + 60) / 121][Stage 201:===============================>                     (72 + 49) / 121][Stage 201:====================================>                (84 + 37) / 121][Stage 201:==========================================>          (96 + 25) / 121][Stage 201:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.143124217 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m51.656s
user	11m35.984s
sys	0m28.832s
