Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 11:07:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:08:08 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:08:08 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:08:09 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 11:08:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:08:22 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522110811-0451).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.375266582 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:========================>                              (51 + 64) / 115][Stage 0:=========================>                             (53 + 62) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:======================================================>(114 + 2) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.829490431 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 48  OR  pa rtitionIndex = 4  OR  partitionIndex = 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.896873507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (41 + 79) / 120][Stage 2:========================>                              (53 + 67) / 120][Stage 2:===========================>                           (60 + 60) / 120][Stage 2:=============================>                         (64 + 56) / 120][Stage 2:==============================>                        (67 + 53) / 120][Stage 2:====================================>                  (79 + 41) / 120][Stage 2:==========================================>            (92 + 28) / 120][Stage 2:===============================================>      (105 + 15) / 120][Stage 2:====================================================>  (114 + 6) / 120][Stage 2:=====================================================> (117 + 3) / 120][Stage 2:======================================================>(118 + 2) / 120]                                                                                [Stage 3:===========================>                           (60 + 61) / 121][Stage 3:============================>                          (63 + 58) / 121][Stage 3:================================>                      (71 + 50) / 121][Stage 3:======================================>                (85 + 36) / 121][Stage 3:=============================================>         (99 + 22) / 121][Stage 3:================================================>     (109 + 12) / 121][Stage 3:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 5.356363558 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  pa rtitionIndex = 98  OR  partitionIndex = 99 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.68614334 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=============================>                         (61 + 54) / 115][Stage 4:===============================>                       (65 + 50) / 115][Stage 4:=================================>                     (69 + 46) / 115][Stage 4:====================================>                  (77 + 38) / 115][Stage 4:======================================>                (80 + 35) / 115][Stage 4:============================================>          (92 + 23) / 115][Stage 4:====================================================>  (109 + 6) / 115][Stage 4:======================================================>(114 + 1) / 115]                                                                                [Stage 5:==============================>                        (65 + 51) / 116][Stage 5:==================================>                    (72 + 44) / 116][Stage 5:=====================================>                 (79 + 37) / 116][Stage 5:========================================>              (86 + 30) / 116][Stage 5:=============================================>         (96 + 20) / 116][Stage 5:=================================================>    (106 + 10) / 116]                                                                                Time elapsed: 4.031804076 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  pa rtitionIndex = 33  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.57492439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (60 + 55) / 115][Stage 6:==================================>                    (72 + 43) / 115][Stage 6:====================================>                  (76 + 39) / 115][Stage 6:=======================================>               (83 + 32) / 115][Stage 6:===========================================>           (91 + 24) / 115][Stage 6:==================================================>    (106 + 9) / 115][Stage 6:====================================================>  (109 + 6) / 115][Stage 6:=====================================================> (111 + 4) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:==============================>                        (65 + 51) / 116][Stage 7:===================================>                   (74 + 42) / 116][Stage 7:====================================>                  (78 + 38) / 116][Stage 7:=======================================>               (83 + 33) / 116][Stage 7:===========================================>           (92 + 24) / 116][Stage 7:=================================================>    (106 + 10) / 116][Stage 7:====================================================>  (110 + 6) / 116][Stage 7:=====================================================> (112 + 4) / 116][Stage 7:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.549890823 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  pa rtitionIndex = 68  OR  partitionIndex = 69 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.626889984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=========================>                             (56 + 64) / 120][Stage 8:==========================>                            (58 + 62) / 120][Stage 8:===============================>                       (69 + 51) / 120][Stage 8:======================================>                (83 + 37) / 120][Stage 8:===========================================>           (95 + 25) / 120][Stage 8:=============================================>        (101 + 19) / 120][Stage 8:==================================================>    (111 + 9) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:=============================>                         (65 + 56) / 121][Stage 9:================================>                      (72 + 49) / 121][Stage 9:========================================>              (89 + 32) / 121][Stage 9:=============================================>        (101 + 20) / 121][Stage 9:=================================================>    (111 + 10) / 121]                                                                                Time elapsed: 4.336810996 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR   partitionIndex = 192  OR  partitionIndex = 193 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.576842654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (64 + 51) / 115][Stage 10:================================>                     (69 + 46) / 115][Stage 10:==================================>                   (74 + 41) / 115][Stage 10:=========================================>            (89 + 26) / 115][Stage 10:==============================================>       (98 + 17) / 115][Stage 10:===============================================>     (104 + 11) / 115][Stage 10:====================================================> (111 + 4) / 115]                                                                                [Stage 11:==============================>                       (66 + 50) / 116][Stage 11:==================================>                   (75 + 41) / 116][Stage 11:========================================>             (86 + 30) / 116][Stage 11:=============================================>       (100 + 16) / 116][Stage 11:==============================================>      (102 + 14) / 116][Stage 11:==================================================>   (109 + 7) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.094847342 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 89  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.607232946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:===============================>                      (70 + 50) / 120][Stage 12:=====================================>                (84 + 36) / 120][Stage 12:===========================================>          (97 + 23) / 120][Stage 12:============================================>        (101 + 19) / 120][Stage 12:=================================================>    (111 + 9) / 120][Stage 12:=====================================================>(119 + 1) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (67 + 54) / 121][Stage 13:=====================================>                (84 + 37) / 121][Stage 13:=============================================>       (104 + 17) / 121][Stage 13:==================================================>   (113 + 8) / 121][Stage 13:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.124617437 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  pa rtitionIndex = 32  OR  partitionIndex = 33 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.585953985 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:============================>                         (64 + 57) / 121][Stage 14:===================================>                  (79 + 42) / 121][Stage 14:========================================>             (91 + 30) / 121][Stage 14:================================================>    (111 + 10) / 121][Stage 14:====================================================> (117 + 4) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:=============================>                        (66 + 56) / 122][Stage 15:=====================================>                (84 + 38) / 122][Stage 15:=============================================>       (105 + 17) / 122][Stage 15:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.821875041 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 77  OR  partitionIndex = 78 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545197486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:==============================>                       (67 + 53) / 120][Stage 16:======================================>               (86 + 34) / 120][Stage 16:===============================================>     (108 + 12) / 120][Stage 16:=====================================================>(119 + 1) / 120]                                                                                [Stage 17:==========================>                           (60 + 61) / 121][Stage 17:===========================>                          (62 + 59) / 121][Stage 17:===================================>                  (79 + 42) / 121][Stage 17:==============================================>      (106 + 15) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.30612125 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502822244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (70 + 43) / 113][Stage 18:====================================>                 (77 + 36) / 113][Stage 18:==========================================>           (88 + 25) / 113][Stage 18:============================================>         (94 + 19) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:====================================================> (109 + 4) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:==================================>                   (73 + 41) / 114][Stage 19:=====================================>                (80 + 34) / 114][Stage 19:==============================================>       (98 + 16) / 114][Stage 19:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.366145835 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  pa rtitionIndex = 60  OR  partitionIndex = 61 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522832764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (60 + 61) / 121][Stage 20:============================>                         (63 + 58) / 121][Stage 20:==================================>                   (77 + 44) / 121][Stage 20:=======================================>              (88 + 33) / 121][Stage 20:===============================================>     (108 + 13) / 121][Stage 20:====================================================> (117 + 4) / 121][Stage 20:=====================================================>(120 + 1) / 121]                                                                                [Stage 21:===========================>                          (61 + 61) / 122][Stage 21:=============================>                        (67 + 55) / 122][Stage 21:====================================>                 (83 + 39) / 122][Stage 21:=============================================>       (105 + 17) / 122][Stage 21:===================================================>  (117 + 5) / 122][Stage 21:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.014069709 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521204903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:==============================>                       (67 + 53) / 120][Stage 22:=======================================>              (87 + 33) / 120][Stage 22:===============================================>     (107 + 13) / 120][Stage 22:=====================================================>(119 + 1) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:============================>                         (64 + 57) / 121][Stage 23:=================================>                    (75 + 46) / 121][Stage 23:===========================================>          (98 + 23) / 121][Stage 23:==================================================>   (113 + 8) / 121][Stage 23:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.657967457 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR   partitionIndex = 221  OR  partitionIndex = 235 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510881374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:==============================>                       (67 + 53) / 120][Stage 24:======================================>               (86 + 34) / 120][Stage 24:================================================>    (109 + 11) / 120][Stage 24:====================================================> (117 + 3) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:==============================>                       (68 + 53) / 121][Stage 25:=====================================>                (84 + 37) / 121][Stage 25:==============================================>      (107 + 14) / 121][Stage 25:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.570414214 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 216  OR   partitionIndex = 217  OR  partitionIndex = 231 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52696749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:=============================>                        (66 + 54) / 120][Stage 26:==================================>                   (76 + 44) / 120][Stage 26:============================================>         (98 + 22) / 120][Stage 26:=================================================>    (111 + 9) / 120][Stage 26:====================================================> (116 + 4) / 120]                                                                                [Stage 27:===========================>                          (61 + 60) / 121][Stage 27:=================================>                    (74 + 47) / 121][Stage 27:========================================>             (91 + 30) / 121][Stage 27:==============================================>      (107 + 14) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.64156975 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  pa rtitionIndex = 38  OR  partitionIndex = 39 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460709245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=============================>                        (63 + 52) / 115][Stage 28:==================================>                   (74 + 41) / 115][Stage 28:========================================>             (87 + 28) / 115][Stage 28:=============================================>        (96 + 19) / 115][Stage 28:===============================================>     (104 + 11) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:=================================>                    (72 + 44) / 116][Stage 29:=======================================>              (85 + 31) / 116][Stage 29:===============================================>     (103 + 13) / 116][Stage 29:====================================================> (112 + 4) / 116][Stage 29:=====================================================>(114 + 2) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.827529463 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490828956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:==================================>                   (73 + 40) / 113][Stage 30:==========================================>           (89 + 24) / 113][Stage 30:================================================>    (103 + 10) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:==============================>                       (64 + 50) / 114][Stage 31:=====================================>                (79 + 35) / 114][Stage 31:=============================================>        (95 + 19) / 114][Stage 31:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.750548792 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  pa rtitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406043151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:======================================>               (81 + 34) / 115][Stage 32:=========================================>            (88 + 27) / 115][Stage 32:=============================================>        (96 + 19) / 115][Stage 32:==================================================>   (108 + 7) / 115][Stage 32:=====================================================>(114 + 1) / 115]                                                                                [Stage 33:=======================================>              (85 + 31) / 116][Stage 33:=============================================>        (98 + 18) / 116][Stage 33:==============================================>      (102 + 14) / 116][Stage 33:==================================================>   (109 + 7) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.58626747 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  pa rtitionIndex = 15  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550811658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:===========================>                          (61 + 60) / 121][Stage 34:=================================>                    (74 + 47) / 121][Stage 34:===========================================>          (98 + 23) / 121][Stage 34:===================================================>  (116 + 5) / 121]                                                                                [Stage 35:===========================>                          (63 + 59) / 122][Stage 35:==============================>                       (70 + 52) / 122][Stage 35:=====================================>                (84 + 38) / 122][Stage 35:============================================>        (103 + 19) / 122][Stage 35:===================================================>  (117 + 5) / 122][Stage 35:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.751205622 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR   partitionIndex = 186  OR  partitionIndex = 187 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490525517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==============================>                       (66 + 49) / 115][Stage 36:=======================================>              (85 + 30) / 115][Stage 36:=============================================>        (97 + 18) / 115][Stage 36:=====================================================>(113 + 2) / 115]                                                                                [Stage 37:===============================>                      (68 + 48) / 116][Stage 37:=========================================>            (89 + 27) / 116][Stage 37:===============================================>     (104 + 12) / 116][Stage 37:==================================================>   (109 + 7) / 116][Stage 37:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.019093164 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 4  OR  par titionIndex = 5  OR  partitionIndex = 19 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491321999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:==============================>                       (68 + 53) / 121][Stage 38:====================================>                 (81 + 40) / 121][Stage 38:================================================>    (111 + 10) / 121][Stage 38:=====================================================>(120 + 1) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:============================>                         (65 + 57) / 122][Stage 39:==================================>                   (79 + 43) / 122][Stage 39:==========================================>           (96 + 26) / 122][Stage 39:===============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.376773691 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR  p artitionIndex = 114  OR  partitionIndex = 100 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453954981 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:============================>                         (59 + 54) / 113][Stage 40:==================================>                   (72 + 41) / 113][Stage 40:=========================================>            (87 + 26) / 113][Stage 40:=================================================>    (104 + 9) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:==================================>                   (73 + 41) / 114][Stage 41:========================================>             (85 + 29) / 114][Stage 41:===============================================>     (103 + 11) / 114][Stage 41:===================================================>  (109 + 5) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.563246445 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33  OR  partitionIndex = 47  OR  pa rtitionIndex = 48  OR  partitionIndex = 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436470864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:================================>                     (72 + 46) / 118][Stage 42:==================================>                   (75 + 43) / 118][Stage 42:====================================>                 (79 + 39) / 118][Stage 42:=======================================>              (87 + 31) / 118][Stage 42:============================================>        (100 + 18) / 118][Stage 42:=================================================>    (109 + 9) / 118][Stage 42:=====================================================>(116 + 2) / 118]                                                                                [Stage 43:=================================>                    (73 + 46) / 119][Stage 43:==================================>                   (75 + 44) / 119][Stage 43:====================================>                 (81 + 38) / 119][Stage 43:==========================================>           (94 + 25) / 119][Stage 43:==================================================>   (112 + 7) / 119][Stage 43:===================================================>  (114 + 5) / 119][Stage 43:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.891165624 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 17  OR  partitionIndex = 18 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486687916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:=============================>                        (66 + 54) / 120][Stage 44:==================================>                   (77 + 43) / 120][Stage 44:============================================>        (101 + 19) / 120][Stage 44:====================================================> (117 + 3) / 120]                                                                                [Stage 45:=============================>                        (65 + 56) / 121][Stage 45:====================================>                 (82 + 39) / 121][Stage 45:===========================================>          (97 + 24) / 121][Stage 45:==================================================>   (113 + 8) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.383602131 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445978835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (72 + 43) / 115][Stage 46:======================================>               (82 + 33) / 115][Stage 46:==================================================>   (107 + 8) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:===================================>                  (77 + 39) / 116][Stage 47:============================================>         (96 + 20) / 116][Stage 47:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.807760127 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456134186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==============================>                       (66 + 49) / 115][Stage 48:===================================>                  (75 + 40) / 115][Stage 48:========================================>             (87 + 28) / 115][Stage 48:===============================================>     (102 + 13) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:================================>                     (70 + 46) / 116][Stage 49:======================================>               (83 + 33) / 116][Stage 49:==============================================>      (101 + 15) / 116][Stage 49:==================================================>   (109 + 7) / 116][Stage 49:====================================================> (113 + 3) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.3176128 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427842818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:======================================>               (84 + 34) / 118][Stage 50:=============================================>        (99 + 19) / 118][Stage 50:====================================================> (114 + 4) / 118]                                                                                [Stage 51:=================================>                    (73 + 46) / 119][Stage 51:====================================>                 (81 + 38) / 119][Stage 51:============================================>         (97 + 22) / 119][Stage 51:================================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.292614232 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402231312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:======================================>               (85 + 33) / 118][Stage 52:==============================================>      (104 + 14) / 118][Stage 52:====================================================> (115 + 3) / 118]                                                                                [Stage 53:=================================>                    (73 + 46) / 119][Stage 53:==================================>                   (77 + 42) / 119][Stage 53:=======================================>              (88 + 31) / 119][Stage 53:===============================================>     (107 + 12) / 119][Stage 53:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.046321283 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403511594 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:====================================>                 (77 + 36) / 113][Stage 54:=========================================>            (87 + 26) / 113][Stage 54:===============================================>      (99 + 14) / 113][Stage 54:==================================================>   (106 + 7) / 113][Stage 54:====================================================> (110 + 3) / 113]                                                                                [Stage 55:=======================================>              (84 + 30) / 114][Stage 55:=============================================>        (97 + 17) / 114][Stage 55:==================================================>   (106 + 8) / 114][Stage 55:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.089116211 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR   partitionIndex = 133  OR  partitionIndex = 147 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431259883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:=======================================>              (86 + 32) / 118][Stage 56:===============================================>     (106 + 12) / 118][Stage 56:=====================================================>(116 + 2) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:====================================>                 (80 + 39) / 119][Stage 57:===========================================>          (96 + 23) / 119][Stage 57:==================================================>   (112 + 7) / 119][Stage 57:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.102873648 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR   partitionIndex = 170  OR  partitionIndex = 156 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457872811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:============================>                         (63 + 58) / 121][Stage 58:=================================>                    (74 + 47) / 121][Stage 58:===========================================>         (100 + 21) / 121][Stage 58:====================================================> (118 + 3) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:============================>                         (65 + 57) / 122][Stage 59:==================================>                   (79 + 43) / 122][Stage 59:=============================================>       (105 + 17) / 122][Stage 59:====================================================> (118 + 4) / 122][Stage 59:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.769270637 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  pa rtitionIndex = 56  OR  partitionIndex = 12 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454136748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (60 + 53) / 113][Stage 60:================================>                     (68 + 45) / 113][Stage 60:======================================>               (81 + 32) / 113]                                                                                [Stage 61:=============================>                        (62 + 52) / 114][Stage 61:======================================>               (82 + 32) / 114][Stage 61:============================================>         (94 + 20) / 114][Stage 61:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.273722692 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR   partitionIndex = 165  OR  partitionIndex = 179 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450934144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:==============================>                       (63 + 50) / 113][Stage 62:=========================================>            (86 + 27) / 113][Stage 62:==================================================>   (106 + 7) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:=================================>                    (70 + 44) / 114][Stage 63:==========================================>           (90 + 24) / 114][Stage 63:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.141120038 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  pa rtitionIndex = 90  OR  partitionIndex = 91 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441321496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:===========================>                          (62 + 58) / 120][Stage 64:=======================================>              (87 + 33) / 120][Stage 64:================================================>    (110 + 10) / 120][Stage 64:=====================================================>(119 + 1) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:===============================>                      (71 + 50) / 121][Stage 65:=========================================>            (93 + 28) / 121][Stage 65:==================================================>   (114 + 7) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.331593599 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427400782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==================================>                   (72 + 41) / 113][Stage 66:========================================>             (85 + 28) / 113][Stage 66:=============================================>        (95 + 18) / 113][Stage 66:==================================================>   (106 + 7) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:=======================================>              (83 + 31) / 114][Stage 67:===========================================>          (92 + 22) / 114][Stage 67:=================================================>    (105 + 9) / 114][Stage 67:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.042671564 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  pa rtitionIndex = 84  OR  partitionIndex = 70 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40688026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (74 + 44) / 118][Stage 68:======================================>               (84 + 34) / 118][Stage 68:===============================================>     (106 + 12) / 118][Stage 68:===================================================>  (113 + 5) / 118]                                                                                [Stage 69:==================================>                   (76 + 43) / 119][Stage 69:=========================================>            (91 + 28) / 119][Stage 69:=================================================>    (110 + 9) / 119][Stage 69:====================================================> (116 + 3) / 119][Stage 69:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.309249363 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR   partitionIndex = 168  OR  partitionIndex = 124 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468855525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:=============================>                        (65 + 55) / 120][Stage 70:==================================>                   (77 + 43) / 120][Stage 70:==========================================>           (94 + 26) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:=================================>                    (74 + 47) / 121][Stage 71:=======================================>              (88 + 33) / 121][Stage 71:===============================================>     (109 + 12) / 121][Stage 71:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.300359478 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  par titionIndex = 20  OR  partitionIndex = 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413911069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:===============================>                      (66 + 47) / 113][Stage 72:======================================>               (80 + 33) / 113][Stage 72:==================================================>   (105 + 8) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:=============================>                        (62 + 52) / 114][Stage 73:==================================>                   (73 + 41) / 114][Stage 73:==============================================>       (99 + 15) / 114][Stage 73:================================================>    (104 + 10) / 114][Stage 73:====================================================> (111 + 3) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.998198826 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400711476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===================================>                  (76 + 39) / 115][Stage 74:=============================================>        (97 + 18) / 115][Stage 74:==================================================>   (107 + 8) / 115][Stage 74:====================================================> (112 + 3) / 115]                                                                                [Stage 75:================================>                     (69 + 47) / 116][Stage 75:=====================================>                (80 + 36) / 116][Stage 75:============================================>         (95 + 21) / 116][Stage 75:===================================================>  (111 + 5) / 116][Stage 75:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.894448464 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  pa rtitionIndex = 67  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405332341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (73 + 40) / 113][Stage 76:========================================>             (85 + 28) / 113][Stage 76:=============================================>        (95 + 18) / 113][Stage 76:=================================================>    (104 + 9) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:======================================>               (82 + 32) / 114][Stage 77:===========================================>          (92 + 22) / 114][Stage 77:==============================================>      (100 + 14) / 114][Stage 77:====================================================> (110 + 4) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.193355838 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR   partitionIndex = 136  OR  partitionIndex = 122 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390764366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:===================================>                  (77 + 41) / 118][Stage 78:==========================================>           (93 + 25) / 118][Stage 78:====================================================> (114 + 4) / 118]                                                                                [Stage 79:=================================>                    (74 + 45) / 119][Stage 79:======================================>               (85 + 34) / 119][Stage 79:===============================================>     (106 + 13) / 119]                                                                                Time elapsed: 3.030898393 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366383781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (82 + 33) / 115][Stage 80:===========================================>          (92 + 23) / 115][Stage 80:=================================================>    (106 + 9) / 115][Stage 80:=====================================================>(113 + 2) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:=======================================>              (85 + 31) / 116][Stage 81:=============================================>        (98 + 18) / 116][Stage 81:====================================================> (112 + 4) / 116][Stage 81:====================================================> (113 + 3) / 116][Stage 81:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.035422601 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3835088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (70 + 43) / 113][Stage 82:=====================================>                (79 + 34) / 113][Stage 82:==============================================>       (97 + 16) / 113][Stage 82:====================================================> (109 + 4) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:===================================>                  (74 + 40) / 114][Stage 83:=======================================>              (84 + 30) / 114][Stage 83:============================================>         (94 + 20) / 114][Stage 83:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.749525366 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84  OR  pa rtitionIndex = 70  OR  partitionIndex = 71 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398659796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=================================>                    (72 + 43) / 115][Stage 84:=========================================>            (88 + 27) / 115][Stage 84:===============================================>     (104 + 11) / 115][Stage 84:=====================================================>(114 + 1) / 115]                                                                                [Stage 85:=================================>                    (73 + 43) / 116][Stage 85:==========================================>           (92 + 24) / 116][Stage 85:==================================================>   (109 + 7) / 116][Stage 85:====================================================> (113 + 3) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.00017071 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  pa rtitionIndex = 30  OR  partitionIndex = 31 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351344767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:======================================>               (81 + 34) / 115][Stage 86:========================================>             (87 + 28) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:====================================================> (111 + 4) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:=======================================>              (84 + 32) / 116][Stage 87:============================================>         (96 + 20) / 116][Stage 87:================================================>    (106 + 10) / 116][Stage 87:===================================================>  (110 + 6) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.754467742 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427034946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:===============================>                      (66 + 47) / 113][Stage 88:====================================>                 (77 + 36) / 113][Stage 88:==============================================>       (97 + 16) / 113][Stage 88:==================================================>   (106 + 7) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:============================>                         (61 + 53) / 114][Stage 89:==================================>                   (72 + 42) / 114][Stage 89:==========================================>           (90 + 24) / 114][Stage 89:=================================================>    (105 + 9) / 114][Stage 89:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.722420552 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392813091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:==================================>                   (76 + 42) / 118][Stage 90:=======================================>              (86 + 32) / 118][Stage 90:===============================================>     (106 + 12) / 118][Stage 90:=====================================================>(117 + 1) / 118]                                                                                [Stage 91:==================================>                   (75 + 44) / 119][Stage 91:========================================>             (89 + 30) / 119][Stage 91:============================================>        (100 + 19) / 119][Stage 91:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.262265416 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR  p artitionIndex = 93  OR  partitionIndex = 107 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419025658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (58 + 55) / 113][Stage 92:===============================>                      (65 + 48) / 113][Stage 92:======================================>               (80 + 33) / 113][Stage 92:===============================================>     (102 + 11) / 113][Stage 92:====================================================> (110 + 3) / 113]                                                                                [Stage 93:=============================>                        (62 + 52) / 114][Stage 93:====================================>                 (76 + 38) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.22468566 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 29  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346097603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (81 + 34) / 115][Stage 94:========================================>             (87 + 28) / 115][Stage 94:==============================================>      (100 + 15) / 115][Stage 94:====================================================> (112 + 3) / 115]                                                                                [Stage 95:=======================================>              (85 + 31) / 116][Stage 95:=============================================>        (97 + 19) / 116][Stage 95:==================================================>   (109 + 7) / 116][Stage 95:===================================================>  (111 + 5) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.887201058 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355344274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=======================================>              (84 + 31) / 115][Stage 96:==========================================>           (91 + 24) / 115][Stage 96:===============================================>     (103 + 12) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:=========================================>            (89 + 27) / 116][Stage 97:=============================================>       (100 + 16) / 116][Stage 97:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.724570102 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412645534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:=============================>                        (65 + 55) / 120][Stage 98:=====================================>                (84 + 36) / 120][Stage 98:=============================================>       (102 + 18) / 120][Stage 98:=====================================================>(119 + 1) / 120]                                                                                [Stage 99:===========================>                          (61 + 60) / 121][Stage 99:============================>                         (64 + 57) / 121][Stage 99:=====================================>                (85 + 36) / 121][Stage 99:=============================================>       (103 + 18) / 121][Stage 99:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.431238248 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 51  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520775228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (60 + 53) / 113][Stage 100:=================================>                   (72 + 41) / 113][Stage 100:==========================================>          (90 + 23) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:=============================>                       (63 + 51) / 114][Stage 101:==================================>                  (75 + 39) / 114][Stage 101:=============================================>       (98 + 16) / 114][Stage 101:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.296503769 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR   partitionIndex = 164  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359843059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (76 + 37) / 113][Stage 102:========================================>            (86 + 27) / 113][Stage 102:============================================>        (95 + 18) / 113][Stage 102:=================================================>   (105 + 8) / 113][Stage 102:===================================================> (109 + 4) / 113]                                                                                [Stage 103:======================================>              (83 + 31) / 114][Stage 103:===========================================>         (94 + 20) / 114][Stage 103:==============================================>     (101 + 13) / 114][Stage 103:===================================================> (110 + 4) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.225140818 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  pa rtitionIndex = 45  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380259941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (70 + 43) / 113][Stage 104:====================================>                (77 + 36) / 113][Stage 104:============================================>        (94 + 19) / 113][Stage 104:==============================================>     (102 + 11) / 113][Stage 104:==================================================>  (108 + 5) / 113][Stage 104:====================================================>(111 + 2) / 113]                                                                                [Stage 105:=====================================>               (80 + 34) / 114][Stage 105:===========================================>         (94 + 20) / 114][Stage 105:===============================================>    (104 + 10) / 114][Stage 105:==================================================>  (109 + 5) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.073416556 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399857002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:=============================>                       (62 + 51) / 113][Stage 106:=====================================>               (80 + 33) / 113][Stage 106:==============================================>     (102 + 11) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:===========================>                         (60 + 54) / 114][Stage 107:===============================>                     (68 + 46) / 114][Stage 107:========================================>            (87 + 27) / 114][Stage 107:==============================================>     (103 + 11) / 114][Stage 107:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.372949762 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  part itionIndex = 15  OR  partitionIndex = 16 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385326208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (75 + 43) / 118][Stage 108:====================================>                (81 + 37) / 118][Stage 108:======================================>              (86 + 32) / 118][Stage 108:============================================>        (98 + 20) / 118][Stage 108:================================================>    (109 + 9) / 118][Stage 108:====================================================>(117 + 1) / 118]                                                                                [Stage 109:================================>                    (74 + 45) / 119][Stage 109:==================================>                  (78 + 41) / 119][Stage 109:=====================================>               (84 + 35) / 119][Stage 109:=========================================>           (93 + 26) / 119][Stage 109:==============================================>     (107 + 12) / 119][Stage 109:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.817591516 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR   partitionIndex = 187  OR  partitionIndex = 201 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392916016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:============================>                        (64 + 56) / 120][Stage 110:================================>                    (73 + 47) / 120][Stage 110:==========================================>          (97 + 23) / 120]                                                                                [Stage 111:==========================>                          (61 + 60) / 121][Stage 111:===============================>                     (72 + 49) / 121][Stage 111:=====================================>               (85 + 36) / 121][Stage 111:===============================================>    (110 + 11) / 121][Stage 111:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.977062509 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362713045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=====================================>               (80 + 33) / 113][Stage 112:==========================================>          (91 + 22) / 113][Stage 112:=============================================>       (98 + 15) / 113][Stage 112:===================================================> (110 + 3) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:====================================>                (79 + 35) / 114][Stage 113:=========================================>           (90 + 24) / 114][Stage 113:============================================>        (96 + 18) / 114][Stage 113:=================================================>   (106 + 8) / 114][Stage 113:==================================================>  (108 + 6) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.729320372 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR   partitionIndex = 162  OR  partitionIndex = 163 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38618607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=================================>                   (72 + 43) / 115][Stage 114:========================================>            (87 + 28) / 115][Stage 114:=============================================>       (98 + 17) / 115][Stage 114:===================================================> (112 + 3) / 115]                                                                                [Stage 115:===============================>                     (70 + 46) / 116][Stage 115:=====================================>               (82 + 34) / 116][Stage 115:===========================================>         (95 + 21) / 116][Stage 115:==================================================>  (110 + 6) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.928797047 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR   partitionIndex = 166  OR  partitionIndex = 152 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392066477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===============================>                     (69 + 46) / 115][Stage 116:=======================================>             (85 + 30) / 115][Stage 116:===============================================>    (104 + 11) / 115][Stage 116:===================================================> (112 + 3) / 115]                                                                                [Stage 117:==============================>                      (67 + 49) / 116][Stage 117:========================================>            (88 + 28) / 116][Stage 117:============================================>        (98 + 18) / 116][Stage 117:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.564443543 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 145 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400015004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 61) / 121][Stage 118:============================>                        (64 + 57) / 121][Stage 118:================================>                    (75 + 46) / 121][Stage 118:==========================================>         (100 + 21) / 121][Stage 118:===================================================> (118 + 3) / 121]                                                                                [Stage 119:==========================>                          (61 + 61) / 122][Stage 119:============================>                        (66 + 56) / 122][Stage 119:==================================>                  (80 + 42) / 122][Stage 119:===============================================>    (111 + 11) / 122][Stage 119:===================================================> (119 + 3) / 122][Stage 119:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.674502305 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR   partitionIndex = 184  OR  partitionIndex = 185 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350425093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==================================>                  (74 + 39) / 113][Stage 120:=======================================>             (85 + 28) / 113][Stage 120:=============================================>       (96 + 17) / 113][Stage 120:=================================================>   (106 + 7) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:=======================================>             (85 + 29) / 114][Stage 121:==========================================>          (92 + 22) / 114][Stage 121:==============================================>      (99 + 15) / 114][Stage 121:==================================================>  (109 + 5) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.229518996 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 152  OR  partitionIndex = 153 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386848452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:============================>                        (60 + 53) / 113][Stage 122:=================================>                   (71 + 42) / 113][Stage 122:=======================================>             (85 + 28) / 113][Stage 122:==============================================>     (102 + 11) / 113][Stage 122:===================================================> (109 + 4) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:===============================>                     (67 + 47) / 114][Stage 123:=====================================>               (81 + 33) / 114][Stage 123:==============================================>     (101 + 13) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.29582473 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 205  OR  partitionIndex = 206 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391957837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (70 + 45) / 115][Stage 124:====================================>                (79 + 36) / 115][Stage 124:========================================>            (88 + 27) / 115][Stage 124:=================================================>   (108 + 7) / 115][Stage 124:====================================================>(113 + 2) / 115]                                                                                [Stage 125:==============================>                      (66 + 50) / 116][Stage 125:=====================================>               (82 + 34) / 116][Stage 125:===========================================>         (95 + 21) / 116][Stage 125:================================================>    (107 + 9) / 116][Stage 125:===================================================> (113 + 3) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.151493879 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR   partitionIndex = 64  OR  partitionIndex = 65 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367948972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=======================================>             (86 + 29) / 115][Stage 126:============================================>        (96 + 19) / 115][Stage 126:==================================================>  (109 + 6) / 115][Stage 126:====================================================>(114 + 1) / 115]                                                                                [Stage 127:========================================>            (88 + 28) / 116][Stage 127:===========================================>         (96 + 20) / 116][Stage 127:=================================================>   (108 + 8) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.99942498 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 126  OR   partitionIndex = 127  OR  partitionIndex = 141 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413188621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (63 + 57) / 120][Stage 128:===============================>                     (72 + 48) / 120][Stage 128:=========================================>           (95 + 25) / 120][Stage 128:=================================================>   (111 + 9) / 120][Stage 128:====================================================>(119 + 1) / 120]                                                                                [Stage 129:===========================>                         (63 + 58) / 121][Stage 129:===================================>                 (80 + 41) / 121][Stage 129:==========================================>          (98 + 23) / 121][Stage 129:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.437065371 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR   partitionIndex = 101  OR  partitionIndex = 115 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353775938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:====================================>                (77 + 36) / 113][Stage 130:======================================>              (82 + 31) / 113][Stage 130:============================================>        (94 + 19) / 113][Stage 130:==============================================>     (100 + 13) / 113][Stage 130:===================================================> (110 + 3) / 113]                                                                                [Stage 131:======================================>              (82 + 32) / 114][Stage 131:==========================================>          (92 + 22) / 114][Stage 131:==============================================>     (102 + 12) / 114][Stage 131:==================================================>  (109 + 5) / 114][Stage 131:===================================================> (111 + 3) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.367967321 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR   partitionIndex = 216  OR  partitionIndex = 217 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353875559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==================================>                  (73 + 40) / 113][Stage 132:======================================>              (82 + 31) / 113][Stage 132:============================================>        (94 + 19) / 113][Stage 132:==============================================>     (101 + 12) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:======================================>              (82 + 32) / 114][Stage 133:=========================================>           (90 + 24) / 114][Stage 133:==============================================>     (102 + 12) / 114][Stage 133:===================================================> (110 + 4) / 114][Stage 133:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.122390182 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  pa rtitionIndex = 12  OR  partitionIndex = 13 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383647571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:=============================>                       (62 + 51) / 113][Stage 134:==================================>                  (73 + 40) / 113][Stage 134:=============================================>       (96 + 17) / 113][Stage 134:====================================================>(111 + 2) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:============================>                        (62 + 52) / 114][Stage 135:=====================================>               (81 + 33) / 114][Stage 135:=============================================>       (97 + 17) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.29514321 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (61 + 59) / 120][Stage 136:=================================>                   (75 + 45) / 120][Stage 136:==========================================>          (97 + 23) / 120][Stage 136:====================================================>(118 + 2) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:==================================>                  (78 + 43) / 121][Stage 137:===========================================>        (102 + 19) / 121][Stage 137:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.103054687 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358616245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=================================>                   (74 + 44) / 118][Stage 138:======================================>              (86 + 32) / 118][Stage 138:============================================>       (101 + 17) / 118][Stage 138:===================================================> (115 + 3) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:==================================>                  (77 + 42) / 119][Stage 139:=========================================>           (93 + 26) / 119][Stage 139:=============================================>      (104 + 15) / 119][Stage 139:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.022610724 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382880091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:=============================>                       (62 + 51) / 113][Stage 140:====================================>                (77 + 36) / 113][Stage 140:============================================>        (95 + 18) / 113][Stage 140:=================================================>   (105 + 8) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:=============================>                       (63 + 51) / 114][Stage 141:====================================>                (79 + 35) / 114][Stage 141:=========================================>           (90 + 24) / 114][Stage 141:================================================>    (105 + 9) / 114][Stage 141:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.659588452 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  pa rtitionIndex = 82  OR  partitionIndex = 94 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362498569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (73 + 45) / 118][Stage 142:=================================>                   (75 + 43) / 118][Stage 142:===================================>                 (80 + 38) / 118][Stage 142:=======================================>             (89 + 29) / 118][Stage 142:===============================================>    (107 + 11) / 118]                                                                                [Stage 143:================================>                    (73 + 46) / 119][Stage 143:==================================>                  (78 + 41) / 119][Stage 143:=====================================>               (85 + 34) / 119][Stage 143:=========================================>           (93 + 26) / 119][Stage 143:============================================>       (101 + 18) / 119][Stage 143:==================================================>  (113 + 6) / 119][Stage 143:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.909403625 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  pa rtitionIndex = 95  OR  partitionIndex = 109 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390108059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:=============================>                       (67 + 53) / 120][Stage 144:===================================>                 (80 + 40) / 120][Stage 144:==========================================>          (97 + 23) / 120][Stage 144:==================================================>  (114 + 6) / 120]                                                                                [Stage 145:============================>                        (66 + 55) / 121][Stage 145:=================================>                   (77 + 44) / 121][Stage 145:=========================================>           (94 + 27) / 121][Stage 145:=================================================>   (114 + 7) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.311060085 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  pa rtitionIndex = 76  OR  partitionIndex = 62 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332427418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=====================================>               (81 + 34) / 115][Stage 146:===========================================>         (95 + 20) / 115][Stage 146:==============================================>     (103 + 12) / 115][Stage 146:===================================================> (112 + 3) / 115]                                                                                [Stage 147:=====================================>               (83 + 33) / 116][Stage 147:=========================================>           (91 + 25) / 116][Stage 147:==============================================>     (103 + 13) / 116][Stage 147:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.825447646 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409590621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (61 + 60) / 121][Stage 148:================================>                    (75 + 46) / 121][Stage 148:=====================================>               (85 + 36) / 121][Stage 148:==============================================>     (108 + 13) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:==============================>                      (71 + 51) / 122][Stage 149:=====================================>               (86 + 36) / 122][Stage 149:=============================================>      (107 + 15) / 122][Stage 149:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.450270762 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  pa rtitionIndex = 14  OR  partitionIndex = 15 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39847917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (62 + 58) / 120][Stage 150:=================================>                   (75 + 45) / 120][Stage 150:===========================================>        (100 + 20) / 120][Stage 150:=================================================>   (111 + 9) / 120]                                                                                [Stage 151:===========================>                         (63 + 58) / 121][Stage 151:=================================>                   (76 + 45) / 121][Stage 151:======================================>              (88 + 33) / 121][Stage 151:===============================================>    (111 + 10) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.378802909 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383809935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:==============================>                      (64 + 49) / 113][Stage 152:=====================================>               (81 + 32) / 113][Stage 152:===============================================>    (103 + 10) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:===========================>                         (59 + 55) / 114][Stage 153:============================>                        (62 + 52) / 114][Stage 153:=====================================>               (80 + 34) / 114][Stage 153:=============================================>       (98 + 16) / 114][Stage 153:====================================================>(112 + 2) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.391615366 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373499064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===================================>                 (78 + 37) / 115][Stage 154:=========================================>           (90 + 25) / 115][Stage 154:=================================================>   (108 + 7) / 115][Stage 154:===================================================> (112 + 3) / 115]                                                                                [Stage 155:===============================>                     (70 + 46) / 116][Stage 155:===================================>                 (78 + 38) / 116][Stage 155:========================================>            (89 + 27) / 116][Stage 155:=============================================>      (102 + 14) / 116][Stage 155:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.882026158 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334305982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (81 + 34) / 115][Stage 156:=========================================>           (91 + 24) / 115][Stage 156:=============================================>      (100 + 15) / 115][Stage 156:====================================================>(113 + 2) / 115]                                                                                [Stage 157:=====================================>               (83 + 33) / 116][Stage 157:==========================================>          (93 + 23) / 116][Stage 157:===============================================>    (105 + 11) / 116][Stage 157:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.625157523 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR   partitionIndex = 72  OR  partitionIndex = 73 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335247603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:======================================>              (83 + 32) / 115][Stage 158:==========================================>          (92 + 23) / 115][Stage 158:==============================================>     (102 + 13) / 115][Stage 158:==================================================>  (110 + 5) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:=====================================>               (83 + 33) / 116][Stage 159:=========================================>           (90 + 26) / 116][Stage 159:===========================================>         (95 + 21) / 116][Stage 159:=================================================>   (109 + 7) / 116][Stage 159:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.020133353 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR   partitionIndex = 125  OR  partitionIndex = 139 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371481103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:=================================>                   (74 + 44) / 118][Stage 160:=====================================>               (83 + 35) / 118][Stage 160:===========================================>         (97 + 21) / 118][Stage 160:==================================================>  (112 + 6) / 118]                                                                                [Stage 161:================================>                    (73 + 46) / 119][Stage 161:===================================>                 (80 + 39) / 119][Stage 161:========================================>            (91 + 28) / 119][Stage 161:===========================================>         (98 + 21) / 119][Stage 161:===============================================>    (109 + 10) / 119][Stage 161:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.517603216 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  p artitionIndex = 106  OR  partitionIndex = 92 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350863461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==================================>                  (73 + 40) / 113][Stage 162:=====================================>               (79 + 34) / 113][Stage 162:==========================================>          (90 + 23) / 113][Stage 162:==================================================>  (107 + 6) / 113]                                                                                [Stage 163:======================================>              (82 + 32) / 114][Stage 163:==========================================>          (92 + 22) / 114][Stage 163:==================================================>  (108 + 6) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.865482312 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  pa rtitionIndex = 39  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378924552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (58 + 55) / 113][Stage 164:=============================>                       (62 + 51) / 113][Stage 164:===================================>                 (75 + 38) / 113][Stage 164:=========================================>           (88 + 25) / 113][Stage 164:=================================================>   (106 + 7) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:==============================>                      (66 + 48) / 114][Stage 165:======================================>              (82 + 32) / 114][Stage 165:==============================================>     (101 + 13) / 114][Stage 165:================================================>    (105 + 9) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.629321225 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350799902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=================================>                   (71 + 42) / 113][Stage 166:=====================================>               (79 + 34) / 113][Stage 166:=========================================>           (89 + 24) / 113][Stage 166:==============================================>     (102 + 11) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:====================================>                (78 + 36) / 114][Stage 167:===========================================>         (94 + 20) / 114][Stage 167:================================================>    (105 + 9) / 114][Stage 167:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.377123214 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  pa rtitionIndex = 37  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419135096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:===========================>                         (63 + 58) / 121][Stage 168:===============================>                     (73 + 48) / 121][Stage 168:===========================================>        (102 + 19) / 121]                                                                                [Stage 169:==========================>                          (61 + 61) / 122][Stage 169:=============================>                       (68 + 54) / 122][Stage 169:=======================================>             (90 + 32) / 122][Stage 169:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.126354605 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  pa rtitionIndex = 66  OR  partitionIndex = 67 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336151366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:======================================>              (83 + 32) / 115][Stage 170:============================================>        (97 + 18) / 115][Stage 170:================================================>    (106 + 9) / 115][Stage 170:====================================================>(114 + 1) / 115]                                                                                [Stage 171:======================================>              (84 + 32) / 116][Stage 171:=========================================>           (90 + 26) / 116][Stage 171:==============================================>     (103 + 13) / 116][Stage 171:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.582818735 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409429667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:=============================>                       (67 + 54) / 121][Stage 172:==================================>                  (78 + 43) / 121][Stage 172:===========================================>         (99 + 22) / 121][Stage 172:====================================================>(120 + 1) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:=============================>                       (69 + 53) / 122][Stage 173:====================================>                (83 + 39) / 122][Stage 173:==============================================>     (109 + 13) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.40058387 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  pa rtitionIndex = 61  OR  partitionIndex = 75 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390479566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:=============================>                       (63 + 50) / 113][Stage 174:=======================================>             (84 + 29) / 113][Stage 174:==============================================>     (102 + 11) / 113][Stage 174:===================================================> (110 + 3) / 113]                                                                                [Stage 175:============================>                        (62 + 52) / 114][Stage 175:====================================>                (78 + 36) / 114][Stage 175:============================================>        (96 + 18) / 114][Stage 175:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.353890363 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335004906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:======================================>              (83 + 32) / 115][Stage 176:=============================================>       (98 + 17) / 115][Stage 176:==================================================>  (109 + 6) / 115][Stage 176:===================================================> (112 + 3) / 115]                                                                                [Stage 177:=======================================>             (87 + 29) / 116][Stage 177:============================================>        (98 + 18) / 116][Stage 177:==================================================>  (110 + 6) / 116][Stage 177:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.910207561 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387864305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:==============================>                      (66 + 47) / 113][Stage 178:=======================================>             (84 + 29) / 113][Stage 178:================================================>    (104 + 9) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===========================>                         (59 + 55) / 114][Stage 179:=============================>                       (64 + 50) / 114][Stage 179:=====================================>               (81 + 33) / 114][Stage 179:=============================================>      (100 + 14) / 114][Stage 179:===================================================> (110 + 4) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.37251171 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367277962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (75 + 43) / 118][Stage 180:======================================>              (86 + 32) / 118][Stage 180:============================================>       (101 + 17) / 118][Stage 180:==================================================>  (112 + 6) / 118]                                                                                [Stage 181:================================>                    (74 + 45) / 119][Stage 181:===================================>                 (80 + 39) / 119][Stage 181:===========================================>         (97 + 22) / 119][Stage 181:============================================>       (101 + 18) / 119][Stage 181:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.283166156 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403423622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=================================>                   (73 + 42) / 115][Stage 182:========================================>            (87 + 28) / 115][Stage 182:===========================================>         (95 + 20) / 115][Stage 182:===============================================>    (104 + 11) / 115][Stage 182:====================================================>(114 + 1) / 115]                                                                                [Stage 183:====================================>                (79 + 37) / 116][Stage 183:===========================================>         (96 + 20) / 116][Stage 183:=================================================>   (108 + 8) / 116][Stage 183:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.17451454 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233  OR   partitionIndex = 234  OR  partitionIndex = 220 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386052784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==================================>                  (74 + 39) / 113][Stage 184:============================================>        (95 + 18) / 113][Stage 184:================================================>    (104 + 9) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:=================================>                   (73 + 41) / 114][Stage 185:=====================================>               (81 + 33) / 114][Stage 185:=============================================>      (100 + 14) / 114][Stage 185:===================================================> (110 + 4) / 114][Stage 185:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.927931073 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392251831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (62 + 58) / 120][Stage 186:==============================>                      (68 + 52) / 120][Stage 186:=======================================>             (90 + 30) / 120][Stage 186:=================================================>   (112 + 8) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:==============================>                      (69 + 52) / 121][Stage 187:====================================>                (84 + 37) / 121][Stage 187:==============================================>     (108 + 13) / 121][Stage 187:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.098123862 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR   partitionIndex = 124  OR  partitionIndex = 125 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401730382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (61 + 59) / 120][Stage 188:================================>                    (73 + 47) / 120][Stage 188:===========================================>        (100 + 20) / 120][Stage 188:==================================================>  (115 + 5) / 120]                                                                                [Stage 189:===========================>                         (63 + 58) / 121][Stage 189:===================================>                 (82 + 39) / 121][Stage 189:============================================>       (103 + 18) / 121][Stage 189:==================================================>  (115 + 6) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.345787098 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  pa rtitionIndex = 36  OR  partitionIndex = 37 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33615609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=======================================>             (85 + 30) / 115][Stage 190:==========================================>          (92 + 23) / 115][Stage 190:================================================>    (106 + 9) / 115][Stage 190:===================================================> (111 + 4) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:=====================================>               (83 + 33) / 116][Stage 191:=======================================>             (87 + 29) / 116][Stage 191:===============================================>    (105 + 11) / 116][Stage 191:==================================================>  (111 + 5) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.358121156 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  pa rtitionIndex = 50  OR  partitionIndex = 36 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348993924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===================================>                 (75 + 38) / 113][Stage 192:========================================>            (87 + 26) / 113][Stage 192:==============================================>      (99 + 14) / 113][Stage 192:===================================================> (110 + 3) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:====================================>                (79 + 35) / 114][Stage 193:==========================================>          (91 + 23) / 114][Stage 193:=============================================>      (100 + 14) / 114][Stage 193:==================================================>  (108 + 6) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.502716021 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208  OR  partitionIndex = 194  OR   partitionIndex = 195  OR  partitionIndex = 209 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367200325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (81 + 32) / 113][Stage 194:==========================================>          (90 + 23) / 113][Stage 194:=============================================>       (97 + 16) / 113][Stage 194:================================================>    (104 + 9) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:===================================>                 (77 + 37) / 114][Stage 195:========================================>            (88 + 26) / 114][Stage 195:==============================================>     (101 + 13) / 114][Stage 195:=================================================>   (107 + 7) / 114][Stage 195:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.338751443 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377712417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:============================>                        (60 + 53) / 113][Stage 196:===================================>                 (75 + 38) / 113][Stage 196:============================================>        (94 + 19) / 113][Stage 196:===================================================> (110 + 3) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:=================================>                   (72 + 42) / 114][Stage 197:=======================================>             (86 + 28) / 114][Stage 197:================================================>    (105 + 9) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.374041665 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  pa rtitionIndex = 78  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415611439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 60) / 120][Stage 198:=============================>                       (67 + 53) / 120][Stage 198:===================================>                 (81 + 39) / 120][Stage 198:=============================================>      (106 + 14) / 120]                                                                                [Stage 199:============================>                        (64 + 57) / 121][Stage 199:================================>                    (75 + 46) / 121][Stage 199:==========================================>          (97 + 24) / 121][Stage 199:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.030040948 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  pa rtitionIndex = 54  OR  partitionIndex = 40 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350221308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=======================================>             (84 + 29) / 113][Stage 200:==========================================>          (90 + 23) / 113][Stage 200:==============================================>     (101 + 12) / 113][Stage 200:====================================================>(111 + 2) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:====================================>                (79 + 35) / 114][Stage 201:=========================================>           (89 + 25) / 114][Stage 201:==============================================>      (99 + 15) / 114][Stage 201:=================================================>   (107 + 7) / 114][Stage 201:====================================================>(112 + 2) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.93641572 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 11:18:18 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:40588) dropped. RpcEnv already stopped.
17/05/22 11:18:18 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:40588) dropped. RpcEnv already stopped.

real	10m27.572s
user	11m57.272s
sys	0m57.560s
