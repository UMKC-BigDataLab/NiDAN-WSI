Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 05:00:38 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:00:53 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:00:53 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:00:53 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 05:00:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:01:06 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522050055-0416).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.370518781 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=====================>                                 (44 + 71) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (108 + 7) / 115]                                                                                [Stage 1:===========================>                           (58 + 58) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.593431245 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.83356404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:================>                                      (33 + 80) / 113][Stage 2:=====================>                                 (45 + 68) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:===============================>                       (65 + 48) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:==========================================>            (87 + 26) / 113][Stage 2:==============================================>        (95 + 18) / 113][Stage 2:=====================================================> (110 + 3) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:==============================>                        (63 + 51) / 114][Stage 3:================================>                      (68 + 46) / 114][Stage 3:====================================>                  (76 + 38) / 114][Stage 3:============================================>          (92 + 22) / 114][Stage 3:================================================>     (102 + 12) / 114][Stage 3:===================================================>   (106 + 8) / 114][Stage 3:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.870572929 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.584339585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:================================>                      (67 + 46) / 113][Stage 4:=================================>                     (69 + 44) / 113][Stage 4:=====================================>                 (78 + 35) / 113][Stage 4:=========================================>             (86 + 27) / 113][Stage 4:============================================>          (92 + 21) / 113][Stage 4:================================================>      (99 + 14) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===================================>                   (73 + 41) / 114][Stage 5:======================================>                (80 + 34) / 114][Stage 5:=========================================>             (85 + 29) / 114][Stage 5:=============================================>         (94 + 20) / 114][Stage 5:================================================>     (102 + 12) / 114][Stage 5:=================================================>    (104 + 10) / 114][Stage 5:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.548114985 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.77501873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (60 + 55) / 115][Stage 6:================================>                      (67 + 48) / 115][Stage 6:=====================================>                 (79 + 36) / 115][Stage 6:======================================>                (81 + 34) / 115][Stage 6:===========================================>           (91 + 24) / 115][Stage 6:===============================================>      (101 + 14) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:=============================>                         (63 + 53) / 116][Stage 7:===============================>                       (66 + 50) / 116][Stage 7:=================================>                     (71 + 45) / 116][Stage 7:===================================>                   (74 + 42) / 116][Stage 7:=======================================>               (83 + 33) / 116][Stage 7:==============================================>        (99 + 17) / 116][Stage 7:==================================================>    (107 + 9) / 116][Stage 7:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.449311806 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.626135608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=========================>                             (56 + 65) / 121][Stage 8:==============================>                        (68 + 53) / 121][Stage 8:=====================================>                 (82 + 39) / 121][Stage 8:============================================>          (98 + 23) / 121][Stage 8:==============================================>       (104 + 17) / 121][Stage 8:====================================================>  (115 + 6) / 121][Stage 8:======================================================>(119 + 2) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:=============================>                         (65 + 57) / 122][Stage 9:================================>                      (71 + 51) / 122][Stage 9:====================================>                  (82 + 40) / 122][Stage 9:=========================================>             (93 + 29) / 122][Stage 9:================================================>     (110 + 12) / 122]                                                                                Time elapsed: 4.355201445 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.555065409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (64 + 51) / 115][Stage 10:=================================>                    (72 + 43) / 115][Stage 10:=======================================>              (85 + 30) / 115][Stage 10:=============================================>        (97 + 18) / 115][Stage 10:==================================================>   (107 + 8) / 115][Stage 10:===================================================>  (109 + 6) / 115]                                                                                [Stage 11:================================>                     (70 + 46) / 116][Stage 11:=======================================>              (85 + 31) / 116][Stage 11:=============================================>       (100 + 16) / 116][Stage 11:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.412273577 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.588057778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:============================>                         (59 + 54) / 113][Stage 12:=================================>                    (71 + 42) / 113][Stage 12:========================================>             (85 + 28) / 113][Stage 12:=============================================>        (95 + 18) / 113][Stage 12:=================================================>    (104 + 9) / 113][Stage 12:==================================================>   (106 + 7) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:==============================>                       (64 + 50) / 114][Stage 13:=====================================>                (79 + 35) / 114][Stage 13:==============================================>       (99 + 15) / 114][Stage 13:=====================================================>(112 + 2) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.09645189 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447620929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=====================================>                (80 + 35) / 115][Stage 14:======================================>               (83 + 32) / 115][Stage 14:============================================>         (95 + 20) / 115][Stage 14:===============================================>     (103 + 12) / 115][Stage 14:===================================================>  (110 + 5) / 115][Stage 14:====================================================> (112 + 3) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:=========================================>            (90 + 26) / 116][Stage 15:=============================================>       (100 + 16) / 116][Stage 15:==================================================>   (109 + 7) / 116][Stage 15:=====================================================>(114 + 2) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.226496236 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510990817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=================================>                    (71 + 42) / 113][Stage 16:========================================>             (84 + 29) / 113][Stage 16:===========================================>          (92 + 21) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:====================================>                 (78 + 36) / 114][Stage 17:=========================================>            (87 + 27) / 114][Stage 17:===========================================>          (92 + 22) / 114][Stage 17:==================================================>   (106 + 8) / 114][Stage 17:===================================================>  (109 + 5) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.56772858 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471521562 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:====================================>                 (76 + 37) / 113][Stage 18:===========================================>          (91 + 22) / 113][Stage 18:===============================================>      (99 + 14) / 113][Stage 18:==================================================>   (105 + 8) / 113]                                                                                [Stage 19:====================================>                 (76 + 38) / 114][Stage 19:======================================>               (82 + 32) / 114][Stage 19:============================================>         (94 + 20) / 114][Stage 19:================================================>    (104 + 10) / 114][Stage 19:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.423814137 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.536373836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==============================>                       (66 + 49) / 115][Stage 20:=================================>                    (71 + 44) / 115][Stage 20:=======================================>              (84 + 31) / 115][Stage 20:==============================================>      (101 + 14) / 115][Stage 20:==================================================>   (108 + 7) / 115][Stage 20:====================================================> (112 + 3) / 115]                                                                                [Stage 21:==============================>                       (66 + 50) / 116][Stage 21:===================================>                  (77 + 39) / 116][Stage 21:=============================================>        (97 + 19) / 116][Stage 21:==================================================>   (108 + 8) / 116][Stage 21:===================================================>  (110 + 6) / 116][Stage 21:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.710147233 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.559363805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:===============================>                      (71 + 49) / 120][Stage 22:========================================>             (89 + 31) / 120][Stage 22:=============================================>       (104 + 16) / 120][Stage 22:===============================================>     (107 + 13) / 120][Stage 22:===================================================>  (114 + 6) / 120][Stage 22:=====================================================>(118 + 2) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=================================>                    (75 + 46) / 121][Stage 23:========================================>             (91 + 30) / 121][Stage 23:=================================================>    (112 + 9) / 121][Stage 23:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.766154071 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440746721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:======================================>               (83 + 32) / 115][Stage 24:==========================================>           (90 + 25) / 115][Stage 24:==============================================>      (100 + 15) / 115][Stage 24:==================================================>   (107 + 8) / 115]                                                                                [Stage 25:======================================>               (82 + 34) / 116][Stage 25:==========================================>           (92 + 24) / 116][Stage 25:===============================================>     (105 + 11) / 116][Stage 25:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.922931755 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418279794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:======================================>               (81 + 34) / 115][Stage 26:========================================>             (86 + 29) / 115][Stage 26:==============================================>       (99 + 16) / 115][Stage 26:=================================================>    (106 + 9) / 115][Stage 26:=====================================================>(113 + 2) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:======================================>               (82 + 34) / 116][Stage 27:==========================================>           (92 + 24) / 116][Stage 27:==============================================>       (99 + 17) / 116][Stage 27:==================================================>   (109 + 7) / 116][Stage 27:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.281451334 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=226", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=226,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501498978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:=============================>                        (65 + 55) / 120][Stage 28:=====================================>                (83 + 37) / 120][Stage 28:===============================================>     (107 + 13) / 120][Stage 28:=====================================================>(119 + 1) / 120]                                                                                [Stage 29:===========================>                          (62 + 59) / 121][Stage 29:================================>                     (72 + 49) / 121][Stage 29:====================================>                 (81 + 40) / 121][Stage 29:============================================>        (101 + 20) / 121][Stage 29:===============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.404572974 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512802822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (61 + 60) / 121][Stage 30:===============================>                      (70 + 51) / 121][Stage 30:=====================================>                (85 + 36) / 121][Stage 30:==================================================>   (113 + 8) / 121][Stage 30:=====================================================>(120 + 1) / 121]                                                                                [Stage 31:=============================>                        (66 + 56) / 122][Stage 31:================================>                     (74 + 48) / 122][Stage 31:===========================================>         (100 + 22) / 122][Stage 31:===================================================>  (117 + 5) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.433146124 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408341875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=====================================>                (79 + 36) / 115][Stage 32:========================================>             (86 + 29) / 115][Stage 32:=============================================>        (97 + 18) / 115][Stage 32:=====================================================>(113 + 2) / 115]                                                                                [Stage 33:========================================>             (87 + 29) / 116][Stage 33:============================================>         (96 + 20) / 116][Stage 33:====================================================> (113 + 3) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.722547029 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50191694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==============================>                       (66 + 49) / 115][Stage 34:===================================>                  (75 + 40) / 115][Stage 34:============================================>         (95 + 20) / 115][Stage 34:==================================================>   (107 + 8) / 115][Stage 34:===================================================>  (110 + 5) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:=================================>                    (73 + 43) / 116][Stage 35:========================================>             (86 + 30) / 116][Stage 35:===============================================>     (103 + 13) / 116][Stage 35:===================================================>  (110 + 6) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.378475108 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48155748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:====================================>                 (80 + 38) / 118][Stage 36:==========================================>           (93 + 25) / 118][Stage 36:==============================================>      (104 + 14) / 118][Stage 36:===================================================>  (112 + 6) / 118][Stage 36:====================================================> (115 + 3) / 118]                                                                                [Stage 37:=================================>                    (74 + 45) / 119][Stage 37:=======================================>              (87 + 32) / 119][Stage 37:===============================================>     (107 + 12) / 119][Stage 37:======================================================(119 + 0) / 119]                                                                                Time elapsed: 3.25877182 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529336306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:================================>                     (72 + 49) / 121][Stage 38:========================================>             (91 + 30) / 121][Stage 38:================================================>    (111 + 10) / 121][Stage 38:=====================================================>(119 + 2) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:===============================>                      (71 + 51) / 122][Stage 39:======================================>               (86 + 36) / 122][Stage 39:=============================================>       (104 + 18) / 122][Stage 39:==================================================>   (114 + 8) / 122][Stage 39:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.769678932 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505297672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:============================>                         (64 + 57) / 121][Stage 40:=================================>                    (76 + 45) / 121][Stage 40:=========================================>            (92 + 29) / 121][Stage 40:=================================================>    (112 + 9) / 121]                                                                                [Stage 41:============================>                         (64 + 58) / 122][Stage 41:=================================>                    (75 + 47) / 122][Stage 41:============================================>        (102 + 20) / 122][Stage 41:=====================================================>(120 + 2) / 122][Stage 41:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.260012142 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482196581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:====================================>                 (77 + 38) / 115][Stage 42:=========================================>            (89 + 26) / 115][Stage 42:==============================================>       (99 + 16) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:===============================>                      (68 + 48) / 116][Stage 43:======================================>               (83 + 33) / 116][Stage 43:=============================================>        (97 + 19) / 116][Stage 43:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.883609792 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47150736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:=================================>                    (70 + 43) / 113][Stage 44:===========================================>          (92 + 21) / 113][Stage 44:================================================>    (103 + 10) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:=============================>                        (63 + 51) / 114][Stage 45:====================================>                 (77 + 37) / 114][Stage 45:=============================================>        (97 + 17) / 114][Stage 45:=================================================>    (105 + 9) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.324860992 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430119178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===============================>                      (68 + 47) / 115][Stage 46:=======================================>              (84 + 31) / 115][Stage 46:==============================================>      (100 + 15) / 115][Stage 46:===================================================>  (110 + 5) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:================================>                     (69 + 47) / 116][Stage 47:=====================================>                (81 + 35) / 116][Stage 47:=============================================>        (98 + 18) / 116][Stage 47:====================================================> (112 + 4) / 116][Stage 47:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.976676353 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450578778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:=================================>                    (70 + 43) / 113][Stage 48:========================================>             (85 + 28) / 113][Stage 48:===================================================>  (108 + 5) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:=================================>                    (70 + 44) / 114][Stage 49:=========================================>            (88 + 26) / 114][Stage 49:==================================================>   (107 + 7) / 114][Stage 49:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.305169133 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450363276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===============================>                      (67 + 48) / 115][Stage 50:===================================>                  (75 + 40) / 115][Stage 50:==========================================>           (90 + 25) / 115][Stage 50:==============================================>      (101 + 14) / 115][Stage 50:================================================>    (105 + 10) / 115][Stage 50:===================================================>  (109 + 6) / 115][Stage 50:====================================================> (112 + 3) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:=================================>                    (72 + 44) / 116][Stage 51:========================================>             (86 + 30) / 116][Stage 51:==========================================>           (92 + 24) / 116][Stage 51:==================================================>   (109 + 7) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.966562911 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450106636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:>                                                       (0 + 0) / 120][Stage 52:===========================>                          (60 + 60) / 120][Stage 52:==============================>                       (67 + 53) / 120][Stage 52:======================================>               (86 + 34) / 120][Stage 52:==============================================>      (106 + 14) / 120][Stage 52:=====================================================>(118 + 2) / 120][Stage 52:=====================================================>(119 + 1) / 120]                                                                                [Stage 53:===========================>                          (61 + 60) / 121][Stage 53:==============================>                       (68 + 53) / 121][Stage 53:=====================================>                (84 + 37) / 121][Stage 53:==============================================>      (107 + 14) / 121][Stage 53:===================================================>  (116 + 5) / 121][Stage 53:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.630627139 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42821123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==============================>                       (64 + 51) / 115][Stage 54:===================================>                  (75 + 40) / 115][Stage 54:=========================================>            (89 + 26) / 115][Stage 54:==============================================>      (100 + 15) / 115][Stage 54:===================================================>  (110 + 5) / 115][Stage 54:====================================================> (111 + 4) / 115][Stage 54:====================================================> (112 + 3) / 115]                                                                                [Stage 55:===============================>                      (68 + 48) / 116][Stage 55:=========================================>            (89 + 27) / 116][Stage 55:===============================================>     (104 + 12) / 116][Stage 55:====================================================> (112 + 4) / 116][Stage 55:=====================================================>(114 + 2) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.159904702 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424967758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===============================>                      (67 + 48) / 115][Stage 56:======================================>               (81 + 34) / 115][Stage 56:===========================================>          (93 + 22) / 115][Stage 56:==================================================>   (107 + 8) / 115]                                                                                [Stage 57:==================================>                   (75 + 41) / 116][Stage 57:=========================================>            (90 + 26) / 116][Stage 57:=================================================>    (107 + 9) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.800313799 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454299052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:=============================>                        (66 + 54) / 120][Stage 58:======================================>               (86 + 34) / 120][Stage 58:==============================================>      (105 + 15) / 120][Stage 58:===================================================>  (115 + 5) / 120][Stage 58:====================================================> (117 + 3) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:=================================>                    (76 + 45) / 121][Stage 59:========================================>             (91 + 30) / 121][Stage 59:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.468791484 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444050132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:=============================>                        (65 + 56) / 121][Stage 60:=====================================>                (85 + 36) / 121][Stage 60:=============================================>       (104 + 17) / 121][Stage 60:=================================================>    (112 + 9) / 121]                                                                                [Stage 61:===========================>                          (62 + 60) / 122][Stage 61:================================>                     (73 + 49) / 122][Stage 61:========================================>             (92 + 30) / 122][Stage 61:==================================================>   (115 + 7) / 122][Stage 61:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.431755719 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438192209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (70 + 43) / 113][Stage 62:======================================>               (80 + 33) / 113][Stage 62:============================================>         (94 + 19) / 113][Stage 62:================================================>    (103 + 10) / 113][Stage 62:===================================================>  (108 + 5) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:=========================================>            (87 + 27) / 114][Stage 63:==============================================>      (101 + 13) / 114][Stage 63:==================================================>   (107 + 7) / 114][Stage 63:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.18367347 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405075619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==================================>                   (73 + 40) / 113][Stage 64:=========================================>            (87 + 26) / 113][Stage 64:===========================================>          (92 + 21) / 113][Stage 64:================================================>    (103 + 10) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:========================================>             (86 + 28) / 114][Stage 65:============================================>         (94 + 20) / 114][Stage 65:==============================================>       (98 + 16) / 114][Stage 65:===================================================>  (108 + 6) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.161241281 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414810417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:>                                                       (0 + 0) / 115][Stage 66:================================>                     (70 + 45) / 115][Stage 66:=====================================>                (79 + 36) / 115][Stage 66:===========================================>          (93 + 22) / 115][Stage 66:==============================================>      (101 + 14) / 115]                                                                                [Stage 67:=================================>                    (71 + 45) / 116][Stage 67:======================================>               (83 + 33) / 116][Stage 67:==============================================>       (99 + 17) / 116][Stage 67:==================================================>   (108 + 8) / 116][Stage 67:====================================================> (113 + 3) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.604658328 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394054856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (72 + 41) / 113][Stage 68:========================================>             (84 + 29) / 113][Stage 68:============================================>         (93 + 20) / 113][Stage 68:===============================================>     (102 + 11) / 113][Stage 68:====================================================> (109 + 4) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:=====================================>                (79 + 35) / 114][Stage 69:=========================================>            (87 + 27) / 114][Stage 69:===============================================>     (102 + 12) / 114][Stage 69:====================================================> (110 + 4) / 114][Stage 69:=====================================================>(112 + 2) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.636237951 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430778538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:=============================>                        (61 + 52) / 113][Stage 70:=====================================>                (79 + 34) / 113][Stage 70:============================================>         (93 + 20) / 113][Stage 70:===================================================>  (107 + 6) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:==============================>                       (64 + 50) / 114][Stage 71:=======================================>              (84 + 30) / 114][Stage 71:===============================================>     (103 + 11) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.370007471 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442086543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:===================================>                  (74 + 39) / 113][Stage 72:==============================================>       (98 + 15) / 113][Stage 72:====================================================> (109 + 4) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:===================================>                  (75 + 39) / 114][Stage 73:===========================================>          (92 + 22) / 114][Stage 73:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.267033689 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388156692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:===================================>                  (78 + 40) / 118][Stage 74:===========================================>          (96 + 22) / 118][Stage 74:=================================================>    (109 + 9) / 118][Stage 74:=====================================================>(117 + 1) / 118]                                                                                [Stage 75:==================================>                   (75 + 44) / 119][Stage 75:=======================================>              (86 + 33) / 119][Stage 75:============================================>        (100 + 19) / 119][Stage 75:====================================================> (115 + 4) / 119][Stage 75:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.587610737 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40828205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=================================>                    (72 + 43) / 115][Stage 76:========================================>             (87 + 28) / 115][Stage 76:===============================================>     (102 + 13) / 115][Stage 76:====================================================> (111 + 4) / 115]                                                                                [Stage 77:====================================>                 (78 + 38) / 116][Stage 77:===========================================>          (94 + 22) / 116][Stage 77:===============================================>     (105 + 11) / 116]                                                                                Time elapsed: 2.683113752 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441465659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (60 + 60) / 120][Stage 78:==============================>                       (67 + 53) / 120][Stage 78:========================================>             (89 + 31) / 120][Stage 78:================================================>    (109 + 11) / 120][Stage 78:====================================================> (117 + 3) / 120]                                                                                [Stage 79:===========================>                          (62 + 59) / 121][Stage 79:================================>                     (73 + 48) / 121][Stage 79:========================================>             (91 + 30) / 121][Stage 79:==================================================>   (113 + 8) / 121][Stage 79:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.509989152 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394115595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===============================>                      (68 + 47) / 115][Stage 80:======================================>               (81 + 34) / 115][Stage 80:==============================================>       (98 + 17) / 115][Stage 80:====================================================> (111 + 4) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:================================>                     (70 + 46) / 116][Stage 81:=======================================>              (84 + 32) / 116][Stage 81:===============================================>     (105 + 11) / 116][Stage 81:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.785360008 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365988085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:======================================>               (82 + 33) / 115][Stage 82:============================================>         (94 + 21) / 115][Stage 82:===============================================>     (103 + 12) / 115][Stage 82:====================================================> (111 + 4) / 115]                                                                                [Stage 83:=======================================>              (84 + 32) / 116][Stage 83:=============================================>        (98 + 18) / 116][Stage 83:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.764229805 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=106", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=106,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409413034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:=============================>                        (62 + 51) / 113][Stage 84:=====================================>                (78 + 35) / 113][Stage 84:=============================================>        (95 + 18) / 113][Stage 84:===================================================>  (108 + 5) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:=============================>                        (63 + 51) / 114][Stage 85:==================================>                   (73 + 41) / 114][Stage 85:=============================================>        (96 + 18) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.284361609 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431252759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:=============================>                        (66 + 55) / 121][Stage 86:=====================================>                (83 + 38) / 121][Stage 86:===============================================>     (109 + 12) / 121][Stage 86:=====================================================>(120 + 1) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:=============================>                        (67 + 55) / 122][Stage 87:====================================>                 (82 + 40) / 122][Stage 87:===========================================>         (101 + 21) / 122][Stage 87:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.10002015 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384541637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:===================================>                  (77 + 41) / 118][Stage 88:=========================================>            (91 + 27) / 118][Stage 88:================================================>    (108 + 10) / 118][Stage 88:=====================================================>(116 + 2) / 118]                                                                                [Stage 89:==================================>                   (77 + 42) / 119][Stage 89:=====================================>                (83 + 36) / 119][Stage 89:============================================>         (99 + 20) / 119][Stage 89:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.06686106 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425058894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==========================>                           (60 + 61) / 121][Stage 90:===========================>                          (61 + 60) / 121][Stage 90:================================>                     (72 + 49) / 121][Stage 90:===========================================>         (100 + 21) / 121][Stage 90:===================================================>  (115 + 6) / 121]                                                                                [Stage 91:===========================>                          (61 + 61) / 122][Stage 91:==============================>                       (68 + 54) / 122][Stage 91:=====================================>                (84 + 38) / 122][Stage 91:===============================================>     (110 + 12) / 122][Stage 91:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.156427968 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=118", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=118,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504513364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:=================================>                    (74 + 44) / 118][Stage 92:======================================>               (84 + 34) / 118][Stage 92:=============================================>       (102 + 16) / 118][Stage 92:=====================================================>(117 + 1) / 118]                                                                                [Stage 93:=================================>                    (74 + 45) / 119][Stage 93:===================================>                  (78 + 41) / 119][Stage 93:======================================>               (84 + 35) / 119][Stage 93:============================================>         (97 + 22) / 119][Stage 93:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.456563855 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386878206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==================================>                   (74 + 41) / 115][Stage 94:============================================>         (94 + 21) / 115][Stage 94:===============================================>     (102 + 13) / 115][Stage 94:====================================================> (112 + 3) / 115]                                                                                [Stage 95:====================================>                 (79 + 37) / 116][Stage 95:=============================================>        (97 + 19) / 116][Stage 95:================================================>    (106 + 10) / 116][Stage 95:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.754071552 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391268043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==============================>                       (66 + 49) / 115][Stage 96:=====================================>                (79 + 36) / 115][Stage 96:===========================================>          (93 + 22) / 115][Stage 96:=================================================>    (106 + 9) / 115]                                                                                [Stage 97:================================>                     (70 + 46) / 116][Stage 97:========================================>             (86 + 30) / 116][Stage 97:=============================================>       (100 + 16) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.767735672 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348093795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (81 + 34) / 115][Stage 98:=========================================>            (89 + 26) / 115][Stage 98:==============================================>      (101 + 14) / 115][Stage 98:=====================================================>(113 + 2) / 115]                                                                                [Stage 99:========================================>             (86 + 30) / 116][Stage 99:=============================================>        (98 + 18) / 116][Stage 99:================================================>    (106 + 10) / 116][Stage 99:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.809220312 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392848849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=================================>                   (72 + 43) / 115][Stage 100:======================================>              (84 + 31) / 115][Stage 100:===========================================>         (94 + 21) / 115][Stage 100:===================================================> (111 + 4) / 115]                                                                                [Stage 101:====================================>                (79 + 37) / 116][Stage 101:=============================================>       (99 + 17) / 116][Stage 101:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.780018458 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383051751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (72 + 46) / 118][Stage 102:====================================>                (82 + 36) / 118][Stage 102:==========================================>          (94 + 24) / 118][Stage 102:================================================>    (109 + 9) / 118][Stage 102:====================================================>(117 + 1) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:===================================>                 (79 + 40) / 119][Stage 103:=========================================>           (94 + 25) / 119][Stage 103:=============================================>      (103 + 16) / 119][Stage 103:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.093920299 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371485805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:====================================>                (77 + 36) / 113][Stage 104:==========================================>          (90 + 23) / 113][Stage 104:==============================================>     (101 + 12) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:======================================>              (82 + 32) / 114][Stage 105:==========================================>          (92 + 22) / 114][Stage 105:=============================================>       (98 + 16) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.906316607 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404348893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==============================>                      (66 + 49) / 115][Stage 106:====================================>                (79 + 36) / 115][Stage 106:=============================================>       (98 + 17) / 115][Stage 106:==============================================>     (102 + 13) / 115][Stage 106:===================================================> (111 + 4) / 115]                                                                                [Stage 107:==================================>                  (75 + 41) / 116][Stage 107:========================================>            (89 + 27) / 116][Stage 107:=============================================>      (101 + 15) / 116][Stage 107:==================================================>  (111 + 5) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.195461691 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381728205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (70 + 43) / 113][Stage 108:======================================>              (83 + 30) / 113][Stage 108:============================================>        (94 + 19) / 113][Stage 108:=================================================>   (105 + 8) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:====================================>                (78 + 36) / 114][Stage 109:========================================>            (88 + 26) / 114][Stage 109:=============================================>       (98 + 16) / 114][Stage 109:================================================>    (105 + 9) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.504336951 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346620369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:====================================>                (80 + 35) / 115][Stage 110:========================================>            (87 + 28) / 115][Stage 110:============================================>        (97 + 18) / 115][Stage 110:==================================================>  (110 + 5) / 115]                                                                                [Stage 111:======================================>              (84 + 32) / 116][Stage 111:==========================================>          (92 + 24) / 116][Stage 111:==================================================>  (110 + 6) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.707084309 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344895961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=====================================>               (81 + 34) / 115][Stage 112:========================================>            (87 + 28) / 115][Stage 112:==============================================>     (102 + 13) / 115][Stage 112:==================================================>  (109 + 6) / 115][Stage 112:===================================================> (111 + 4) / 115]                                                                                [Stage 113:=====================================>               (83 + 33) / 116][Stage 113:===========================================>         (95 + 21) / 116][Stage 113:=================================================>   (108 + 8) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.076095883 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453752024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==================================>                  (74 + 39) / 113][Stage 114:======================================>              (82 + 31) / 113][Stage 114:==========================================>          (90 + 23) / 113][Stage 114:===============================================>    (103 + 10) / 113][Stage 114:====================================================>(111 + 2) / 113]                                                                                [Stage 115:======================================>              (83 + 31) / 114][Stage 115:=========================================>           (90 + 24) / 114][Stage 115:==============================================>     (101 + 13) / 114][Stage 115:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.959453048 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368153251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (72 + 46) / 118][Stage 116:=================================>                   (74 + 44) / 118][Stage 116:====================================>                (82 + 36) / 118][Stage 116:============================================>       (101 + 17) / 118][Stage 116:=================================================>   (111 + 7) / 118][Stage 116:====================================================>(117 + 1) / 118]                                                                                [Stage 117:=================================>                   (75 + 44) / 119][Stage 117:====================================>                (81 + 38) / 119][Stage 117:=========================================>           (94 + 25) / 119][Stage 117:=============================================>      (104 + 15) / 119][Stage 117:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.774038816 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386194822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=============================>                       (62 + 51) / 113][Stage 118:================================>                    (69 + 44) / 113][Stage 118:=====================================>               (81 + 32) / 113][Stage 118:==============================================>     (101 + 12) / 113][Stage 118:=================================================>   (106 + 7) / 113]                                                                                [Stage 119:=============================>                       (63 + 51) / 114][Stage 119:===================================>                 (77 + 37) / 114][Stage 119:============================================>        (96 + 18) / 114][Stage 119:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.29455163 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369751838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:==================================>                  (77 + 41) / 118][Stage 120:=======================================>             (87 + 31) / 118][Stage 120:===========================================>         (96 + 22) / 118][Stage 120:=================================================>   (111 + 7) / 118][Stage 120:====================================================>(117 + 1) / 118]                                                                                [Stage 121:================================>                    (74 + 45) / 119][Stage 121:===================================>                 (80 + 39) / 119][Stage 121:===========================================>         (98 + 21) / 119][Stage 121:================================================>    (110 + 9) / 119][Stage 121:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.521745491 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467884218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (73 + 45) / 118][Stage 122:==================================>                  (77 + 41) / 118][Stage 122:===========================================>         (97 + 21) / 118][Stage 122:===================================================> (115 + 3) / 118]                                                                                [Stage 123:================================>                    (74 + 45) / 119][Stage 123:==================================>                  (77 + 42) / 119][Stage 123:==========================================>          (95 + 24) / 119][Stage 123:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 2.909018949 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355852443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:======================================>              (82 + 31) / 113][Stage 124:=========================================>           (89 + 24) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:==================================================>  (107 + 6) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:=====================================>               (80 + 34) / 114][Stage 125:=======================================>             (86 + 28) / 114][Stage 125:=============================================>      (100 + 14) / 114][Stage 125:==================================================>  (108 + 6) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.192111987 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362356188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:====================================>                (78 + 35) / 113][Stage 126:==========================================>          (91 + 22) / 113][Stage 126:==============================================>      (99 + 14) / 113][Stage 126:=================================================>   (106 + 7) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:=======================================>             (86 + 28) / 114][Stage 127:============================================>        (95 + 19) / 114][Stage 127:==============================================>     (103 + 11) / 114][Stage 127:===================================================> (111 + 3) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.252484341 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362623629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:=================================>                   (75 + 43) / 118][Stage 128:==========================================>          (94 + 24) / 118][Stage 128:=================================================>   (111 + 7) / 118][Stage 128:====================================================>(117 + 1) / 118]                                                                                [Stage 129:================================>                    (74 + 45) / 119][Stage 129:====================================>                (82 + 37) / 119][Stage 129:===========================================>        (100 + 19) / 119][Stage 129:=================================================>   (111 + 8) / 119][Stage 129:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.01571488 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364199096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:====================================>                (77 + 36) / 113][Stage 130:==========================================>          (90 + 23) / 113][Stage 130:=============================================>       (98 + 15) / 113][Stage 130:=================================================>   (106 + 7) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===================================>                 (76 + 38) / 114][Stage 131:=======================================>             (84 + 30) / 114][Stage 131:=========================================>           (89 + 25) / 114][Stage 131:================================================>    (105 + 9) / 114][Stage 131:==================================================>  (108 + 6) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.519755438 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360833662 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:======================================>              (84 + 31) / 115][Stage 132:===========================================>         (95 + 20) / 115][Stage 132:=================================================>   (108 + 7) / 115][Stage 132:====================================================>(113 + 2) / 115]                                                                                [Stage 133:=====================================>               (82 + 34) / 116][Stage 133:==========================================>          (92 + 24) / 116][Stage 133:============================================>        (98 + 18) / 116][Stage 133:===============================================>    (106 + 10) / 116][Stage 133:===================================================> (113 + 3) / 116][Stage 133:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.525212878 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363640193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (79 + 34) / 113][Stage 134:=========================================>           (88 + 25) / 113][Stage 134:==============================================>     (101 + 12) / 113][Stage 134:==================================================>  (108 + 5) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:=======================================>             (86 + 28) / 114][Stage 135:==========================================>          (91 + 23) / 114][Stage 135:=============================================>       (97 + 17) / 114][Stage 135:==================================================>  (108 + 6) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.660188101 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388155948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:=============================>                       (62 + 51) / 113][Stage 136:====================================>                (78 + 35) / 113][Stage 136:=============================================>       (98 + 15) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:================================>                    (70 + 44) / 114][Stage 137:=======================================>             (86 + 28) / 114][Stage 137:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.285050402 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336725648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:======================================>              (84 + 31) / 115][Stage 138:=============================================>       (98 + 17) / 115][Stage 138:=================================================>   (108 + 7) / 115][Stage 138:====================================================>(113 + 2) / 115]                                                                                [Stage 139:=====================================>               (82 + 34) / 116][Stage 139:========================================>            (89 + 27) / 116][Stage 139:==============================================>     (103 + 13) / 116][Stage 139:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.814717354 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367504507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (72 + 46) / 118][Stage 140:===================================>                 (80 + 38) / 118][Stage 140:============================================>       (100 + 18) / 118][Stage 140:=================================================>   (111 + 7) / 118]                                                                                [Stage 141:================================>                    (74 + 45) / 119][Stage 141:====================================>                (82 + 37) / 119][Stage 141:===========================================>        (100 + 19) / 119][Stage 141:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.140694579 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353749274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (79 + 34) / 113][Stage 142:=========================================>           (89 + 24) / 113][Stage 142:==============================================>      (99 + 14) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:=====================================>               (81 + 33) / 114][Stage 143:==========================================>          (92 + 22) / 114][Stage 143:=================================================>   (106 + 8) / 114][Stage 143:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.858474962 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397920005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (63 + 57) / 120][Stage 144:==================================>                  (77 + 43) / 120][Stage 144:=========================================>           (94 + 26) / 120][Stage 144:==================================================>  (115 + 5) / 120]                                                                                [Stage 145:===========================>                         (63 + 58) / 121][Stage 145:================================>                    (74 + 47) / 121][Stage 145:=========================================>           (94 + 27) / 121][Stage 145:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.009150387 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361494464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (73 + 45) / 118][Stage 146:==================================>                  (76 + 42) / 118][Stage 146:======================================>              (85 + 33) / 118][Stage 146:=======================================>             (89 + 29) / 118][Stage 146:==============================================>     (105 + 13) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:==================================>                  (78 + 41) / 119][Stage 147:=====================================>               (84 + 35) / 119][Stage 147:==========================================>          (96 + 23) / 119][Stage 147:=================================================>   (112 + 7) / 119][Stage 147:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.565914888 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404354371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (61 + 60) / 121][Stage 148:===========================>                         (63 + 58) / 121][Stage 148:=====================================>               (86 + 35) / 121][Stage 148:=============================================>      (107 + 14) / 121][Stage 148:====================================================>(120 + 1) / 121]                                                                                [Stage 149:==========================>                          (62 + 60) / 122][Stage 149:=================================>                   (77 + 45) / 122][Stage 149:==========================================>          (97 + 25) / 122][Stage 149:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.225078502 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384312492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (58 + 55) / 113][Stage 150:=============================>                       (63 + 50) / 113][Stage 150:=====================================>               (80 + 33) / 113][Stage 150:==============================================>     (102 + 11) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:==============================>                      (65 + 49) / 114][Stage 151:===================================>                 (77 + 37) / 114][Stage 151:============================================>        (96 + 18) / 114][Stage 151:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.10089858 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371908484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==============================>                      (66 + 49) / 115][Stage 152:====================================>                (79 + 36) / 115][Stage 152:=========================================>           (90 + 25) / 115][Stage 152:==============================================>     (102 + 13) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:===============================>                     (68 + 48) / 116][Stage 153:=======================================>             (86 + 30) / 116][Stage 153:==============================================>     (103 + 13) / 116][Stage 153:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.77096706 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375285897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (74 + 44) / 118][Stage 154:====================================>                (82 + 36) / 118][Stage 154:=========================================>           (93 + 25) / 118][Stage 154:==============================================>     (105 + 13) / 118][Stage 154:===================================================> (114 + 4) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:=====================================>               (84 + 35) / 119][Stage 155:===========================================>         (97 + 22) / 119][Stage 155:=============================================>      (105 + 14) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.475792952 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489886721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 60) / 120][Stage 156:===========================>                         (63 + 57) / 120][Stage 156:==================================>                  (79 + 41) / 120][Stage 156:===========================================>        (100 + 20) / 120][Stage 156:==================================================>  (114 + 6) / 120]                                                                                [Stage 157:============================>                        (64 + 57) / 121][Stage 157:===============================>                     (71 + 50) / 121][Stage 157:========================================>            (93 + 28) / 121][Stage 157:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.971776855 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349638857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=================================>                   (72 + 41) / 113][Stage 158:======================================>              (82 + 31) / 113][Stage 158:==========================================>          (91 + 22) / 113][Stage 158:==============================================>      (99 + 14) / 113][Stage 158:===================================================> (109 + 4) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:==================================>                  (74 + 40) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:============================================>        (95 + 19) / 114][Stage 159:=================================================>   (106 + 8) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.020287424 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349818558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=====================================>               (81 + 32) / 113][Stage 160:==========================================>          (91 + 22) / 113][Stage 160:==============================================>     (100 + 13) / 113][Stage 160:==================================================>  (108 + 5) / 113]                                                                                [Stage 161:===================================>                 (77 + 37) / 114][Stage 161:=======================================>             (86 + 28) / 114][Stage 161:=============================================>       (97 + 17) / 114][Stage 161:=================================================>   (107 + 7) / 114][Stage 161:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.971368431 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343329372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=======================================>             (86 + 29) / 115][Stage 162:===========================================>         (94 + 21) / 115][Stage 162:==================================================>  (110 + 5) / 115][Stage 162:===================================================> (112 + 3) / 115]                                                                                [Stage 163:=====================================>               (81 + 35) / 116][Stage 163:=========================================>           (90 + 26) / 116][Stage 163:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.577759903 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363278029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (73 + 45) / 118][Stage 164:=================================>                   (75 + 43) / 118][Stage 164:=======================================>             (88 + 30) / 118][Stage 164:==============================================>     (105 + 13) / 118][Stage 164:====================================================>(117 + 1) / 118]                                                                                [Stage 165:=================================>                   (75 + 44) / 119][Stage 165:=====================================>               (84 + 35) / 119][Stage 165:===========================================>        (100 + 19) / 119][Stage 165:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.145703966 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392811825 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:============================>                        (65 + 56) / 121][Stage 166:================================>                    (75 + 46) / 121][Stage 166:===========================================>         (99 + 22) / 121][Stage 166:===================================================> (117 + 4) / 121]                                                                                [Stage 167:===========================>                         (64 + 58) / 122][Stage 167:================================>                    (75 + 47) / 122][Stage 167:==========================================>          (97 + 25) / 122][Stage 167:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.217085942 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353647932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=====================================>               (80 + 33) / 113][Stage 168:========================================>            (87 + 26) / 113][Stage 168:============================================>        (94 + 19) / 113][Stage 168:=================================================>   (106 + 7) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:======================================>              (82 + 32) / 114][Stage 169:============================================>        (96 + 18) / 114][Stage 169:==============================================>     (103 + 11) / 114][Stage 169:===================================================> (110 + 4) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.282956536 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406546198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:=============================>                       (67 + 53) / 120][Stage 170:======================================>              (88 + 32) / 120][Stage 170:==============================================>     (107 + 13) / 120]                                                                                [Stage 171:===========================>                         (62 + 59) / 121][Stage 171:==============================>                      (70 + 51) / 121][Stage 171:======================================>              (89 + 32) / 121][Stage 171:=================================================>   (113 + 8) / 121][Stage 171:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.216584838 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452133113 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:====================================>                (80 + 35) / 115][Stage 172:=======================================>             (85 + 30) / 115][Stage 172:=============================================>       (98 + 17) / 115][Stage 172:==================================================>  (110 + 5) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:========================================>            (89 + 27) / 116][Stage 173:==============================================>     (104 + 12) / 116][Stage 173:===================================================> (113 + 3) / 116][Stage 173:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.955233303 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374713814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (75 + 40) / 115][Stage 174:========================================>            (88 + 27) / 115][Stage 174:================================================>    (106 + 9) / 115]                                                                                [Stage 175:===============================>                     (70 + 46) / 116][Stage 175:========================================>            (89 + 27) / 116][Stage 175:==============================================>     (104 + 12) / 116][Stage 175:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.901699814 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380515975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:=================================>                   (74 + 44) / 118][Stage 176:==================================>                  (77 + 41) / 118][Stage 176:=======================================>             (89 + 29) / 118][Stage 176:===========================================>         (97 + 21) / 118][Stage 176:==================================================>  (113 + 5) / 118]                                                                                [Stage 177:================================>                    (74 + 45) / 119][Stage 177:=================================>                   (75 + 44) / 119][Stage 177:=====================================>               (84 + 35) / 119][Stage 177:============================================>        (99 + 20) / 119][Stage 177:================================================>    (110 + 9) / 119][Stage 177:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.693851525 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376085038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (72 + 46) / 118][Stage 178:================================>                    (73 + 45) / 118][Stage 178:========================================>            (91 + 27) / 118][Stage 178:=================================================>   (111 + 7) / 118]                                                                                [Stage 179:================================>                    (74 + 45) / 119][Stage 179:===================================>                 (80 + 39) / 119][Stage 179:=============================================>      (104 + 15) / 119][Stage 179:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.83428037 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391099296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:==============================>                      (66 + 47) / 113][Stage 180:=====================================>               (79 + 34) / 113][Stage 180:=============================================>       (96 + 17) / 113][Stage 180:==================================================>  (108 + 5) / 113]                                                                                [Stage 181:============================>                        (62 + 52) / 114][Stage 181:==================================>                  (74 + 40) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.731256608 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380114854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=================================>                   (71 + 42) / 113][Stage 182:=======================================>             (84 + 29) / 113][Stage 182:=========================================>           (89 + 24) / 113][Stage 182:==============================================>     (100 + 13) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:====================================>                (78 + 36) / 114][Stage 183:==========================================>          (91 + 23) / 114][Stage 183:==============================================>     (101 + 13) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.93260095 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401372396 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (64 + 56) / 120][Stage 184:===================================>                 (80 + 40) / 120][Stage 184:============================================>       (103 + 17) / 120][Stage 184:====================================================>(118 + 2) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:==============================>                      (69 + 52) / 121][Stage 185:===================================>                 (80 + 41) / 121][Stage 185:==============================================>     (109 + 12) / 121][Stage 185:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.021809795 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359420893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:==================================>                  (76 + 42) / 118][Stage 186:====================================>                (81 + 37) / 118][Stage 186:=========================================>           (93 + 25) / 118][Stage 186:=============================================>      (104 + 14) / 118][Stage 186:===================================================> (115 + 3) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:=================================>                   (76 + 43) / 119][Stage 187:====================================>                (82 + 37) / 119][Stage 187:========================================>            (92 + 27) / 119][Stage 187:=============================================>      (103 + 16) / 119][Stage 187:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.490643532 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39218724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:==============================>                      (69 + 52) / 121][Stage 188:=======================================>             (90 + 31) / 121][Stage 188:=================================================>   (112 + 9) / 121]                                                                                [Stage 189:===========================>                         (63 + 59) / 122][Stage 189:===============================>                     (72 + 50) / 122][Stage 189:===================================>                 (81 + 41) / 122][Stage 189:============================================>       (105 + 17) / 122][Stage 189:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.184517124 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362824506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (73 + 45) / 118][Stage 190:====================================>                (81 + 37) / 118][Stage 190:=========================================>           (92 + 26) / 118][Stage 190:=================================================>   (111 + 7) / 118][Stage 190:====================================================>(117 + 1) / 118]                                                                                [Stage 191:================================>                    (74 + 45) / 119][Stage 191:====================================>                (82 + 37) / 119][Stage 191:=========================================>           (93 + 26) / 119][Stage 191:=================================================>   (111 + 8) / 119][Stage 191:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.164414584 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382078261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:================================>                    (69 + 44) / 113][Stage 192:=====================================>               (81 + 32) / 113][Stage 192:==============================================>     (102 + 11) / 113]                                                                                [Stage 193:===========================>                         (59 + 55) / 114][Stage 193:=================================>                   (71 + 43) / 114][Stage 193:===========================================>         (94 + 20) / 114][Stage 193:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.985121669 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345823861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (82 + 33) / 115][Stage 194:=========================================>           (90 + 25) / 115][Stage 194:===============================================>    (104 + 11) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:=====================================>               (82 + 34) / 116][Stage 195:=======================================>             (87 + 29) / 116][Stage 195:=============================================>       (99 + 17) / 116][Stage 195:==================================================>  (111 + 5) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.736494704 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458878138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==================================>                  (74 + 39) / 113][Stage 196:========================================>            (87 + 26) / 113][Stage 196:==============================================>     (100 + 13) / 113][Stage 196:===================================================> (109 + 4) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:==================================>                  (75 + 39) / 114][Stage 197:=========================================>           (89 + 25) / 114][Stage 197:============================================>        (95 + 19) / 114][Stage 197:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.909755495 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380863196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:===================================>                 (78 + 40) / 118][Stage 198:============================================>        (98 + 20) / 118][Stage 198:==================================================>  (113 + 5) / 118][Stage 198:====================================================>(117 + 1) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:==================================>                  (78 + 41) / 119][Stage 199:==========================================>          (96 + 23) / 119][Stage 199:==================================================>  (114 + 5) / 119][Stage 199:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.182996333 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398499864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (63 + 57) / 120][Stage 200:================================>                    (73 + 47) / 120][Stage 200:============================================>       (103 + 17) / 120][Stage 200:==================================================>  (115 + 5) / 120]                                                                                [Stage 201:============================>                        (65 + 56) / 121][Stage 201:=================================>                   (77 + 44) / 121][Stage 201:==========================================>          (97 + 24) / 121][Stage 201:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.967452436 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m4.753s
user	11m37.952s
sys	0m37.540s
