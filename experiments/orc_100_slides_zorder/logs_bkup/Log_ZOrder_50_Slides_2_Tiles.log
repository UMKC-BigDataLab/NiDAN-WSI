Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 06:25:05 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:25:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:25:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:25:20 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 06:25:23 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:25:33 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522062522-0424).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.328319901 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==>                                                    (5 + 110) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.382323221 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.752270362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=====================>                                 (48 + 73) / 121][Stage 2:=========================>                             (56 + 65) / 121][Stage 2:===========================>                           (61 + 60) / 121][Stage 2:=============================>                         (65 + 56) / 121][Stage 2:====================================>                  (80 + 41) / 121][Stage 2:=========================================>             (91 + 30) / 121][Stage 2:=================================================>    (110 + 11) / 121]                                                                                [Stage 3:===========================>                           (60 + 62) / 122][Stage 3:===========================>                           (62 + 60) / 122][Stage 3:===============================>                       (69 + 53) / 122][Stage 3:================================>                      (73 + 49) / 122][Stage 3:=====================================>                 (84 + 38) / 122][Stage 3:==============================================>       (105 + 17) / 122][Stage 3:======================================================>(120 + 2) / 122][Stage 3:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.739648176 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.689647358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==============================>                        (64 + 51) / 115][Stage 4:=================================>                     (70 + 45) / 115][Stage 4:==================================>                    (73 + 42) / 115][Stage 4:========================================>              (84 + 31) / 115][Stage 4:============================================>          (94 + 21) / 115][Stage 4:================================================>     (103 + 12) / 115][Stage 4:=================================================>    (105 + 10) / 115][Stage 4:====================================================>  (110 + 5) / 115][Stage 4:======================================================>(114 + 1) / 115]                                                                                [Stage 5:==============================>                        (65 + 51) / 116][Stage 5:=================================>                     (70 + 46) / 116][Stage 5:==================================>                    (73 + 43) / 116][Stage 5:====================================>                  (78 + 38) / 116][Stage 5:============================================>          (94 + 22) / 116][Stage 5:====================================================>  (110 + 6) / 116][Stage 5:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.784885687 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.671277758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (59 + 61) / 120][Stage 6:===========================>                           (61 + 59) / 120][Stage 6:==============================>                        (67 + 53) / 120][Stage 6:==================================>                    (76 + 44) / 120][Stage 6:=======================================>               (87 + 33) / 120][Stage 6:=============================================>        (100 + 20) / 120][Stage 6:=====================================================> (117 + 3) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:=============================>                         (65 + 56) / 121][Stage 7:======================================>                (84 + 37) / 121][Stage 7:==========================================>            (94 + 27) / 121][Stage 7:=============================================>        (101 + 20) / 121][Stage 7:===================================================>   (113 + 8) / 121][Stage 7:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.402549877 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.605916365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (58 + 62) / 120][Stage 8:===========================>                           (60 + 60) / 120][Stage 8:================================>                      (70 + 50) / 120][Stage 8:========================================>              (89 + 31) / 120][Stage 8:==============================================>       (103 + 17) / 120][Stage 8:====================================================>  (114 + 6) / 120]                                                                                [Stage 9:============================>                          (63 + 58) / 121][Stage 9:================================>                      (71 + 50) / 121][Stage 9:====================================>                  (80 + 41) / 121][Stage 9:============================================>          (97 + 24) / 121][Stage 9:===============================================>      (107 + 14) / 121][Stage 9:=====================================================> (118 + 3) / 121][Stage 9:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.173898211 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.609062975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:============================>                         (60 + 53) / 113][Stage 10:===================================>                  (74 + 39) / 113][Stage 10:============================================>         (93 + 20) / 113][Stage 10:==============================================>       (97 + 16) / 113][Stage 10:===================================================>  (108 + 5) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:============================>                         (61 + 53) / 114][Stage 11:===================================>                  (74 + 40) / 114][Stage 11:===========================================>          (92 + 22) / 114][Stage 11:==================================================>   (107 + 7) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.835574445 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517922417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (71 + 47) / 118][Stage 12:==================================>                   (75 + 43) / 118][Stage 12:===================================>                  (78 + 40) / 118][Stage 12:=====================================>                (81 + 37) / 118][Stage 12:======================================>               (84 + 34) / 118][Stage 12:==============================================>      (103 + 15) / 118][Stage 12:=====================================================>(116 + 2) / 118]                                                                                [Stage 13:==================================>                   (75 + 44) / 119][Stage 13:==================================>                   (77 + 42) / 119][Stage 13:=======================================>              (88 + 31) / 119][Stage 13:============================================>         (97 + 22) / 119][Stage 13:================================================>    (108 + 11) / 119][Stage 13:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.186593617 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.544885006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:=============================>                        (66 + 55) / 121][Stage 14:====================================>                 (82 + 39) / 121][Stage 14:===========================================>         (100 + 21) / 121][Stage 14:================================================>    (111 + 10) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:==============================>                       (70 + 52) / 122][Stage 15:====================================>                 (83 + 39) / 122][Stage 15:===============================================>     (109 + 13) / 122][Stage 15:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.564620441 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45143172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (79 + 36) / 115][Stage 16:=========================================>            (88 + 27) / 115][Stage 16:==============================================>       (98 + 17) / 115][Stage 16:===============================================>     (102 + 13) / 115][Stage 16:===============================================>     (104 + 11) / 115][Stage 16:==================================================>   (108 + 7) / 115][Stage 16:=====================================================>(114 + 1) / 115]                                                                                [Stage 17:=======================================>              (84 + 32) / 116][Stage 17:==========================================>           (91 + 25) / 116][Stage 17:==============================================>      (101 + 15) / 116][Stage 17:==================================================>   (108 + 8) / 116][Stage 17:=====================================================>(114 + 2) / 116][Stage 17:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.044170155 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.534529692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (57 + 56) / 113][Stage 18:============================>                         (59 + 54) / 113][Stage 18:=================================>                    (71 + 42) / 113][Stage 18:=========================================>            (87 + 26) / 113][Stage 18:=================================================>    (104 + 9) / 113][Stage 18:====================================================> (109 + 4) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:==============================>                       (64 + 50) / 114][Stage 19:=======================================>              (84 + 30) / 114][Stage 19:===============================================>     (102 + 12) / 114][Stage 19:===================================================>  (108 + 6) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.014380459 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.57643577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===========================>                          (62 + 58) / 120][Stage 20:================================>                     (73 + 47) / 120][Stage 20:=========================================>            (93 + 27) / 120][Stage 20:==================================================>   (112 + 8) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:================================>                     (73 + 48) / 121][Stage 21:=======================================>              (89 + 32) / 121][Stage 21:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 3.320124145 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436005069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=====================================>                (80 + 35) / 115][Stage 22:=========================================>            (88 + 27) / 115][Stage 22:==============================================>      (101 + 14) / 115][Stage 22:===================================================>  (109 + 6) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:=====================================>                (81 + 35) / 116][Stage 23:=========================================>            (89 + 27) / 116][Stage 23:=============================================>        (98 + 18) / 116][Stage 23:================================================>    (106 + 10) / 116][Stage 23:=====================================================>(114 + 2) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.555645519 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.682835719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:=================================>                    (75 + 46) / 121][Stage 24:===========================================>          (97 + 24) / 121][Stage 24:================================================>    (111 + 10) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:==============================>                       (68 + 54) / 122][Stage 25:======================================>               (86 + 36) / 122][Stage 25:===========================================>         (100 + 22) / 122][Stage 25:===============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.454527069 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511958059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (61 + 59) / 120][Stage 26:==============================>                       (68 + 52) / 120][Stage 26:=========================================>            (93 + 27) / 120][Stage 26:====================================================> (116 + 4) / 120]                                                                                [Stage 27:===========================>                          (61 + 60) / 121][Stage 27:=================================>                    (74 + 47) / 121][Stage 27:=========================================>            (93 + 28) / 121][Stage 27:==============================================>      (107 + 14) / 121][Stage 27:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.468184715 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450751158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (71 + 47) / 118][Stage 28:==================================>                   (76 + 42) / 118][Stage 28:========================================>             (88 + 30) / 118][Stage 28:==================================================>   (110 + 8) / 118][Stage 28:=====================================================>(117 + 1) / 118]                                                                                [Stage 29:==================================>                   (75 + 44) / 119][Stage 29:========================================>             (89 + 30) / 119][Stage 29:==================================================>   (111 + 8) / 119][Stage 29:=====================================================>(117 + 2) / 119][Stage 29:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.476259143 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470268162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (73 + 45) / 118][Stage 30:=====================================>                (81 + 37) / 118][Stage 30:============================================>         (98 + 20) / 118][Stage 30:===================================================>  (112 + 6) / 118][Stage 30:=====================================================>(117 + 1) / 118]                                                                                [Stage 31:=================================>                    (73 + 46) / 119][Stage 31:=====================================>                (82 + 37) / 119][Stage 31:===========================================>          (96 + 23) / 119][Stage 31:===================================================>  (114 + 5) / 119][Stage 31:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.275215005 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410187666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:======================================>               (81 + 34) / 115][Stage 32:=========================================>            (88 + 27) / 115][Stage 32:===============================================>     (103 + 12) / 115][Stage 32:====================================================> (112 + 3) / 115]                                                                                [Stage 33:=======================================>              (85 + 31) / 116][Stage 33:==============================================>      (102 + 14) / 116][Stage 33:===================================================>  (110 + 6) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.224951581 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474049916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:====================================>                 (77 + 36) / 113][Stage 34:========================================>             (85 + 28) / 113][Stage 34:============================================>         (93 + 20) / 113][Stage 34:===============================================>     (101 + 12) / 113][Stage 34:===================================================>  (108 + 5) / 113]                                                                                [Stage 35:====================================>                 (77 + 37) / 114][Stage 35:=========================================>            (87 + 27) / 114][Stage 35:=============================================>        (96 + 18) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(112 + 2) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.434989932 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53324287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:===============================>                      (70 + 50) / 120][Stage 36:======================================>               (85 + 35) / 120][Stage 36:================================================>    (109 + 11) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:===============================>                      (70 + 51) / 121][Stage 37:=====================================>                (85 + 36) / 121][Stage 37:=============================================>       (105 + 16) / 121][Stage 37:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.28172883 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412345533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (83 + 32) / 115][Stage 38:===========================================>          (93 + 22) / 115][Stage 38:===============================================>     (104 + 11) / 115][Stage 38:=====================================================>(113 + 2) / 115][Stage 38:=====================================================>(114 + 1) / 115]                                                                                [Stage 39:========================================>             (88 + 28) / 116][Stage 39:=============================================>        (97 + 19) / 116][Stage 39:================================================>    (106 + 10) / 116][Stage 39:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.128339329 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406915496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (82 + 33) / 115][Stage 40:===========================================>          (93 + 22) / 115][Stage 40:=================================================>    (106 + 9) / 115][Stage 40:====================================================> (112 + 3) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:==========================================>           (91 + 25) / 116][Stage 41:===============================================>     (104 + 12) / 116][Stage 41:===================================================>  (110 + 6) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.212250966 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478619451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:============================>                         (59 + 54) / 113][Stage 42:==================================>                   (73 + 40) / 113][Stage 42:=============================================>        (96 + 17) / 113][Stage 42:===================================================>  (108 + 5) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:=============================>                        (62 + 52) / 114][Stage 43:=======================================>              (83 + 31) / 114][Stage 43:==============================================>      (100 + 14) / 114][Stage 43:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.275819935 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438826541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (70 + 45) / 115][Stage 44:==========================================>           (91 + 24) / 115][Stage 44:===============================================>     (102 + 13) / 115]                                                                                [Stage 45:===================================>                  (76 + 40) / 116][Stage 45:========================================>             (88 + 28) / 116][Stage 45:==================================================>   (108 + 8) / 116][Stage 45:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.803045204 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456549919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:===========================>                          (61 + 60) / 121][Stage 46:===============================>                      (71 + 50) / 121][Stage 46:======================================>               (87 + 34) / 121][Stage 46:==================================================>   (114 + 7) / 121]                                                                                [Stage 47:============================>                         (64 + 58) / 122][Stage 47:================================>                     (74 + 48) / 122][Stage 47:===========================================>         (101 + 21) / 122][Stage 47:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.108794289 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512269702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:===========================>                          (62 + 58) / 120][Stage 48:====================================>                 (82 + 38) / 120][Stage 48:============================================>        (101 + 19) / 120][Stage 48:===================================================>  (115 + 5) / 120]                                                                                [Stage 49:=============================>                        (67 + 54) / 121][Stage 49:====================================>                 (82 + 39) / 121][Stage 49:============================================>        (101 + 20) / 121][Stage 49:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.209941403 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=225", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=225,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458373046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:================================>                     (67 + 46) / 113][Stage 50:========================================>             (84 + 29) / 113][Stage 50:==============================================>      (100 + 13) / 113][Stage 50:====================================================> (109 + 4) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:=============================>                        (63 + 51) / 114][Stage 51:==================================>                   (73 + 41) / 114][Stage 51:=============================================>        (95 + 19) / 114][Stage 51:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.110164056 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458079805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:=============================>                        (65 + 56) / 121][Stage 52:=================================>                    (74 + 47) / 121][Stage 52:=========================================>            (94 + 27) / 121][Stage 52:====================================================> (117 + 4) / 121]                                                                                [Stage 53:===========================>                          (62 + 60) / 122][Stage 53:=================================>                    (75 + 47) / 122][Stage 53:============================================>        (102 + 20) / 122][Stage 53:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.116559479 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43229416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==============================>                       (66 + 49) / 115][Stage 54:=====================================>                (80 + 35) / 115][Stage 54:==============================================>       (98 + 17) / 115][Stage 54:===================================================>  (110 + 5) / 115]                                                                                [Stage 55:==================================>                   (74 + 42) / 116][Stage 55:=========================================>            (90 + 26) / 116][Stage 55:================================================>    (106 + 10) / 116][Stage 55:====================================================> (112 + 4) / 116][Stage 55:=====================================================>(114 + 2) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.479276611 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448327194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:============================>                         (63 + 57) / 120][Stage 56:===================================>                  (78 + 42) / 120][Stage 56:============================================>         (98 + 22) / 120][Stage 56:===================================================>  (115 + 5) / 120][Stage 56:=====================================================>(119 + 1) / 120]                                                                                [Stage 57:===========================>                          (61 + 60) / 121][Stage 57:=============================>                        (66 + 55) / 121][Stage 57:=========================================>            (92 + 29) / 121][Stage 57:================================================>    (111 + 10) / 121][Stage 57:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.858048478 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436087154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:=============================>                        (61 + 52) / 113][Stage 58:=================================>                    (70 + 43) / 113][Stage 58:=========================================>            (87 + 26) / 113][Stage 58:=================================================>    (104 + 9) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:==================================>                   (72 + 42) / 114][Stage 59:==========================================>           (89 + 25) / 114][Stage 59:==================================================>   (107 + 7) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.373615688 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452719968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:============================>                         (64 + 56) / 120][Stage 60:==================================>                   (77 + 43) / 120][Stage 60:============================================>        (101 + 19) / 120][Stage 60:===================================================>  (115 + 5) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:==============================>                       (69 + 52) / 121][Stage 61:=======================================>              (89 + 32) / 121][Stage 61:=============================================>       (104 + 17) / 121][Stage 61:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.356150272 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474974261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:=============================>                        (66 + 54) / 120][Stage 62:=================================>                    (74 + 46) / 120][Stage 62:==============================================>      (106 + 14) / 120][Stage 62:=====================================================>(119 + 1) / 120]                                                                                [Stage 63:===========================>                          (62 + 59) / 121][Stage 63:=============================>                        (67 + 54) / 121][Stage 63:====================================>                 (81 + 40) / 121][Stage 63:=============================================>       (104 + 17) / 121][Stage 63:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.149536213 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=181", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=181,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421219525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=============================>                        (62 + 51) / 113][Stage 64:======================================>               (80 + 33) / 113][Stage 64:==============================================>       (97 + 16) / 113][Stage 64:====================================================> (109 + 4) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:===============================>                      (67 + 47) / 114][Stage 65:=========================================>            (88 + 26) / 114][Stage 65:===============================================>     (103 + 11) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.280466325 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41975184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:=================================>                    (73 + 45) / 118][Stage 66:===================================>                  (78 + 40) / 118][Stage 66:=======================================>              (86 + 32) / 118][Stage 66:============================================>         (98 + 20) / 118][Stage 66:================================================>    (107 + 11) / 118][Stage 66:=====================================================>(117 + 1) / 118]                                                                                [Stage 67:=================================>                    (73 + 46) / 119][Stage 67:==================================>                   (76 + 43) / 119][Stage 67:====================================>                 (81 + 38) / 119][Stage 67:========================================>             (89 + 30) / 119][Stage 67:=============================================>       (103 + 16) / 119][Stage 67:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.642599697 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41963434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==============================>                       (66 + 49) / 115][Stage 68:=====================================>                (80 + 35) / 115][Stage 68:============================================>         (94 + 21) / 115][Stage 68:==================================================>   (108 + 7) / 115][Stage 68:===================================================>  (109 + 6) / 115]                                                                                [Stage 69:=====================================>                (81 + 35) / 116][Stage 69:===========================================>          (93 + 23) / 116][Stage 69:=================================================>    (107 + 9) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.13528777 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455020116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:=============================>                        (65 + 55) / 120][Stage 70:============================================>         (98 + 22) / 120][Stage 70:====================================================> (116 + 4) / 120]                                                                                [Stage 71:============================>                         (63 + 58) / 121][Stage 71:===================================>                  (79 + 42) / 121][Stage 71:=============================================>       (103 + 18) / 121][Stage 71:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.012075747 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436396256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:===============================>                      (65 + 48) / 113][Stage 72:======================================>               (81 + 32) / 113][Stage 72:===============================================>     (101 + 12) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:===========================>                          (59 + 55) / 114][Stage 73:=============================>                        (63 + 51) / 114][Stage 73:======================================>               (81 + 33) / 114][Stage 73:==============================================>       (99 + 15) / 114][Stage 73:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.212288145 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401713222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:====================================>                 (77 + 38) / 115][Stage 74:========================================>             (86 + 29) / 115][Stage 74:===============================================>     (104 + 11) / 115][Stage 74:=====================================================>(113 + 2) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:================================>                     (69 + 47) / 116][Stage 75:========================================>             (86 + 30) / 116][Stage 75:==========================================>           (92 + 24) / 116][Stage 75:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.946780614 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404512391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (80 + 33) / 113][Stage 76:===========================================>          (91 + 22) / 113][Stage 76:==============================================>      (100 + 13) / 113][Stage 76:==================================================>   (106 + 7) / 113][Stage 76:====================================================> (110 + 3) / 113]                                                                                [Stage 77:=====================================>                (80 + 34) / 114][Stage 77:============================================>         (94 + 20) / 114][Stage 77:==================================================>   (107 + 7) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.129831617 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422711491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:===========================>                          (62 + 59) / 121][Stage 78:=================================>                    (74 + 47) / 121][Stage 78:=============================================>       (104 + 17) / 121][Stage 78:=====================================================>(119 + 2) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:=============================>                        (66 + 56) / 122][Stage 79:=================================>                    (75 + 47) / 122][Stage 79:==============================================>      (106 + 16) / 122][Stage 79:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.13318909 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44958972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (60 + 60) / 120][Stage 80:=============================>                        (65 + 55) / 120][Stage 80:=====================================>                (83 + 37) / 120][Stage 80:===============================================>     (107 + 13) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:===============================>                      (70 + 51) / 121][Stage 81:======================================>               (86 + 35) / 121][Stage 81:=================================================>    (112 + 9) / 121][Stage 81:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.111283398 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39514678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:=====================================>                (83 + 35) / 118][Stage 82:==========================================>           (92 + 26) / 118][Stage 82:==============================================>      (104 + 14) / 118][Stage 82:====================================================> (114 + 4) / 118]                                                                                [Stage 83:=================================>                    (74 + 45) / 119][Stage 83:==================================>                   (77 + 42) / 119][Stage 83:=========================================>            (92 + 27) / 119][Stage 83:============================================>        (100 + 19) / 119][Stage 83:================================================>    (109 + 10) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.644327534 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47090217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=======================================>              (84 + 31) / 115][Stage 84:==========================================>           (90 + 25) / 115][Stage 84:===============================================>     (104 + 11) / 115][Stage 84:====================================================> (111 + 4) / 115]                                                                                [Stage 85:=======================================>              (84 + 32) / 116][Stage 85:=========================================>            (90 + 26) / 116][Stage 85:==============================================>       (99 + 17) / 116][Stage 85:===================================================>  (110 + 6) / 116][Stage 85:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.82555204 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423122633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (61 + 59) / 120][Stage 86:==================================>                   (76 + 44) / 120][Stage 86:==========================================>           (95 + 25) / 120][Stage 86:=====================================================>(119 + 1) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:=============================>                        (65 + 56) / 121][Stage 87:=================================>                    (75 + 46) / 121][Stage 87:==========================================>           (96 + 25) / 121][Stage 87:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.114102491 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414015783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:================================>                     (67 + 46) / 113][Stage 88:===========================================>          (91 + 22) / 113][Stage 88:=================================================>    (104 + 9) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:===========================>                          (59 + 55) / 114][Stage 89:==============================>                       (65 + 49) / 114][Stage 89:=======================================>              (84 + 30) / 114][Stage 89:==============================================>      (100 + 14) / 114][Stage 89:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.109391297 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=81", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=81,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387275475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:===================================>                  (78 + 40) / 118][Stage 90:==========================================>           (93 + 25) / 118][Stage 90:==================================================>   (111 + 7) / 118]                                                                                [Stage 91:=================================>                    (74 + 45) / 119][Stage 91:=====================================>                (82 + 37) / 119][Stage 91:===========================================>          (96 + 23) / 119][Stage 91:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.969055636 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43420653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:===========================>                          (61 + 60) / 121][Stage 92:==============================>                       (69 + 52) / 121][Stage 92:=========================================>            (94 + 27) / 121][Stage 92:===================================================>  (115 + 6) / 121]                                                                                [Stage 93:============================>                         (64 + 58) / 122][Stage 93:===============================>                      (72 + 50) / 122][Stage 93:==========================================>           (95 + 27) / 122][Stage 93:================================================>    (112 + 10) / 122][Stage 93:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.366227665 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347614545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (81 + 34) / 115][Stage 94:============================================>         (94 + 21) / 115][Stage 94:===============================================>     (104 + 11) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:=======================================>              (85 + 31) / 116][Stage 95:=============================================>        (98 + 18) / 116][Stage 95:===================================================>  (111 + 5) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.077896937 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381143295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:===================================>                  (78 + 40) / 118][Stage 96:=========================================>            (90 + 28) / 118][Stage 96:================================================>    (107 + 11) / 118][Stage 96:=====================================================>(116 + 2) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:==================================>                   (76 + 43) / 119][Stage 97:========================================>             (90 + 29) / 119][Stage 97:================================================>    (108 + 11) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.099051947 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392529093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==============================>                       (66 + 49) / 115][Stage 98:=====================================>                (80 + 35) / 115][Stage 98:==============================================>       (99 + 16) / 115][Stage 98:=====================================================>(113 + 2) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:================================>                     (69 + 47) / 116][Stage 99:=======================================>              (84 + 32) / 116][Stage 99:==============================================>      (102 + 14) / 116][Stage 99:====================================================> (112 + 4) / 116][Stage 99:=====================================================>(114 + 2) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.848636458 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=174", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=174,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41581231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:==============================>                      (65 + 48) / 113][Stage 100:======================================>              (82 + 31) / 113][Stage 100:==============================================>      (99 + 14) / 113][Stage 100:===================================================> (109 + 4) / 113]                                                                                [Stage 101:===========================>                         (59 + 55) / 114][Stage 101:============================>                        (61 + 53) / 114][Stage 101:====================================>                (79 + 35) / 114][Stage 101:==============================================>     (101 + 13) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.132035878 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383869545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=================================>                   (71 + 42) / 113][Stage 102:=======================================>             (84 + 29) / 113][Stage 102:===========================================>         (93 + 20) / 113][Stage 102:================================================>    (104 + 9) / 113]                                                                                [Stage 103:======================================>              (82 + 32) / 114][Stage 103:========================================>            (88 + 26) / 114][Stage 103:===========================================>         (94 + 20) / 114][Stage 103:=================================================>   (107 + 7) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.01987791 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400072979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (59 + 54) / 113][Stage 104:=================================>                   (72 + 41) / 113][Stage 104:==========================================>          (90 + 23) / 113][Stage 104:==============================================>     (101 + 12) / 113][Stage 104:====================================================>(111 + 2) / 113]                                                                                [Stage 105:============================>                        (62 + 52) / 114][Stage 105:=================================>                   (72 + 42) / 114][Stage 105:==========================================>          (92 + 22) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.084201204 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510215382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===========================>                         (63 + 58) / 121][Stage 106:================================>                    (74 + 47) / 121][Stage 106:===========================================>        (102 + 19) / 121][Stage 106:====================================================>(120 + 1) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:=============================>                       (68 + 54) / 122][Stage 107:========================================>            (93 + 29) / 122][Stage 107:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 2.910456972 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=103", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=103,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406404519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (60 + 53) / 113][Stage 108:===================================>                 (75 + 38) / 113][Stage 108:==========================================>          (91 + 22) / 113][Stage 108:===================================================> (109 + 4) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:================================>                    (69 + 45) / 114][Stage 109:============================================>        (95 + 19) / 114][Stage 109:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.006946611 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346737363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:======================================>              (83 + 32) / 115][Stage 110:==========================================>          (92 + 23) / 115][Stage 110:================================================>    (106 + 9) / 115][Stage 110:===================================================> (112 + 3) / 115]                                                                                [Stage 111:======================================>              (85 + 31) / 116][Stage 111:===========================================>         (96 + 20) / 116][Stage 111:=================================================>   (109 + 7) / 116][Stage 111:====================================================>(114 + 2) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.235325965 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369384557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=================================>                   (74 + 44) / 118][Stage 112:=====================================>               (83 + 35) / 118][Stage 112:===============================================>    (108 + 10) / 118][Stage 112:===================================================> (114 + 4) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:=================================>                   (75 + 44) / 119][Stage 113:======================================>              (86 + 33) / 119][Stage 113:==============================================>     (106 + 13) / 119][Stage 113:===================================================> (116 + 3) / 119][Stage 113:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.361597142 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342036008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:========================================>            (88 + 27) / 115][Stage 114:=================================================>   (107 + 8) / 115][Stage 114:===================================================> (112 + 3) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:=========================================>           (90 + 26) / 116][Stage 115:============================================>       (100 + 16) / 116][Stage 115:==================================================>  (110 + 6) / 116][Stage 115:===================================================> (112 + 4) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.124103861 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345102918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (79 + 36) / 115][Stage 116:========================================>            (87 + 28) / 115][Stage 116:==============================================>     (102 + 13) / 115][Stage 116:==================================================>  (109 + 6) / 115][Stage 116:====================================================>(113 + 2) / 115]                                                                                [Stage 117:========================================>            (88 + 28) / 116][Stage 117:==============================================>     (104 + 12) / 116][Stage 117:==================================================>  (110 + 6) / 116][Stage 117:====================================================>(114 + 2) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.335134737 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=187", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=187,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357672759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=================================>                   (71 + 42) / 113][Stage 118:=====================================>               (79 + 34) / 113][Stage 118:==========================================>          (91 + 22) / 113][Stage 118:=============================================>       (98 + 15) / 113][Stage 118:==================================================>  (107 + 6) / 113][Stage 118:====================================================>(111 + 2) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:===================================>                 (77 + 37) / 114][Stage 119:========================================>            (88 + 26) / 114][Stage 119:=============================================>       (97 + 17) / 114][Stage 119:=================================================>   (107 + 7) / 114][Stage 119:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.282890307 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=118", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=118,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380429995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==============================>                      (66 + 49) / 115][Stage 120:==================================>                  (74 + 41) / 115][Stage 120:============================================>        (96 + 19) / 115][Stage 120:===================================================> (112 + 3) / 115][Stage 120:====================================================>(114 + 1) / 115]                                                                                [Stage 121:====================================>                (79 + 37) / 116][Stage 121:=============================================>      (101 + 15) / 116][Stage 121:===================================================> (112 + 4) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.905290222 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=5", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=5,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366043628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:================================>                    (73 + 45) / 118][Stage 122:===================================>                 (80 + 38) / 118][Stage 122:========================================>            (91 + 27) / 118][Stage 122:================================================>    (109 + 9) / 118][Stage 122:====================================================>(117 + 1) / 118]                                                                                [Stage 123:=================================>                   (75 + 44) / 119][Stage 123:==================================>                  (78 + 41) / 119][Stage 123:======================================>              (87 + 32) / 119][Stage 123:============================================>       (102 + 17) / 119][Stage 123:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.57126986 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373436432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=============================>                       (64 + 51) / 115][Stage 124:==================================>                  (74 + 41) / 115][Stage 124:===========================================>         (94 + 21) / 115][Stage 124:=================================================>   (107 + 8) / 115][Stage 124:===================================================> (112 + 3) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:===============================>                     (70 + 46) / 116][Stage 125:===================================>                 (78 + 38) / 116][Stage 125:==========================================>          (94 + 22) / 116][Stage 125:=================================================>   (108 + 8) / 116][Stage 125:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.257678387 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374220495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:===================================>                 (78 + 40) / 118][Stage 126:======================================>              (86 + 32) / 118][Stage 126:============================================>       (101 + 17) / 118][Stage 126:===================================================> (115 + 3) / 118]                                                                                [Stage 127:=================================>                   (76 + 43) / 119][Stage 127:========================================>            (90 + 29) / 119][Stage 127:=============================================>      (103 + 16) / 119][Stage 127:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.148070066 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40317331 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:============================>                        (61 + 52) / 113][Stage 128:==================================>                  (74 + 39) / 113][Stage 128:=========================================>           (89 + 24) / 113][Stage 128:===============================================>    (103 + 10) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:==============================>                      (66 + 48) / 114][Stage 129:======================================>              (82 + 32) / 114][Stage 129:==============================================>     (103 + 11) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.188863082 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33615459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:======================================>              (84 + 31) / 115][Stage 130:=============================================>       (98 + 17) / 115][Stage 130:=================================================>   (108 + 7) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:=====================================>               (83 + 33) / 116][Stage 131:==========================================>          (94 + 22) / 116][Stage 131:=================================================>   (108 + 8) / 116][Stage 131:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.47572511 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521902323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 60) / 120][Stage 132:=============================>                       (66 + 54) / 120][Stage 132:=====================================>               (85 + 35) / 120][Stage 132:============================================>       (102 + 18) / 120][Stage 132:====================================================>(118 + 2) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:===============================>                     (71 + 50) / 121][Stage 133:========================================>            (92 + 29) / 121][Stage 133:==================================================>  (115 + 6) / 121][Stage 133:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.132211537 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=116", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=116,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361359292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:==================================>                  (77 + 41) / 118][Stage 134:==========================================>          (94 + 24) / 118][Stage 134:==================================================>  (112 + 6) / 118][Stage 134:====================================================>(117 + 1) / 118]                                                                                [Stage 135:================================>                    (73 + 46) / 119][Stage 135:===================================>                 (79 + 40) / 119][Stage 135:=========================================>           (94 + 25) / 119][Stage 135:===============================================>    (108 + 11) / 119][Stage 135:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.085248723 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340223323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:======================================>              (84 + 31) / 115][Stage 136:=============================================>       (98 + 17) / 115][Stage 136:==================================================>  (110 + 5) / 115]                                                                                [Stage 137:=====================================>               (82 + 34) / 116][Stage 137:==========================================>          (93 + 23) / 116][Stage 137:================================================>    (107 + 9) / 116][Stage 137:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.790300151 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396537589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:=============================>                       (67 + 53) / 120][Stage 138:=====================================>               (86 + 34) / 120][Stage 138:==================================================>  (114 + 6) / 120][Stage 138:====================================================>(119 + 1) / 120]                                                                                [Stage 139:==========================>                          (61 + 60) / 121][Stage 139:===============================>                     (71 + 50) / 121][Stage 139:======================================>              (89 + 32) / 121][Stage 139:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.024240284 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394985704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (61 + 59) / 120][Stage 140:================================>                    (73 + 47) / 120][Stage 140:==========================================>          (97 + 23) / 120][Stage 140:==================================================>  (114 + 6) / 120]                                                                                [Stage 141:============================>                        (64 + 57) / 121][Stage 141:===================================>                 (82 + 39) / 121][Stage 141:==========================================>         (100 + 21) / 121][Stage 141:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.114866164 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36329816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (70 + 43) / 113][Stage 142:======================================>              (83 + 30) / 113][Stage 142:============================================>        (94 + 19) / 113][Stage 142:==============================================>     (101 + 12) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:====================================>                (78 + 36) / 114][Stage 143:========================================>            (88 + 26) / 114][Stage 143:=============================================>       (98 + 16) / 114][Stage 143:===================================================> (110 + 4) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.959492353 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336488371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (81 + 34) / 115][Stage 144:=========================================>           (89 + 26) / 115][Stage 144:=============================================>       (99 + 16) / 115][Stage 144:==================================================>  (109 + 6) / 115]                                                                                [Stage 145:========================================>            (89 + 27) / 116][Stage 145:=============================================>      (102 + 14) / 116][Stage 145:===================================================> (112 + 4) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.712637179 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380625177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=============================>                       (64 + 51) / 115][Stage 146:===================================>                 (77 + 38) / 115][Stage 146:============================================>        (96 + 19) / 115][Stage 146:==================================================>  (109 + 6) / 115]                                                                                [Stage 147:===================================>                 (77 + 39) / 116][Stage 147:=========================================>           (90 + 26) / 116][Stage 147:===============================================>    (106 + 10) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.687011455 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=72", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=72,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33914418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (83 + 32) / 115][Stage 148:==========================================>          (93 + 22) / 115][Stage 148:================================================>    (106 + 9) / 115][Stage 148:====================================================>(113 + 2) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:=========================================>           (90 + 26) / 116][Stage 149:==============================================>     (103 + 13) / 116][Stage 149:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.865679346 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407230265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:=============================>                       (66 + 54) / 120][Stage 150:=====================================>               (85 + 35) / 120][Stage 150:==============================================>     (108 + 12) / 120][Stage 150:===================================================> (117 + 3) / 120]                                                                                [Stage 151:===========================>                         (63 + 58) / 121][Stage 151:==================================>                  (78 + 43) / 121][Stage 151:===========================================>         (99 + 22) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.140382074 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519144415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 61) / 121][Stage 152:=============================>                       (67 + 54) / 121][Stage 152:=====================================>               (86 + 35) / 121][Stage 152:=============================================>      (107 + 14) / 121][Stage 152:===================================================> (117 + 4) / 121]                                                                                [Stage 153:===========================>                         (64 + 58) / 122][Stage 153:=================================>                   (78 + 44) / 122][Stage 153:===========================================>        (103 + 19) / 122][Stage 153:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.139083652 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369795142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===============================>                     (69 + 46) / 115][Stage 154:=====================================>               (81 + 34) / 115][Stage 154:=============================================>      (100 + 15) / 115][Stage 154:==================================================>  (109 + 6) / 115]                                                                                [Stage 155:===============================>                     (70 + 46) / 116][Stage 155:=====================================>               (81 + 35) / 116][Stage 155:=============================================>       (99 + 17) / 116][Stage 155:==================================================>  (110 + 6) / 116][Stage 155:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.001212577 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40250767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (62 + 59) / 121][Stage 156:================================>                    (75 + 46) / 121][Stage 156:==========================================>          (97 + 24) / 121][Stage 156:=================================================>   (113 + 8) / 121][Stage 156:====================================================>(119 + 2) / 121]                                                                                [Stage 157:==========================>                          (62 + 60) / 122][Stage 157:================================>                    (74 + 48) / 122][Stage 157:==========================================>         (100 + 22) / 122][Stage 157:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.263822806 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351551742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (73 + 40) / 113][Stage 158:========================================>            (87 + 26) / 113][Stage 158:=============================================>       (97 + 16) / 113][Stage 158:=================================================>   (106 + 7) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:=================================>                   (72 + 42) / 114][Stage 159:=======================================>             (85 + 29) / 114][Stage 159:============================================>        (96 + 18) / 114][Stage 159:=================================================>   (107 + 7) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.026706983 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350455778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=====================================>               (81 + 32) / 113][Stage 160:==========================================>          (91 + 22) / 113][Stage 160:==============================================>     (102 + 11) / 113][Stage 160:==================================================>  (108 + 5) / 113]                                                                                [Stage 161:======================================>              (83 + 31) / 114][Stage 161:============================================>        (95 + 19) / 114][Stage 161:==============================================>     (102 + 12) / 114][Stage 161:==================================================>  (109 + 5) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.432010763 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483346257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==============================>                      (67 + 48) / 115][Stage 162:=========================================>           (89 + 26) / 115][Stage 162:=============================================>       (99 + 16) / 115][Stage 162:=================================================>   (108 + 7) / 115][Stage 162:===================================================> (111 + 4) / 115]                                                                                [Stage 163:===================================>                 (78 + 38) / 116][Stage 163:========================================>            (89 + 27) / 116][Stage 163:===============================================>    (106 + 10) / 116][Stage 163:====================================================>(114 + 2) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.238302785 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401227386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:===============================>                     (73 + 48) / 121][Stage 164:==========================================>          (96 + 25) / 121][Stage 164:=================================================>   (114 + 7) / 121]                                                                                [Stage 165:=============================>                       (67 + 55) / 122][Stage 165:===================================>                 (81 + 41) / 122][Stage 165:==============================================>     (108 + 14) / 122][Stage 165:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.005549177 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336374432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=====================================>               (81 + 34) / 115][Stage 166:=========================================>           (91 + 24) / 115][Stage 166:==============================================>     (102 + 13) / 115][Stage 166:=================================================>   (108 + 7) / 115]                                                                                [Stage 167:=======================================>             (86 + 30) / 116][Stage 167:==========================================>          (93 + 23) / 116][Stage 167:==============================================>     (104 + 12) / 116][Stage 167:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.946937984 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355156254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:======================================>              (83 + 32) / 115][Stage 168:=========================================>           (89 + 26) / 115][Stage 168:=================================================>   (107 + 8) / 115][Stage 168:====================================================>(113 + 2) / 115]                                                                                [Stage 169:=====================================>               (82 + 34) / 116][Stage 169:=========================================>           (91 + 25) / 116][Stage 169:================================================>    (107 + 9) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.633249987 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387879903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:============================>                        (61 + 52) / 113][Stage 170:==================================>                  (73 + 40) / 113][Stage 170:============================================>        (94 + 19) / 113][Stage 170:==================================================>  (108 + 5) / 113]                                                                                [Stage 171:=============================>                       (63 + 51) / 114][Stage 171:=====================================>               (80 + 34) / 114][Stage 171:===============================================>    (104 + 10) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.064956396 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422983079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (62 + 58) / 120][Stage 172:================================>                    (74 + 46) / 120][Stage 172:===========================================>        (101 + 19) / 120][Stage 172:===================================================> (117 + 3) / 120]                                                                                [Stage 173:===========================>                         (63 + 58) / 121][Stage 173:=================================>                   (76 + 45) / 121][Stage 173:=========================================>           (95 + 26) / 121][Stage 173:==================================================>  (115 + 6) / 121][Stage 173:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.360927016 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401481588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (61 + 59) / 120][Stage 174:==============================>                      (70 + 50) / 120][Stage 174:=========================================>           (95 + 25) / 120][Stage 174:===============================================>    (110 + 10) / 120]                                                                                [Stage 175:===========================>                         (62 + 59) / 121][Stage 175:===============================>                     (73 + 48) / 121][Stage 175:========================================>            (93 + 28) / 121][Stage 175:===============================================>    (111 + 10) / 121][Stage 175:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.12586676 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352030404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=======================================>             (84 + 29) / 113][Stage 176:==========================================>          (91 + 22) / 113][Stage 176:===============================================>    (103 + 10) / 113][Stage 176:===================================================> (109 + 4) / 113]                                                                                [Stage 177:=======================================>             (85 + 29) / 114][Stage 177:============================================>        (95 + 19) / 114][Stage 177:===============================================>    (104 + 10) / 114][Stage 177:==================================================>  (109 + 5) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.048117484 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35672196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:>                                                      (0 + 0) / 118][Stage 178:================================>                    (72 + 46) / 118][Stage 178:===================================>                 (79 + 39) / 118][Stage 178:========================================>            (90 + 28) / 118][Stage 178:=================================================>   (110 + 8) / 118][Stage 178:====================================================>(116 + 2) / 118]                                                                                [Stage 179:===================================>                 (80 + 39) / 119][Stage 179:=======================================>             (89 + 30) / 119][Stage 179:=============================================>      (103 + 16) / 119][Stage 179:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.151597207 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393464221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (62 + 59) / 121][Stage 180:===============================>                     (73 + 48) / 121][Stage 180:==========================================>          (97 + 24) / 121][Stage 180:====================================================>(119 + 2) / 121]                                                                                [Stage 181:==========================>                          (61 + 61) / 122][Stage 181:=============================>                       (67 + 55) / 122][Stage 181:====================================>                (84 + 38) / 122][Stage 181:=============================================>      (107 + 15) / 122][Stage 181:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.044653655 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391995057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:=================================>                   (74 + 44) / 118][Stage 182:===================================>                 (80 + 38) / 118][Stage 182:=======================================>             (87 + 31) / 118][Stage 182:============================================>       (102 + 16) / 118][Stage 182:===================================================> (115 + 3) / 118]                                                                                [Stage 183:================================>                    (74 + 45) / 119][Stage 183:===================================>                 (80 + 39) / 119][Stage 183:=========================================>           (94 + 25) / 119][Stage 183:=============================================>      (103 + 16) / 119]                                                                                Time elapsed: 3.380962068 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=16", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=16,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403412795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=================================>                   (73 + 42) / 115][Stage 184:=========================================>           (89 + 26) / 115][Stage 184:==============================================>     (102 + 13) / 115][Stage 184:====================================================>(113 + 2) / 115]                                                                                [Stage 185:=======================================>             (86 + 30) / 116][Stage 185:=============================================>      (101 + 15) / 116][Stage 185:===================================================> (112 + 4) / 116][Stage 185:====================================================>(114 + 2) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.324124121 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376607327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==============================>                      (64 + 49) / 113][Stage 186:==================================>                  (73 + 40) / 113][Stage 186:=========================================>           (88 + 25) / 113][Stage 186:===============================================>    (103 + 10) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:================================>                    (69 + 45) / 114][Stage 187:=====================================>               (81 + 33) / 114][Stage 187:===========================================>         (94 + 20) / 114][Stage 187:================================================>    (105 + 9) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.477979072 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381070161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==================================>                  (75 + 40) / 115][Stage 188:=========================================>           (90 + 25) / 115][Stage 188:================================================>    (106 + 9) / 115][Stage 188:===================================================> (112 + 3) / 115]                                                                                [Stage 189:==============================>                      (66 + 50) / 116][Stage 189:===================================>                 (78 + 38) / 116][Stage 189:==========================================>          (93 + 23) / 116][Stage 189:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.790436857 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332729502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=======================================>             (85 + 30) / 115][Stage 190:==========================================>          (92 + 23) / 115][Stage 190:===============================================>    (104 + 11) / 115]                                                                                [Stage 191:======================================>              (85 + 31) / 116][Stage 191:==========================================>          (94 + 22) / 116][Stage 191:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.478990227 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371903952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=================================>                   (73 + 42) / 115][Stage 192:=======================================>             (85 + 30) / 115][Stage 192:============================================>        (97 + 18) / 115][Stage 192:===================================================> (111 + 4) / 115]                                                                                [Stage 193:=====================================>               (81 + 35) / 116][Stage 193:==========================================>          (94 + 22) / 116][Stage 193:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.808837199 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389064029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (73 + 45) / 118][Stage 194:====================================>                (82 + 36) / 118][Stage 194:============================================>        (99 + 19) / 118][Stage 194:=================================================>   (110 + 8) / 118]                                                                                [Stage 195:================================>                    (74 + 45) / 119][Stage 195:====================================>                (81 + 38) / 119][Stage 195:===========================================>         (97 + 22) / 119][Stage 195:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 2.975643412 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363180743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:====================================>                (78 + 35) / 113][Stage 196:========================================>            (87 + 26) / 113][Stage 196:=============================================>       (97 + 16) / 113][Stage 196:==============================================>     (102 + 11) / 113][Stage 196:===================================================> (109 + 4) / 113]                                                                                [Stage 197:======================================>              (82 + 32) / 114][Stage 197:=========================================>           (90 + 24) / 114][Stage 197:=============================================>       (97 + 17) / 114][Stage 197:==================================================>  (108 + 6) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.245075766 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437329229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 60) / 120][Stage 198:==============================>                      (70 + 50) / 120][Stage 198:========================================>            (92 + 28) / 120][Stage 198:==============================================>     (107 + 13) / 120][Stage 198:====================================================>(118 + 2) / 120]                                                                                [Stage 199:==========================>                          (61 + 60) / 121][Stage 199:===========================>                         (63 + 58) / 121][Stage 199:===================================>                 (80 + 41) / 121][Stage 199:============================================>       (104 + 17) / 121][Stage 199:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.07085901 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402421593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:===============================>                     (73 + 48) / 121][Stage 200:=======================================>             (91 + 30) / 121][Stage 200:==============================================>     (109 + 12) / 121][Stage 200:====================================================>(120 + 1) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:===============================>                     (72 + 50) / 122][Stage 201:=========================================>           (95 + 27) / 122][Stage 201:===================================================> (118 + 4) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.277860097 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m0.630s
user	11m41.460s
sys	0m38.292s
