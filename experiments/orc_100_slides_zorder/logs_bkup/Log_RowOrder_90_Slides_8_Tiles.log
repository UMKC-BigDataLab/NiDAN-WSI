Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 12:54:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:55:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:55:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:55:07 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 12:55:10 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:55:20 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522125509-0461).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.369215734 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (46 + 69) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:==========================>                            (56 + 60) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.643331268 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIn dex = 197  OR  partitionIndex = 198 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.652062207 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=====================>                                 (46 + 72) / 118][Stage 2:================================>                      (70 + 48) / 118][Stage 2:==================================>                    (74 + 44) / 118][Stage 2:===================================>                   (77 + 41) / 118][Stage 2:=====================================>                 (80 + 38) / 118][Stage 2:=========================================>             (88 + 30) / 118][Stage 2:=============================================>         (97 + 21) / 118][Stage 2:===================================================>   (111 + 7) / 118]                                                                                [Stage 3:=================================>                     (72 + 47) / 119][Stage 3:=================================>                     (73 + 46) / 119][Stage 3:==================================>                    (74 + 45) / 119][Stage 3:=====================================>                 (82 + 37) / 119][Stage 3:==========================================>            (92 + 27) / 119][Stage 3:===============================================>      (104 + 15) / 119][Stage 3:==================================================>    (110 + 9) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.174049143 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.669481747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:================================>                      (67 + 46) / 113][Stage 4:==================================>                    (71 + 42) / 113][Stage 4:=====================================>                 (78 + 35) / 113][Stage 4:=======================================>               (81 + 32) / 113][Stage 4:==========================================>            (87 + 26) / 113][Stage 4:==============================================>        (96 + 17) / 113][Stage 4:================================================>     (102 + 11) / 113][Stage 4:=====================================================> (109 + 4) / 113]                                                                                [Stage 5:===================================>                   (74 + 40) / 114][Stage 5:=======================================>               (81 + 33) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:==========================================>            (89 + 25) / 114][Stage 5:===============================================>       (99 + 15) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:====================================================>  (109 + 5) / 114][Stage 5:=====================================================> (111 + 3) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.726515002 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIn dex = 192  OR  partitionIndex = 193 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.700762288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=======================>                               (52 + 69) / 121][Stage 6:===========================>                           (61 + 60) / 121][Stage 6:=============================>                         (64 + 57) / 121][Stage 6:===================================>                   (78 + 43) / 121][Stage 6:========================================>              (90 + 31) / 121][Stage 6:===============================================>      (107 + 14) / 121][Stage 6:=====================================================> (118 + 3) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:============================>                          (64 + 58) / 122][Stage 7:=====================================>                 (83 + 39) / 122][Stage 7:============================================>          (98 + 24) / 122][Stage 7:===============================================>      (108 + 14) / 122][Stage 7:====================================================>  (116 + 6) / 122][Stage 7:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 6.048484252 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex =  27  OR  partitionIndex = 28 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.580465563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:================================>                      (70 + 48) / 118][Stage 8:==================================>                    (74 + 44) / 118][Stage 8:========================================>              (86 + 32) / 118][Stage 8:==========================================>            (91 + 27) / 118][Stage 8:==============================================>        (99 + 19) / 118][Stage 8:======================================================>(117 + 1) / 118]                                                                                [Stage 9:==================================>                    (75 + 44) / 119][Stage 9:=======================================>               (85 + 34) / 119][Stage 9:==========================================>            (93 + 26) / 119][Stage 9:=============================================>         (98 + 21) / 119][Stage 9:=================================================>    (108 + 11) / 119][Stage 9:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.372998377 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  pa rtitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex  = 97  OR  partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523568882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:>                                                       (0 + 0) / 113][Stage 10:=================================>                    (70 + 43) / 113][Stage 10:====================================>                 (77 + 36) / 113][Stage 10:=========================================>            (86 + 27) / 113][Stage 10:=============================================>        (95 + 18) / 113][Stage 10:==================================================>   (105 + 8) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:==================================>                   (72 + 42) / 114][Stage 11:=====================================>                (80 + 34) / 114][Stage 11:========================================>             (85 + 29) / 114][Stage 11:============================================>         (94 + 20) / 114][Stage 11:===============================================>     (102 + 12) / 114][Stage 11:=================================================>    (105 + 9) / 114][Stage 11:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.844133824 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR   partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIn dex = 193  OR  partitionIndex = 207 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511311499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:====================================>                 (78 + 37) / 115][Stage 12:=======================================>              (85 + 30) / 115][Stage 12:==============================================>       (99 + 16) / 115][Stage 12:=================================================>    (106 + 9) / 115][Stage 12:===================================================>  (109 + 6) / 115][Stage 12:=====================================================>(113 + 2) / 115]                                                                                [Stage 13:======================================>               (82 + 34) / 116][Stage 13:==========================================>           (92 + 24) / 116][Stage 13:=============================================>       (100 + 16) / 116][Stage 13:===============================================>     (104 + 12) / 116][Stage 13:=================================================>    (107 + 9) / 116][Stage 13:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.785064413 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199  OR   partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIn dex = 202  OR  partitionIndex = 214 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53101617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (70 + 48) / 118][Stage 14:================================>                     (72 + 46) / 118][Stage 14:==================================>                   (75 + 43) / 118][Stage 14:===========================================>          (96 + 22) / 118][Stage 14:================================================>    (107 + 11) / 118][Stage 14:====================================================> (114 + 4) / 118][Stage 14:=====================================================>(116 + 2) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:===================================>                  (79 + 40) / 119][Stage 15:===========================================>          (96 + 23) / 119][Stage 15:===============================================>     (106 + 13) / 119][Stage 15:==================================================>   (112 + 7) / 119][Stage 15:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.534588089 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  p artitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex  = 108  OR  partitionIndex = 64 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.5141283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:>                                                       (0 + 0) / 115][Stage 16:==============================>                       (65 + 50) / 115][Stage 16:================================>                     (69 + 46) / 115][Stage 16:=======================================>              (85 + 30) / 115][Stage 16:==============================================>       (98 + 17) / 115][Stage 16:================================================>    (105 + 10) / 115][Stage 16:=====================================================>(113 + 2) / 115][Stage 16:=====================================================>(114 + 1) / 115]                                                                                [Stage 17:==================================>                   (75 + 41) / 116][Stage 17:=========================================>            (90 + 26) / 116][Stage 17:==============================================>       (99 + 17) / 116][Stage 17:==================================================>   (108 + 8) / 116][Stage 17:==================================================>   (109 + 7) / 116][Stage 17:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 4.337463835 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIn dex = 170  OR  partitionIndex = 156 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515035922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:============================>                         (59 + 54) / 113][Stage 18:===============================>                      (66 + 47) / 113][Stage 18:======================================>               (81 + 32) / 113][Stage 18:=============================================>        (95 + 18) / 113][Stage 18:===============================================>     (101 + 12) / 113][Stage 18:====================================================> (109 + 4) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:=============================>                        (62 + 52) / 114][Stage 19:==================================>                   (72 + 42) / 114][Stage 19:====================================>                 (76 + 38) / 114][Stage 19:===========================================>          (92 + 22) / 114][Stage 19:==============================================>      (101 + 13) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.375789547 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex =  71  OR  partitionIndex = 85 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.579588494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:>                                                       (0 + 0) / 120][Stage 20:===========================>                          (60 + 60) / 120][Stage 20:============================>                         (63 + 57) / 120][Stage 20:====================================>                 (80 + 40) / 120][Stage 20:=========================================>            (93 + 27) / 120][Stage 20:=============================================>       (103 + 17) / 120][Stage 20:===============================================>     (107 + 13) / 120][Stage 20:====================================================> (116 + 4) / 120]                                                                                [Stage 21:=============================>                        (65 + 56) / 121][Stage 21:=====================================>                (85 + 36) / 121][Stage 21:===========================================>         (100 + 21) / 121][Stage 21:==================================================>   (113 + 8) / 121][Stage 21:====================================================> (117 + 4) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.010913293 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIn dex = 213  OR  partitionIndex = 227 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519997838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:============================>                         (63 + 58) / 121][Stage 22:=====================================>                (83 + 38) / 121][Stage 22:============================================>        (101 + 20) / 121][Stage 22:=================================================>    (112 + 9) / 121][Stage 22:=====================================================>(119 + 2) / 121]                                                                                [Stage 23:===========================>                          (61 + 61) / 122][Stage 23:==============================>                       (69 + 53) / 122][Stage 23:========================================>             (92 + 30) / 122][Stage 23:==================================================>   (113 + 9) / 122][Stage 23:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.00532207 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIn dex = 149  OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438955197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=======================================>              (85 + 30) / 115][Stage 24:============================================>         (95 + 20) / 115][Stage 24:===================================================>  (109 + 6) / 115][Stage 24:===================================================>  (110 + 5) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:=========================================>            (90 + 26) / 116][Stage 25:=============================================>       (100 + 16) / 116][Stage 25:=================================================>    (107 + 9) / 116][Stage 25:===================================================>  (111 + 5) / 116][Stage 25:====================================================> (112 + 4) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.735158814 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex  = 79  OR  partitionIndex = 80 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491685541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:================================>                     (68 + 45) / 113][Stage 26:=======================================>              (83 + 30) / 113][Stage 26:=============================================>        (95 + 18) / 113][Stage 26:=================================================>    (104 + 9) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:===============================>                      (67 + 47) / 114][Stage 27:======================================>               (82 + 32) / 114][Stage 27:================================================>    (104 + 10) / 114][Stage 27:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.766902516 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  pa rtitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionInde x = 104  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478489539 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (60 + 53) / 113][Stage 28:================================>                     (67 + 46) / 113][Stage 28:=========================================>            (87 + 26) / 113][Stage 28:==================================================>   (105 + 8) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:===============================>                      (67 + 47) / 114][Stage 29:=====================================>                (79 + 35) / 114][Stage 29:==============================================>       (99 + 15) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.468319818 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIn dex = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431288027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=====================================>                (80 + 35) / 115][Stage 30:=======================================>              (85 + 30) / 115][Stage 30:============================================>         (95 + 20) / 115][Stage 30:=================================================>    (106 + 9) / 115][Stage 30:===================================================>  (109 + 6) / 115]                                                                                [Stage 31:=======================================>              (85 + 31) / 116][Stage 31:============================================>         (96 + 20) / 116][Stage 31:==================================================>   (109 + 7) / 116][Stage 31:====================================================> (112 + 4) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.175270184 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR   partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIn dex = 194  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449651721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:==================================>                   (76 + 42) / 118][Stage 32:======================================>               (85 + 33) / 118][Stage 32:================================================>    (107 + 11) / 118][Stage 32:====================================================> (115 + 3) / 118][Stage 32:=====================================================>(117 + 1) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:==================================>                   (77 + 42) / 119][Stage 33:========================================>             (89 + 30) / 119][Stage 33:==============================================>      (104 + 15) / 119][Stage 33:==================================================>   (112 + 7) / 119][Stage 33:====================================================> (115 + 4) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.007886344 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  pa rtitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex =  12  OR  partitionIndex = 13 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406668717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:======================================>               (81 + 34) / 115][Stage 34:=========================================>            (89 + 26) / 115][Stage 34:=============================================>        (96 + 19) / 115][Stage 34:==================================================>   (107 + 8) / 115][Stage 34:=====================================================>(113 + 2) / 115]                                                                                [Stage 35:=======================================>              (84 + 32) / 116][Stage 35:==========================================>           (91 + 25) / 116][Stage 35:===============================================>     (105 + 11) / 116][Stage 35:=================================================>    (107 + 9) / 116][Stage 35:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.892951981 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 87  OR  pa rtitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex =  90  OR  partitionIndex = 102 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482530643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=================================>                    (71 + 44) / 115][Stage 36:=======================================>              (85 + 30) / 115][Stage 36:===========================================>          (92 + 23) / 115][Stage 36:=================================================>    (106 + 9) / 115][Stage 36:====================================================> (111 + 4) / 115][Stage 36:=====================================================>(114 + 1) / 115]                                                                                [Stage 37:=================================>                    (71 + 45) / 116][Stage 37:======================================>               (82 + 34) / 116][Stage 37:=============================================>        (98 + 18) / 116][Stage 37:=================================================>    (107 + 9) / 116][Stage 37:===================================================>  (110 + 6) / 116][Stage 37:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.623939512 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR   partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex  = 66  OR  partitionIndex = 67 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465295231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:======================================>               (85 + 33) / 118][Stage 38:============================================>         (98 + 20) / 118][Stage 38:==================================================>   (110 + 8) / 118][Stage 38:=====================================================>(117 + 1) / 118]                                                                                [Stage 39:==================================>                   (76 + 43) / 119][Stage 39:=======================================>              (87 + 32) / 119][Stage 39:================================================>    (109 + 10) / 119][Stage 39:====================================================> (116 + 3) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.267417348 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  p artitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex  = 112  OR  partitionIndex = 8 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406992965 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (83 + 32) / 115][Stage 40:==========================================>           (91 + 24) / 115][Stage 40:==================================================>   (108 + 7) / 115][Stage 40:====================================================> (112 + 3) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:========================================>             (86 + 30) / 116][Stage 41:=============================================>        (98 + 18) / 116][Stage 41:==================================================>   (108 + 8) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.190772563 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49   OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.577624307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:===============================>                      (66 + 47) / 113][Stage 42:=====================================>                (79 + 34) / 113][Stage 42:==============================================>       (97 + 16) / 113][Stage 42:=================================================>    (104 + 9) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:==================================>                   (73 + 41) / 114][Stage 43:=========================================>            (88 + 26) / 114][Stage 43:==================================================>   (107 + 7) / 114][Stage 43:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 6.243453651 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIn dex = 147  OR  partitionIndex = 148 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417792804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:========================================>             (86 + 29) / 115][Stage 44:==============================================>       (98 + 17) / 115][Stage 44:==================================================>   (107 + 8) / 115][Stage 44:===================================================>  (110 + 5) / 115]                                                                                [Stage 45:=======================================>              (84 + 32) / 116][Stage 45:===========================================>          (94 + 22) / 116][Stage 45:================================================>    (106 + 10) / 116][Stage 45:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.022029486 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex =  81  OR  partitionIndex = 82 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472360986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:================================>                     (73 + 47) / 120][Stage 46:===========================================>          (96 + 24) / 120][Stage 46:===================================================>  (115 + 5) / 120][Stage 46:=====================================================>(119 + 1) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:==============================>                       (69 + 52) / 121][Stage 47:===================================>                  (79 + 42) / 121][Stage 47:=============================================>       (103 + 18) / 121][Stage 47:================================================>    (111 + 10) / 121][Stage 47:=====================================================>(119 + 2) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.260572488 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex =  33  OR  partitionIndex = 47 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416947753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===================================>                  (74 + 39) / 113][Stage 48:========================================>             (85 + 28) / 113][Stage 48:==============================================>       (97 + 16) / 113][Stage 48:===================================================>  (107 + 6) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:=======================================>              (83 + 31) / 114][Stage 49:==========================================>           (89 + 25) / 114][Stage 49:=============================================>        (96 + 18) / 114][Stage 49:===============================================>     (102 + 12) / 114][Stage 49:=================================================>    (105 + 9) / 114][Stage 49:===================================================>  (108 + 6) / 114][Stage 49:====================================================> (111 + 3) / 114][Stage 49:=====================================================>(112 + 2) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.835490207 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  p artitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionInd ex = 105  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395966291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=================================>                    (71 + 42) / 113][Stage 50:=======================================>              (83 + 30) / 113][Stage 50:==============================================>       (97 + 16) / 113][Stage 50:=================================================>    (104 + 9) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:===================================>                  (74 + 40) / 114][Stage 51:=========================================>            (87 + 27) / 114][Stage 51:==============================================>       (98 + 16) / 114][Stage 51:==================================================>   (106 + 8) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.150095921 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIn dex = 122  OR  partitionIndex = 123 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440053941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==============================>                       (64 + 51) / 115][Stage 52:==================================>                   (73 + 42) / 115][Stage 52:============================================>         (94 + 21) / 115][Stage 52:================================================>    (105 + 10) / 115][Stage 52:===================================================>  (110 + 5) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:===============================>                      (67 + 49) / 116][Stage 53:=====================================>                (80 + 36) / 116][Stage 53:=============================================>        (97 + 19) / 116][Stage 53:=================================================>    (107 + 9) / 116][Stage 53:===================================================>  (111 + 5) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.482811714 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  pa rtitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex =  40  OR  partitionIndex = 41 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498344816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==========================>                           (60 + 61) / 121][Stage 54:===========================>                          (62 + 59) / 121][Stage 54:=============================>                        (67 + 54) / 121][Stage 54:=======================================>              (88 + 33) / 121][Stage 54:===================================================>  (116 + 5) / 121]                                                                                [Stage 55:===========================>                          (62 + 60) / 122][Stage 55:==================================>                   (78 + 44) / 122][Stage 55:=======================================>              (89 + 33) / 122][Stage 55:==================================================>   (113 + 9) / 122][Stage 55:====================================================> (118 + 4) / 122][Stage 55:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.174002346 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110  OR   partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionInde x = 8  OR  partitionIndex = 9 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43493778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==============================>                       (65 + 50) / 115][Stage 56:==================================>                   (74 + 41) / 115][Stage 56:===========================================>          (93 + 22) / 115][Stage 56:=================================================>    (106 + 9) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:=================================>                    (71 + 45) / 116][Stage 57:=======================================>              (84 + 32) / 116][Stage 57:=============================================>        (97 + 19) / 116][Stage 57:===============================================>     (105 + 11) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.40772009 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  pa rtitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex =  94  OR  partitionIndex = 95 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452426579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (69 + 46) / 115][Stage 58:========================================>             (87 + 28) / 115][Stage 58:=============================================>        (97 + 18) / 115][Stage 58:==================================================>   (107 + 8) / 115][Stage 58:====================================================> (111 + 4) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:=================================>                    (71 + 45) / 116][Stage 59:=======================================>              (85 + 31) / 116][Stage 59:===============================================>     (103 + 13) / 116][Stage 59:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.189737179 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  pa rtitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex =  23  OR  partitionIndex = 24 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446937094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:===========================>                          (62 + 58) / 120][Stage 60:==================================>                   (76 + 44) / 120][Stage 60:==========================================>           (94 + 26) / 120][Stage 60:==================================================>   (112 + 8) / 120]                                                                                [Stage 61:=============================>                        (65 + 56) / 121][Stage 61:================================>                     (73 + 48) / 121][Stage 61:======================================>               (87 + 34) / 121][Stage 61:================================================>    (110 + 11) / 121][Stage 61:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.775581766 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  pa rtitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex =  82  OR  partitionIndex = 94 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466843148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:===============================>                      (69 + 51) / 120][Stage 62:====================================>                 (82 + 38) / 120][Stage 62:=============================================>       (104 + 16) / 120][Stage 62:====================================================> (117 + 3) / 120]                                                                                [Stage 63:===========================>                          (61 + 60) / 121][Stage 63:============================>                         (64 + 57) / 121][Stage 63:===================================>                  (79 + 42) / 121][Stage 63:===============================================>     (109 + 12) / 121][Stage 63:====================================================> (117 + 4) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.679376692 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417611614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:>                                                     (0 + 112) / 115][Stage 64:============================>                         (60 + 55) / 115][Stage 64:==============================>                       (64 + 51) / 115][Stage 64:================================>                     (70 + 45) / 115][Stage 64:======================================>               (83 + 32) / 115][Stage 64:==============================================>       (99 + 16) / 115][Stage 64:====================================================> (111 + 4) / 115]                                                                                [Stage 65:===================================>                  (77 + 39) / 116][Stage 65:==========================================>           (91 + 25) / 116][Stage 65:=============================================>       (100 + 16) / 116][Stage 65:====================================================> (113 + 3) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.722527187 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  pa rtitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex =  54  OR  partitionIndex = 40 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467181413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:============================>                         (64 + 56) / 120][Stage 66:==================================>                   (77 + 43) / 120][Stage 66:===============================================>     (108 + 12) / 120][Stage 66:=====================================================>(119 + 1) / 120]                                                                                [Stage 67:===========================>                          (61 + 60) / 121][Stage 67:==============================>                       (68 + 53) / 121][Stage 67:=====================================>                (84 + 37) / 121][Stage 67:============================================>        (102 + 19) / 121][Stage 67:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.555756346 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  pa rtitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex =  102  OR  partitionIndex = 103 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365102611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=====================================>                (80 + 35) / 115][Stage 68:========================================>             (87 + 28) / 115][Stage 68:==============================================>      (101 + 14) / 115][Stage 68:====================================================> (111 + 4) / 115]                                                                                [Stage 69:=========================================>            (89 + 27) / 116][Stage 69:=============================================>       (100 + 16) / 116][Stage 69:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.688850628 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  pa rtitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex =  114  OR  partitionIndex = 100 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:==================================>                   (76 + 42) / 118][Stage 70:========================================>             (88 + 30) / 118][Stage 70:===========================================>          (96 + 22) / 118][Stage 70:================================================>    (108 + 10) / 118][Stage 70:=====================================================>(117 + 1) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:==================================>                   (77 + 42) / 119][Stage 71:=====================================>                (82 + 37) / 119][Stage 71:==========================================>           (93 + 26) / 119][Stage 71:===============================================>     (107 + 12) / 119][Stage 71:==================================================>   (112 + 7) / 119][Stage 71:====================================================> (116 + 3) / 119][Stage 71:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.276178383 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR   partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIn dex = 130  OR  partitionIndex = 131 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480343949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:=============================>                        (65 + 56) / 121][Stage 72:==================================>                   (78 + 43) / 121][Stage 72:=============================================>       (103 + 18) / 121][Stage 72:====================================================> (118 + 3) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:============================>                         (64 + 58) / 122][Stage 73:=================================>                    (75 + 47) / 122][Stage 73:=====================================>                (85 + 37) / 122][Stage 73:==================================================>   (115 + 7) / 122][Stage 73:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.919514356 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIn dex = 180  OR  partitionIndex = 188 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461960978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==========================>                           (60 + 61) / 121][Stage 74:============================>                         (64 + 57) / 121][Stage 74:===================================>                  (80 + 41) / 121][Stage 74:=========================================>            (92 + 29) / 121][Stage 74:====================================================> (117 + 4) / 121]                                                                                [Stage 75:===========================>                          (63 + 59) / 122][Stage 75:==================================>                   (78 + 44) / 122][Stage 75:==========================================>           (95 + 27) / 122][Stage 75:================================================>    (111 + 11) / 122][Stage 75:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.811911166 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  pa rtitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex =  90  OR  partitionIndex = 91 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452225265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:==============================>                       (63 + 50) / 113][Stage 76:=======================================>              (83 + 30) / 113][Stage 76:=============================================>        (95 + 18) / 113][Stage 76:====================================================> (109 + 4) / 113]                                                                                [Stage 77:=============================>                        (62 + 52) / 114][Stage 77:==================================>                   (73 + 41) / 114][Stage 77:============================================>         (93 + 21) / 114][Stage 77:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.529670566 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221  OR  partitionIndex = 235  OR   partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIn dex = 208  OR  partitionIndex = 194 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43506117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:=============================>                        (65 + 56) / 121][Stage 78:====================================>                 (81 + 40) / 121][Stage 78:==========================================>           (96 + 25) / 121][Stage 78:=================================================>    (112 + 9) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:==================================>                   (77 + 45) / 122][Stage 79:==========================================>           (97 + 25) / 122][Stage 79:==================================================>   (114 + 8) / 122][Stage 79:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.735212962 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  pa rtitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex =  45  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410312013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:============================>                         (60 + 53) / 113][Stage 80:====================================>                 (77 + 36) / 113][Stage 80:=============================================>        (96 + 17) / 113][Stage 80:==================================================>   (106 + 7) / 113]                                                                                [Stage 81:============================>                         (61 + 53) / 114][Stage 81:================================>                     (68 + 46) / 114][Stage 81:=============================================>        (95 + 19) / 114][Stage 81:================================================>    (104 + 10) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.622197104 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIn dex = 143  OR  partitionIndex = 144 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362823592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:======================================>               (82 + 33) / 115][Stage 82:===========================================>          (93 + 22) / 115][Stage 82:===============================================>     (104 + 11) / 115][Stage 82:====================================================> (111 + 4) / 115]                                                                                [Stage 83:======================================>               (82 + 34) / 116][Stage 83:==========================================>           (91 + 25) / 116][Stage 83:===============================================>     (104 + 12) / 116][Stage 83:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.668861475 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIn dex = 206  OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37663412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==================================>                   (72 + 41) / 113][Stage 84:=======================================>              (82 + 31) / 113][Stage 84:==========================================>           (89 + 24) / 113][Stage 84:===============================================>     (102 + 11) / 113][Stage 84:====================================================> (110 + 3) / 113]                                                                                [Stage 85:========================================>             (86 + 28) / 114][Stage 85:==============================================>       (99 + 15) / 114][Stage 85:===================================================>  (108 + 6) / 114][Stage 85:====================================================> (110 + 4) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.167300873 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIn dex = 174  OR  partitionIndex = 160 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386252678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==================================>                   (75 + 43) / 118][Stage 86:=======================================>              (86 + 32) / 118][Stage 86:================================================>    (108 + 10) / 118][Stage 86:=====================================================>(116 + 2) / 118]                                                                                [Stage 87:==================================>                   (75 + 44) / 119][Stage 87:=======================================>              (86 + 33) / 119][Stage 87:================================================>    (109 + 10) / 119][Stage 87:===================================================>  (114 + 5) / 119][Stage 87:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.390256528 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  pa rtitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex =  103  OR  partitionIndex = 117 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433594406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:==================================>                   (77 + 43) / 120][Stage 88:============================================>         (98 + 22) / 120][Stage 88:====================================================> (116 + 4) / 120]                                                                                [Stage 89:===========================>                          (61 + 60) / 121][Stage 89:==================================>                   (77 + 44) / 121][Stage 89:============================================>        (101 + 20) / 121][Stage 89:===================================================>  (115 + 6) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.131108429 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19   OR  partitionIndex = 20 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377366965 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:====================================>                 (77 + 36) / 113][Stage 90:=========================================>            (86 + 27) / 113][Stage 90:===============================================>      (99 + 14) / 113][Stage 90:===================================================>  (108 + 5) / 113]                                                                                [Stage 91:====================================>                 (77 + 37) / 114][Stage 91:=========================================>            (87 + 27) / 114][Stage 91:=============================================>        (96 + 18) / 114][Stage 91:===============================================>     (102 + 12) / 114][Stage 91:===================================================>  (108 + 6) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.136022611 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 216  OR   partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIn dex = 129  OR  partitionIndex = 143 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373099419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (80 + 33) / 113][Stage 92:==========================================>           (88 + 25) / 113][Stage 92:===============================================>     (101 + 12) / 113][Stage 92:===================================================>  (107 + 6) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:========================================>             (86 + 28) / 114][Stage 93:=============================================>        (97 + 17) / 114][Stage 93:=================================================>    (105 + 9) / 114][Stage 93:=====================================================>(112 + 2) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.29728251 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIn dex = 225  OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433201736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:==============================>                       (69 + 52) / 121][Stage 94:=======================================>              (89 + 32) / 121][Stage 94:=============================================>       (104 + 17) / 121][Stage 94:=====================================================>(119 + 2) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:==============================>                       (68 + 54) / 122][Stage 95:=======================================>              (89 + 33) / 122][Stage 95:===============================================>     (109 + 13) / 122][Stage 95:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.656443964 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR   partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIn dex = 158  OR  partitionIndex = 159 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415809361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:===========================>                          (62 + 58) / 120][Stage 96:=================================>                    (74 + 46) / 120][Stage 96:===========================================>          (97 + 23) / 120][Stage 96:==================================================>   (113 + 7) / 120][Stage 96:=====================================================>(119 + 1) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:=============================>                        (66 + 55) / 121][Stage 97:===================================>                  (79 + 42) / 121][Stage 97:==============================================>      (107 + 14) / 121][Stage 97:=====================================================>(119 + 2) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.790492365 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR   partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIn dex = 133  OR  partitionIndex = 147 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413752828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:============================>                         (64 + 56) / 120][Stage 98:====================================>                 (81 + 39) / 120][Stage 98:===============================================>     (107 + 13) / 120][Stage 98:=====================================================>(118 + 2) / 120]                                                                                [Stage 99:=============================>                        (66 + 55) / 121][Stage 99:====================================>                 (82 + 39) / 121][Stage 99:================================================>    (111 + 10) / 121][Stage 99:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.520156334 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR   partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIn dex = 127  OR  partitionIndex = 141 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41862972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:=============================>                       (67 + 53) / 120][Stage 100:===================================>                 (80 + 40) / 120][Stage 100:=============================================>      (104 + 16) / 120]                                                                                [Stage 101:===========================>                         (62 + 59) / 121][Stage 101:===============================>                     (72 + 49) / 121][Stage 101:=========================================>           (95 + 26) / 121][Stage 101:=============================================>      (107 + 14) / 121][Stage 101:==================================================>  (116 + 5) / 121][Stage 101:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.213147861 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  par titionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22   OR  partitionIndex = 34 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359341964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:====================================>                (79 + 36) / 115][Stage 102:========================================>            (87 + 28) / 115][Stage 102:============================================>        (97 + 18) / 115][Stage 102:================================================>    (106 + 9) / 115][Stage 102:==================================================>  (110 + 5) / 115]                                                                                [Stage 103:=====================================>               (83 + 33) / 116][Stage 103:========================================>            (88 + 28) / 116][Stage 103:==============================================>     (103 + 13) / 116][Stage 103:================================================>    (107 + 9) / 116][Stage 103:==================================================>  (110 + 6) / 116][Stage 103:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.092415584 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIn dex = 151  OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376076667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (73 + 45) / 118][Stage 104:==================================>                  (77 + 41) / 118][Stage 104:=====================================>               (83 + 35) / 118][Stage 104:=========================================>           (92 + 26) / 118][Stage 104:==============================================>     (105 + 13) / 118][Stage 104:====================================================>(117 + 1) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:=================================>                   (76 + 43) / 119][Stage 105:====================================>                (81 + 38) / 119][Stage 105:========================================>            (91 + 28) / 119][Stage 105:=============================================>      (103 + 16) / 119][Stage 105:====================================================>(117 + 2) / 119][Stage 105:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.698197698 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR   partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIn dex = 134  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412936782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (70 + 45) / 115][Stage 106:======================================>              (83 + 32) / 115][Stage 106:===============================================>    (105 + 10) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:==================================>                  (75 + 41) / 116][Stage 107:=======================================>             (86 + 30) / 116][Stage 107:==============================================>     (104 + 12) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.123574192 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  pa rtitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex =  58  OR  partitionIndex = 44 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423370179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:===========================>                         (63 + 58) / 121][Stage 108:==================================>                  (78 + 43) / 121][Stage 108:==========================================>          (96 + 25) / 121][Stage 108:==================================================>  (115 + 6) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:===========================>                         (63 + 59) / 122][Stage 109:=================================>                   (78 + 44) / 122][Stage 109:===========================================>         (99 + 23) / 122][Stage 109:===================================================> (119 + 3) / 122][Stage 109:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.581926987 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIn dex = 221  OR  partitionIndex = 235 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37743407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (73 + 45) / 118][Stage 110:===================================>                 (80 + 38) / 118][Stage 110:=========================================>           (92 + 26) / 118][Stage 110:===============================================>    (107 + 11) / 118][Stage 110:===================================================> (115 + 3) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:====================================>                (81 + 38) / 119][Stage 111:========================================>            (92 + 27) / 119][Stage 111:=============================================>      (104 + 15) / 119][Stage 111:==================================================>  (113 + 6) / 119][Stage 111:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.720078562 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  pa rtitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex  = 101  OR  partitionIndex = 115 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363591405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:==================================>                  (77 + 41) / 118][Stage 112:=====================================>               (84 + 34) / 118][Stage 112:===========================================>         (96 + 22) / 118][Stage 112:=============================================>      (103 + 15) / 118][Stage 112:====================================================>(116 + 2) / 118]                                                                                [Stage 113:================================>                    (74 + 45) / 119][Stage 113:=================================>                   (75 + 44) / 119][Stage 113:==================================>                  (78 + 41) / 119][Stage 113:====================================>                (82 + 37) / 119][Stage 113:=======================================>             (88 + 31) / 119][Stage 113:===============================================>    (108 + 11) / 119][Stage 113:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 4.216194079 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  pa rtitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex =  106  OR  partitionIndex = 92 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339445704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:======================================>              (83 + 32) / 115][Stage 114:========================================>            (87 + 28) / 115][Stage 114:================================================>    (106 + 9) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:=====================================>               (83 + 33) / 116][Stage 115:==========================================>          (93 + 23) / 116][Stage 115:=============================================>      (102 + 14) / 116][Stage 115:==================================================>  (111 + 5) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.077527913 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  pa rtitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34   OR  partitionIndex = 35 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381630887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:=============================>                       (63 + 50) / 113][Stage 116:====================================>                (78 + 35) / 113][Stage 116:==============================================>     (100 + 13) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:===========================>                         (59 + 55) / 114][Stage 117:==============================>                      (66 + 48) / 114][Stage 117:=====================================>               (81 + 33) / 114][Stage 117:=============================================>       (98 + 16) / 114][Stage 117:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.347808523 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR   partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIn dex = 210  OR  partitionIndex = 211 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379306115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==============================>                      (66 + 49) / 115][Stage 118:==================================>                  (75 + 40) / 115][Stage 118:=========================================>           (89 + 26) / 115][Stage 118:===============================================>    (104 + 11) / 115][Stage 118:==================================================>  (110 + 5) / 115]                                                                                [Stage 119:=================================>                   (74 + 42) / 116][Stage 119:========================================>            (88 + 28) / 116][Stage 119:=============================================>      (101 + 15) / 116][Stage 119:==================================================>  (110 + 6) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.127511393 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIn dex = 141  OR  partitionIndex = 142 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36124596 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==================================>                  (74 + 39) / 113][Stage 120:========================================>            (86 + 27) / 113][Stage 120:=============================================>       (97 + 16) / 113][Stage 120:==================================================>  (107 + 6) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:===================================>                 (76 + 38) / 114][Stage 121:=======================================>             (85 + 29) / 114][Stage 121:===========================================>         (93 + 21) / 114][Stage 121:==================================================>  (109 + 5) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.021128995 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIn dex = 156  OR  partitionIndex = 157 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361447221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:================================>                    (73 + 45) / 118][Stage 122:=====================================>               (83 + 35) / 118][Stage 122:=========================================>           (93 + 25) / 118][Stage 122:===============================================>    (107 + 11) / 118]                                                                                [Stage 123:================================>                    (74 + 45) / 119][Stage 123:=====================================>               (84 + 35) / 119][Stage 123:=========================================>           (94 + 25) / 119][Stage 123:=============================================>      (105 + 14) / 119][Stage 123:==================================================>  (114 + 5) / 119][Stage 123:====================================================>(117 + 2) / 119][Stage 123:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.923304119 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  pa rtitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex =  91  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364029937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (73 + 45) / 118][Stage 124:===================================>                 (80 + 38) / 118][Stage 124:======================================>              (86 + 32) / 118][Stage 124:==============================================>     (106 + 12) / 118][Stage 124:===================================================> (114 + 4) / 118]                                                                                [Stage 125:=================================>                   (76 + 43) / 119][Stage 125:=====================================>               (84 + 35) / 119][Stage 125:=========================================>           (93 + 26) / 119][Stage 125:=============================================>      (105 + 14) / 119][Stage 125:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.837919139 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR   partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIn dex = 168  OR  partitionIndex = 124 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390573537 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:============================>                        (61 + 52) / 113][Stage 126:==================================>                  (73 + 40) / 113][Stage 126:=========================================>           (88 + 25) / 113][Stage 126:=================================================>   (106 + 7) / 113]                                                                                [Stage 127:=============================>                       (63 + 51) / 114][Stage 127:==================================>                  (74 + 40) / 114][Stage 127:==========================================>          (91 + 23) / 114][Stage 127:==============================================>     (102 + 12) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.606346396 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex =  84  OR  partitionIndex = 70 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425694878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:=============================>                       (63 + 50) / 113][Stage 128:===================================>                 (75 + 38) / 113][Stage 128:======================================>              (83 + 30) / 113][Stage 128:=============================================>       (96 + 17) / 113][Stage 128:==================================================>  (108 + 5) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:============================>                        (62 + 52) / 114][Stage 129:================================>                    (70 + 44) / 114][Stage 129:=======================================>             (86 + 28) / 114][Stage 129:==============================================>     (101 + 13) / 114][Stage 129:=================================================>   (107 + 7) / 114][Stage 129:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.857885817 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIn dex = 128  OR  partitionIndex = 129 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334693791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=====================================>               (82 + 33) / 115][Stage 130:========================================>            (88 + 27) / 115][Stage 130:===========================================>         (95 + 20) / 115][Stage 130:===================================================> (112 + 3) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:======================================>              (85 + 31) / 116][Stage 131:==========================================>          (92 + 24) / 116][Stage 131:==============================================>     (103 + 13) / 116][Stage 131:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.815900035 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIn dex = 123  OR  partitionIndex = 137 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372562466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:=====================================>               (83 + 35) / 118][Stage 132:============================================>       (100 + 18) / 118][Stage 132:===================================================> (115 + 3) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:==================================>                  (78 + 41) / 119][Stage 133:========================================>            (91 + 28) / 119][Stage 133:===============================================>    (108 + 11) / 119][Stage 133:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.996673797 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  p artitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex =  24  OR  partitionIndex = 10 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375374482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (70 + 45) / 115][Stage 134:========================================>            (87 + 28) / 115][Stage 134:=============================================>       (98 + 17) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:===============================>                     (70 + 46) / 116][Stage 135:=====================================>               (82 + 34) / 116][Stage 135:=============================================>      (102 + 14) / 116][Stage 135:=================================================>   (109 + 7) / 116][Stage 135:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.304054251 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIn dex = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352276437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=================================>                   (71 + 42) / 113][Stage 136:====================================>                (78 + 35) / 113][Stage 136:==========================================>          (91 + 22) / 113][Stage 136:==============================================>     (101 + 12) / 113][Stage 136:==================================================>  (107 + 6) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:====================================>                (78 + 36) / 114][Stage 137:========================================>            (87 + 27) / 114][Stage 137:============================================>        (95 + 19) / 114][Stage 137:===============================================>    (104 + 10) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.179897718 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIn dex = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398836372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 61) / 121][Stage 138:=============================>                       (68 + 53) / 121][Stage 138:====================================>                (84 + 37) / 121][Stage 138:=============================================>      (106 + 15) / 121][Stage 138:====================================================>(119 + 2) / 121]                                                                                [Stage 139:===========================>                         (64 + 58) / 122][Stage 139:===============================>                     (73 + 49) / 122][Stage 139:=======================================>             (92 + 30) / 122][Stage 139:==================================================>  (117 + 5) / 122][Stage 139:===================================================> (119 + 3) / 122][Stage 139:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.638952641 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182  OR   partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIn dex = 211  OR  partitionIndex = 225 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391990071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:============================>                        (60 + 53) / 113][Stage 140:=================================>                   (72 + 41) / 113][Stage 140:=======================================>             (85 + 28) / 113][Stage 140:=================================================>   (106 + 7) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (59 + 55) / 114][Stage 141:================================>                    (69 + 45) / 114][Stage 141:=======================================>             (85 + 29) / 114][Stage 141:==============================================>      (99 + 15) / 114][Stage 141:=================================================>   (107 + 7) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.626184363 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIn dex = 232  OR  partitionIndex = 128 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356906473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (72 + 46) / 118][Stage 142:==================================>                  (76 + 42) / 118][Stage 142:=====================================>               (84 + 34) / 118][Stage 142:==========================================>          (95 + 23) / 118][Stage 142:============================================>       (102 + 16) / 118][Stage 142:====================================================>(116 + 2) / 118]                                                                                [Stage 143:================================>                    (73 + 46) / 119][Stage 143:===================================>                 (79 + 40) / 119][Stage 143:======================================>              (86 + 33) / 119][Stage 143:==============================================>     (106 + 13) / 119][Stage 143:=================================================>   (111 + 8) / 119][Stage 143:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.249401357 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR   partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIn dex = 121  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381924358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=================================>                   (72 + 43) / 115][Stage 144:=======================================>             (85 + 30) / 115][Stage 144:================================================>    (106 + 9) / 115][Stage 144:===================================================> (112 + 3) / 115]                                                                                [Stage 145:=====================================>               (82 + 34) / 116][Stage 145:============================================>        (97 + 19) / 116][Stage 145:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.75880368 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR   partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionInd ex = 73  OR  partitionIndex = 87 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396061008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:=============================>                       (67 + 53) / 120][Stage 146:====================================>                (83 + 37) / 120][Stage 146:=================================================>   (112 + 8) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:===========================>                         (63 + 58) / 121][Stage 147:=================================>                   (76 + 45) / 121][Stage 147:=========================================>           (95 + 26) / 121][Stage 147:=================================================>   (113 + 8) / 121][Stage 147:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.466486014 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIn dex = 161  OR  partitionIndex = 175 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400812739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:============================>                        (66 + 55) / 121][Stage 148:===================================>                 (81 + 40) / 121][Stage 148:=============================================>      (107 + 14) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:=============================>                       (69 + 53) / 122][Stage 149:===================================>                 (82 + 40) / 122][Stage 149:=========================================>           (95 + 27) / 122][Stage 149:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.718173219 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR   partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIn dex = 172  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384730358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (58 + 55) / 113][Stage 150:=============================>                       (62 + 51) / 113][Stage 150:=====================================>               (80 + 33) / 113][Stage 150:=============================================>       (98 + 15) / 113][Stage 150:==================================================>  (108 + 5) / 113]                                                                                [Stage 151:============================>                        (61 + 53) / 114][Stage 151:================================>                    (69 + 45) / 114][Stage 151:==========================================>          (92 + 22) / 114][Stage 151:================================================>    (105 + 9) / 114][Stage 151:===================================================> (111 + 3) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.775101072 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex =  57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378308795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:===================================>                 (78 + 40) / 118][Stage 152:========================================>            (91 + 27) / 118][Stage 152:==============================================>     (106 + 12) / 118][Stage 152:====================================================>(116 + 2) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:===================================>                 (79 + 40) / 119][Stage 153:=========================================>           (94 + 25) / 119][Stage 153:===============================================>    (108 + 11) / 119][Stage 153:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.591914183 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR   partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIn dex = 187  OR  partitionIndex = 201 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438081423 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (74 + 44) / 118][Stage 154:=======================================>             (88 + 30) / 118][Stage 154:==========================================>          (95 + 23) / 118][Stage 154:================================================>    (109 + 9) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:===================================>                 (80 + 39) / 119][Stage 155:========================================>            (91 + 28) / 119][Stage 155:============================================>       (101 + 18) / 119][Stage 155:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.599504905 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  pa rtitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex =  37  OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35560975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===================================>                 (76 + 37) / 113][Stage 156:=======================================>             (85 + 28) / 113][Stage 156:==============================================>     (100 + 13) / 113][Stage 156:=================================================>   (105 + 8) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:=====================================>               (81 + 33) / 114][Stage 157:=========================================>           (89 + 25) / 114][Stage 157:============================================>        (95 + 19) / 114][Stage 157:=============================================>       (98 + 16) / 114][Stage 157:==============================================>     (103 + 11) / 114][Stage 157:===================================================> (110 + 4) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.824207336 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  pa rtitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex =  52  OR  partitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383614271 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===================================>                 (76 + 39) / 115][Stage 158:======================================>              (84 + 31) / 115][Stage 158:============================================>        (96 + 19) / 115][Stage 158:================================================>    (106 + 9) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:==============================>                      (67 + 49) / 116][Stage 159:====================================>                (79 + 37) / 116][Stage 159:======================================>              (85 + 31) / 116][Stage 159:=============================================>      (101 + 15) / 116][Stage 159:================================================>    (107 + 9) / 116][Stage 159:===================================================> (113 + 3) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.243026725 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  pa rtitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex =  60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395978727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:===============================>                     (71 + 49) / 120][Stage 160:=======================================>             (90 + 30) / 120][Stage 160:===============================================>    (110 + 10) / 120][Stage 160:====================================================>(119 + 1) / 120]                                                                                [Stage 161:==========================>                          (61 + 60) / 121][Stage 161:===============================>                     (73 + 48) / 121][Stage 161:====================================>                (84 + 37) / 121][Stage 161:==============================================>     (109 + 12) / 121][Stage 161:====================================================>(119 + 2) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.126813234 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR   partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIn dex = 178  OR  partitionIndex = 164 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399743821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:=============================>                       (67 + 53) / 120][Stage 162:=====================================>               (84 + 36) / 120][Stage 162:=================================================>   (111 + 9) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:============================>                        (66 + 55) / 121][Stage 163:===================================>                 (81 + 40) / 121][Stage 163:==============================================>     (108 + 13) / 121][Stage 163:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.615612098 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIn dex = 132  OR  partitionIndex = 133 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444675864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===============================>                     (68 + 47) / 115][Stage 164:===================================>                 (78 + 37) / 115][Stage 164:============================================>        (97 + 18) / 115][Stage 164:==================================================>  (110 + 5) / 115]                                                                                [Stage 165:===================================>                 (78 + 38) / 116][Stage 165:==========================================>          (92 + 24) / 116][Stage 165:==============================================>     (104 + 12) / 116][Stage 165:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.86099127 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR   partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIn dex = 140  OR  partitionIndex = 126 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362897966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:====================================>                (78 + 35) / 113][Stage 166:==========================================>          (91 + 22) / 113][Stage 166:==============================================>     (101 + 12) / 113][Stage 166:===================================================> (110 + 3) / 113]                                                                                [Stage 167:=====================================>               (80 + 34) / 114][Stage 167:==========================================>          (92 + 22) / 114][Stage 167:=================================================>   (106 + 8) / 114][Stage 167:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.836560897 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  pa rtitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex =  41  OR  partitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399913547 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:===========================>                         (63 + 58) / 121][Stage 168:===============================>                     (71 + 50) / 121][Stage 168:=======================================>             (91 + 30) / 121][Stage 168:=================================================>   (113 + 8) / 121]                                                                                [Stage 169:===========================>                         (63 + 59) / 122][Stage 169:===================================>                 (82 + 40) / 122][Stage 169:===========================================>        (103 + 19) / 122][Stage 169:===================================================> (119 + 3) / 122][Stage 169:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.668300035 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  pa rtitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex  = 118  OR  partitionIndex = 104 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346210566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=====================================>               (82 + 33) / 115][Stage 170:========================================>            (88 + 27) / 115][Stage 170:============================================>        (97 + 18) / 115][Stage 170:==================================================>  (110 + 5) / 115][Stage 170:===================================================> (112 + 3) / 115]                                                                                [Stage 171:======================================>              (84 + 32) / 116][Stage 171:=========================================>           (91 + 25) / 116][Stage 171:===============================================>    (105 + 11) / 116][Stage 171:====================================================>(114 + 2) / 116][Stage 171:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.945454967 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR   partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIn dex = 215  OR  partitionIndex = 229 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404062681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 60) / 120][Stage 172:=============================>                       (67 + 53) / 120][Stage 172:=====================================>               (85 + 35) / 120][Stage 172:============================================>       (103 + 17) / 120][Stage 172:===================================================> (116 + 4) / 120]                                                                                [Stage 173:===========================>                         (62 + 59) / 121][Stage 173:================================>                    (75 + 46) / 121][Stage 173:==========================================>          (96 + 25) / 121][Stage 173:==============================================>     (108 + 13) / 121][Stage 173:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.177141947 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  pa rtitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex =  30  OR  partitionIndex = 42 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335254573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=====================================>               (82 + 33) / 115][Stage 174:========================================>            (87 + 28) / 115][Stage 174:=============================================>       (98 + 17) / 115][Stage 174:==================================================>  (109 + 6) / 115][Stage 174:====================================================>(113 + 2) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:=====================================>               (83 + 33) / 116][Stage 175:=======================================>             (87 + 29) / 116][Stage 175:==============================================>     (104 + 12) / 116][Stage 175:=================================================>   (108 + 8) / 116][Stage 175:===================================================> (112 + 4) / 116][Stage 175:====================================================>(114 + 2) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.320241171 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIn dex = 146  OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403198549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:===========================>                         (63 + 57) / 120][Stage 176:===================================>                 (81 + 39) / 120][Stage 176:========================================>            (92 + 28) / 120][Stage 176:==================================================>  (115 + 5) / 120]                                                                                [Stage 177:==============================>                      (69 + 52) / 121][Stage 177:==================================>                  (78 + 43) / 121][Stage 177:=========================================>           (95 + 26) / 121][Stage 177:=============================================>      (106 + 15) / 121][Stage 177:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.946931182 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex =  109  OR  partitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331085126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:======================================>              (84 + 31) / 115][Stage 178:========================================>            (87 + 28) / 115][Stage 178:==============================================>     (103 + 12) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:=====================================>               (83 + 33) / 116][Stage 179:=========================================>           (90 + 26) / 116][Stage 179:===============================================>    (106 + 10) / 116][Stage 179:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.721618599 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIn dex = 166  OR  partitionIndex = 152 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396063368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:=============================>                       (66 + 54) / 120][Stage 180:===================================>                 (81 + 39) / 120][Stage 180:============================================>       (102 + 18) / 120]                                                                                [Stage 181:===========================>                         (62 + 59) / 121][Stage 181:===============================>                     (72 + 49) / 121][Stage 181:=====================================>               (85 + 36) / 121][Stage 181:==============================================>     (108 + 13) / 121][Stage 181:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.46862474 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIn dex = 119  OR  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444150088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:===========================>                         (63 + 57) / 120][Stage 182:=================================>                   (76 + 44) / 120][Stage 182:========================================>            (91 + 29) / 120][Stage 182:===================================================> (117 + 3) / 120]                                                                                [Stage 183:==========================>                          (61 + 60) / 121][Stage 183:===============================>                     (72 + 49) / 121][Stage 183:=====================================>               (86 + 35) / 121][Stage 183:============================================>       (104 + 17) / 121][Stage 183:==================================================>  (116 + 5) / 121][Stage 183:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.709135332 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR   partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIn dex = 218  OR  partitionIndex = 219 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346556739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 34) / 115][Stage 184:=======================================>             (85 + 30) / 115][Stage 184:===========================================>         (95 + 20) / 115][Stage 184:==================================================>  (109 + 6) / 115]                                                                                [Stage 185:========================================>            (89 + 27) / 116][Stage 185:=============================================>      (101 + 15) / 116][Stage 185:=================================================>   (108 + 8) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.689469612 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  pa rtitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionInde x = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38916081 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:=============================>                       (66 + 54) / 120][Stage 186:=====================================>               (84 + 36) / 120][Stage 186:=============================================>      (105 + 15) / 120][Stage 186:====================================================>(118 + 2) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:===============================>                     (72 + 49) / 121][Stage 187:=====================================>               (86 + 35) / 121][Stage 187:===============================================>    (111 + 10) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.173834861 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIn dex = 150  OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375445821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==================================>                  (74 + 41) / 115][Stage 188:======================================>              (83 + 32) / 115][Stage 188:==============================================>     (103 + 12) / 115][Stage 188:====================================================>(114 + 1) / 115]                                                                                [Stage 189:======================================>              (84 + 32) / 116][Stage 189:============================================>        (98 + 18) / 116][Stage 189:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.686228205 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  pa rtitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex =  69  OR  partitionIndex = 83 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335149608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:======================================>              (84 + 31) / 115][Stage 190:=========================================>           (89 + 26) / 115][Stage 190:=============================================>       (98 + 17) / 115][Stage 190:=================================================>   (107 + 8) / 115][Stage 190:====================================================>(114 + 1) / 115]                                                                                [Stage 191:=====================================>               (83 + 33) / 116][Stage 191:=========================================>           (91 + 25) / 116][Stage 191:==============================================>     (104 + 12) / 116][Stage 191:==================================================>  (110 + 6) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.223477815 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  pa rtitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex =  76  OR  partitionIndex = 62 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.329210922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:======================================>              (83 + 32) / 115][Stage 192:============================================>        (96 + 19) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:=====================================>               (82 + 34) / 116][Stage 193:=========================================>           (90 + 26) / 116][Stage 193:=============================================>      (101 + 15) / 116][Stage 193:===================================================> (112 + 4) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.631510956 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIn dex = 124  OR  partitionIndex = 125 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398255598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:===============================>                     (67 + 46) / 113][Stage 194:========================================>            (87 + 26) / 113][Stage 194:===================================================> (110 + 3) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:===============================>                     (67 + 47) / 114][Stage 195:=======================================>             (84 + 30) / 114][Stage 195:================================================>    (105 + 9) / 114][Stage 195:====================================================>(112 + 2) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.88080205 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIn dex = 230  OR  partitionIndex = 216 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372781574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=================================>                   (74 + 44) / 118][Stage 196:===================================>                 (78 + 40) / 118][Stage 196:=======================================>             (89 + 29) / 118][Stage 196:============================================>       (101 + 17) / 118][Stage 196:====================================================>(116 + 2) / 118]                                                                                [Stage 197:================================>                    (73 + 46) / 119][Stage 197:=================================>                   (76 + 43) / 119][Stage 197:=====================================>               (85 + 34) / 119][Stage 197:=========================================>           (94 + 25) / 119][Stage 197:==============================================>     (107 + 12) / 119][Stage 197:====================================================>(117 + 2) / 119][Stage 197:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.158748226 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIn dex = 226  OR  partitionIndex = 212 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414366089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:============================>                        (64 + 57) / 121][Stage 198:======================================>              (87 + 34) / 121][Stage 198:==============================================>     (109 + 12) / 121]                                                                                [Stage 199:==========================>                          (61 + 61) / 122][Stage 199:=============================>                       (68 + 54) / 122][Stage 199:=====================================>               (86 + 36) / 122][Stage 199:==============================================>     (108 + 14) / 122][Stage 199:====================================================>(120 + 2) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.674764104 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR   partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIn dex = 183  OR  partitionIndex = 197 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341480604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==================================>                  (73 + 40) / 113][Stage 200:========================================>            (87 + 26) / 113][Stage 200:============================================>        (95 + 18) / 113][Stage 200:==================================================>  (108 + 5) / 113]                                                                                [Stage 201:====================================>                (78 + 36) / 114][Stage 201:==========================================>          (91 + 23) / 114][Stage 201:==============================================>     (102 + 12) / 114][Stage 201:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.899257226 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m31.442s
user	12m28.812s
sys	1m29.488s
