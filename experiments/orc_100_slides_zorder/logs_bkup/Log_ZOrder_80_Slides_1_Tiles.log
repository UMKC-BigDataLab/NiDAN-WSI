Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 10:17:31 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:17:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:17:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:17:46 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 10:17:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:17:59 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522101748-0446).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.368984047 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======================>                               (50 + 65) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:===================================================>   (108 + 7) / 115]                                                                                [Stage 1:=========================>                             (54 + 62) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:=====================================>                 (79 + 37) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(114 + 2) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.650721696 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.658985153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===========================>                           (60 + 58) / 118][Stage 2:==============================>                        (65 + 53) / 118][Stage 2:===================================>                   (76 + 42) / 118][Stage 2:=====================================>                 (81 + 37) / 118][Stage 2:=======================================>               (84 + 34) / 118][Stage 2:==========================================>            (91 + 27) / 118][Stage 2:=============================================>         (97 + 21) / 118][Stage 2:==================================================>    (109 + 9) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:=================================>                     (72 + 47) / 119][Stage 3:===================================>                   (77 + 42) / 119][Stage 3:====================================>                  (78 + 41) / 119][Stage 3:=====================================>                 (81 + 38) / 119][Stage 3:=======================================>               (85 + 34) / 119][Stage 3:==========================================>            (91 + 28) / 119][Stage 3:===========================================>           (95 + 24) / 119][Stage 3:===============================================>      (105 + 14) / 119][Stage 3:====================================================>  (113 + 6) / 119]                                                                                Time elapsed: 5.305984889 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.722567486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (59 + 61) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:=============================>                         (65 + 55) / 120][Stage 4:=================================>                     (74 + 46) / 120][Stage 4:======================================>                (83 + 37) / 120][Stage 4:=============================================>        (100 + 20) / 120][Stage 4:===================================================>   (112 + 8) / 120]                                                                                [Stage 5:===========================>                           (60 + 61) / 121][Stage 5:===============================>                       (69 + 52) / 121][Stage 5:===================================>                   (77 + 44) / 121][Stage 5:=====================================>                 (83 + 38) / 121][Stage 5:=========================================>             (91 + 30) / 121][Stage 5:===================================================>   (114 + 7) / 121]                                                                                Time elapsed: 4.238693607 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.636655096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=============================>                         (62 + 53) / 115][Stage 6:================================>                      (68 + 47) / 115][Stage 6:===================================>                   (75 + 40) / 115][Stage 6:==========================================>            (89 + 26) / 115][Stage 6:===============================================>      (102 + 13) / 115][Stage 6:====================================================>  (109 + 6) / 115][Stage 6:======================================================>(113 + 2) / 115]                                                                                [Stage 7:=================================>                     (70 + 46) / 116][Stage 7:======================================>                (81 + 35) / 116][Stage 7:===========================================>           (91 + 25) / 116][Stage 7:==============================================>        (98 + 18) / 116][Stage 7:=================================================>    (106 + 10) / 116][Stage 7:====================================================>  (111 + 5) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.295335133 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.556440976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=============================>                         (61 + 54) / 115][Stage 8:===================================>                   (74 + 41) / 115][Stage 8:======================================>                (81 + 34) / 115][Stage 8:==========================================>            (89 + 26) / 115][Stage 8:===============================================>      (101 + 14) / 115][Stage 8:=====================================================> (112 + 3) / 115]                                                                                [Stage 9:=================================>                     (71 + 45) / 116][Stage 9:======================================>                (82 + 34) / 116][Stage 9:===========================================>           (91 + 25) / 116][Stage 9:=============================================>         (95 + 21) / 116][Stage 9:===============================================>      (101 + 15) / 116][Stage 9:=====================================================> (112 + 4) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.231708208 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.628603424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:==============================>                       (68 + 52) / 120][Stage 10:====================================>                 (82 + 38) / 120][Stage 10:========================================>             (90 + 30) / 120][Stage 10:============================================>         (99 + 21) / 120][Stage 10:=================================================>    (111 + 9) / 120][Stage 10:=====================================================>(118 + 2) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:=============================>                        (65 + 56) / 121][Stage 11:===================================>                  (79 + 42) / 121][Stage 11:============================================>         (99 + 22) / 121][Stage 11:===============================================>     (108 + 13) / 121][Stage 11:====================================================> (117 + 4) / 121][Stage 11:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.078537664 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.566030874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:===========================>                          (61 + 59) / 120][Stage 12:=============================>                        (66 + 54) / 120][Stage 12:======================================>               (85 + 35) / 120][Stage 12:==============================================>      (106 + 14) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (67 + 54) / 121][Stage 13:====================================>                 (81 + 40) / 121][Stage 13:==============================================>      (107 + 14) / 121][Stage 13:==================================================>   (113 + 8) / 121][Stage 13:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.485136226 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.579569139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:===========================>                          (61 + 59) / 120][Stage 14:====================================>                 (81 + 39) / 120][Stage 14:============================================>        (101 + 19) / 120][Stage 14:===============================================>     (108 + 12) / 120][Stage 14:==================================================>   (113 + 7) / 120][Stage 14:=====================================================>(118 + 2) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:============================>                         (63 + 58) / 121][Stage 15:===================================>                  (79 + 42) / 121][Stage 15:============================================>        (102 + 19) / 121][Stage 15:================================================>    (111 + 10) / 121][Stage 15:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.088263632 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501860963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==============================>                       (66 + 49) / 115][Stage 16:====================================>                 (78 + 37) / 115][Stage 16:==========================================>           (91 + 24) / 115][Stage 16:==============================================>      (100 + 15) / 115][Stage 16:==================================================>   (108 + 7) / 115][Stage 16:===================================================>  (109 + 6) / 115][Stage 16:====================================================> (111 + 4) / 115][Stage 16:=====================================================>(114 + 1) / 115]                                                                                [Stage 17:==============================>                       (65 + 51) / 116][Stage 17:===================================>                  (76 + 40) / 116][Stage 17:========================================>             (87 + 29) / 116][Stage 17:==============================================>       (99 + 17) / 116][Stage 17:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 4.066417858 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.572282908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:===========================>                          (62 + 59) / 121][Stage 18:=================================>                    (75 + 46) / 121][Stage 18:===========================================>          (97 + 24) / 121][Stage 18:==================================================>   (113 + 8) / 121][Stage 18:===================================================>  (116 + 5) / 121]                                                                                [Stage 19:===========================>                          (61 + 61) / 122][Stage 19:=============================>                        (66 + 56) / 122][Stage 19:==================================>                   (78 + 44) / 122][Stage 19:==========================================>           (97 + 25) / 122][Stage 19:==================================================>   (115 + 7) / 122][Stage 19:===================================================>  (117 + 5) / 122][Stage 19:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.012404669 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455590302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==================================>                   (72 + 41) / 113][Stage 20:=======================================>              (82 + 31) / 113][Stage 20:============================================>         (94 + 19) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:===================================================>  (108 + 5) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:====================================>                 (78 + 36) / 114][Stage 21:=======================================>              (84 + 30) / 114][Stage 21:==============================================>      (101 + 13) / 114][Stage 21:==================================================>   (107 + 7) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.593367834 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502235506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=============================>                        (61 + 52) / 113][Stage 22:===============================>                      (66 + 47) / 113][Stage 22:=====================================>                (79 + 34) / 113][Stage 22:=============================================>        (96 + 17) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:====================================================> (109 + 4) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:===========================>                          (58 + 56) / 114][Stage 23:===============================>                      (66 + 48) / 114][Stage 23:===================================>                  (75 + 39) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:==============================================>       (99 + 15) / 114][Stage 23:==================================================>   (106 + 8) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.964132333 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515516609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:==============================>                       (68 + 52) / 120][Stage 24:======================================>               (85 + 35) / 120][Stage 24:================================================>    (109 + 11) / 120][Stage 24:=====================================================>(118 + 2) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:=============================>                        (67 + 54) / 121][Stage 25:======================================>               (86 + 35) / 121][Stage 25:============================================>        (102 + 19) / 121][Stage 25:===================================================>  (115 + 6) / 121][Stage 25:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.639665064 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469550949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===============================>                      (67 + 48) / 115][Stage 26:====================================>                 (77 + 38) / 115][Stage 26:==============================================>       (98 + 17) / 115][Stage 26:==================================================>   (108 + 7) / 115][Stage 26:====================================================> (112 + 3) / 115][Stage 26:=====================================================>(113 + 2) / 115]                                                                                [Stage 27:=================================>                    (71 + 45) / 116][Stage 27:========================================>             (88 + 28) / 116][Stage 27:===============================================>     (105 + 11) / 116][Stage 27:====================================================> (113 + 3) / 116][Stage 27:=====================================================>(114 + 2) / 116][Stage 27:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.564018215 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516702853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:=============================>                        (65 + 55) / 120][Stage 28:=======================================>              (88 + 32) / 120][Stage 28:================================================>    (109 + 11) / 120][Stage 28:=====================================================>(119 + 1) / 120]                                                                                [Stage 29:============================>                         (64 + 57) / 121][Stage 29:===================================>                  (80 + 41) / 121][Stage 29:============================================>         (99 + 22) / 121][Stage 29:================================================>    (110 + 11) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.569714069 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.598790139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:========================>                             (56 + 65) / 121][Stage 30:=========================>                            (57 + 64) / 121][Stage 30:=================================>                    (75 + 46) / 121][Stage 30:==========================================>           (95 + 26) / 121][Stage 30:=================================================>    (112 + 9) / 121][Stage 30:=====================================================>(120 + 1) / 121]                                                                                [Stage 31:===========================>                          (63 + 59) / 122][Stage 31:=====================================>                (84 + 38) / 122][Stage 31:==============================================>      (108 + 14) / 122][Stage 31:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.232080837 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463577761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (70 + 45) / 115][Stage 32:========================================>             (86 + 29) / 115][Stage 32:==============================================>      (100 + 15) / 115][Stage 32:==================================================>   (107 + 8) / 115][Stage 32:===================================================>  (110 + 5) / 115][Stage 32:====================================================> (112 + 3) / 115][Stage 32:=====================================================>(114 + 1) / 115]                                                                                [Stage 33:================================>                     (70 + 46) / 116][Stage 33:========================================>             (87 + 29) / 116][Stage 33:=============================================>       (100 + 16) / 116][Stage 33:===================================================>  (111 + 5) / 116][Stage 33:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.715775395 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471469994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:======================================>               (83 + 32) / 115][Stage 34:=============================================>        (97 + 18) / 115][Stage 34:====================================================> (111 + 4) / 115]                                                                                [Stage 35:========================================>             (86 + 30) / 116][Stage 35:=============================================>       (100 + 16) / 116][Stage 35:====================================================> (112 + 4) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.748111466 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522826946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:=============================>                        (67 + 54) / 121][Stage 36:====================================>                 (81 + 40) / 121][Stage 36:==============================================>      (107 + 14) / 121][Stage 36:===================================================>  (115 + 6) / 121]                                                                                [Stage 37:============================>                         (65 + 57) / 122][Stage 37:==================================>                   (77 + 45) / 122][Stage 37:=========================================>            (94 + 28) / 122][Stage 37:================================================>    (112 + 10) / 122][Stage 37:==================================================>   (115 + 7) / 122][Stage 37:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.691462 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509540543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:>                                                       (0 + 0) / 121][Stage 38:==========================>                           (60 + 61) / 121][Stage 38:=============================>                        (67 + 54) / 121][Stage 38:======================================>               (87 + 34) / 121][Stage 38:==================================================>   (113 + 8) / 121][Stage 38:===================================================>  (116 + 5) / 121][Stage 38:=====================================================>(120 + 1) / 121]                                                                                [Stage 39:============================>                         (64 + 58) / 122][Stage 39:=================================>                    (75 + 47) / 122][Stage 39:==========================================>           (97 + 25) / 122][Stage 39:==================================================>   (113 + 9) / 122][Stage 39:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.591032486 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505096256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:>                                                       (0 + 0) / 121][Stage 40:==========================>                           (60 + 61) / 121][Stage 40:=============================>                        (66 + 55) / 121][Stage 40:======================================>               (86 + 35) / 121][Stage 40:=================================================>    (112 + 9) / 121][Stage 40:=====================================================>(119 + 2) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:============================>                         (65 + 57) / 122][Stage 41:======================================>               (87 + 35) / 122][Stage 41:============================================>        (103 + 19) / 122][Stage 41:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.079441903 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568438129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:=============================>                        (65 + 56) / 121][Stage 42:===================================>                  (80 + 41) / 121][Stage 42:=============================================>       (105 + 16) / 121][Stage 42:===================================================>  (116 + 5) / 121]                                                                                [Stage 43:===========================>                          (62 + 60) / 122][Stage 43:==============================>                       (70 + 52) / 122][Stage 43:===========================================>         (100 + 22) / 122][Stage 43:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.17173753 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444148609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==============================>                       (65 + 50) / 115][Stage 44:==================================>                   (73 + 42) / 115][Stage 44:==========================================>           (91 + 24) / 115][Stage 44:=================================================>    (106 + 9) / 115][Stage 44:====================================================> (111 + 4) / 115]                                                                                [Stage 45:=================================>                    (73 + 43) / 116][Stage 45:=========================================>            (89 + 27) / 116][Stage 45:==============================================>      (101 + 15) / 116][Stage 45:=================================================>    (107 + 9) / 116][Stage 45:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.26055969 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400281071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=====================================>                (80 + 35) / 115][Stage 46:=========================================>            (89 + 26) / 115][Stage 46:==============================================>       (99 + 16) / 115][Stage 46:===================================================>  (109 + 6) / 115]                                                                                [Stage 47:======================================>               (82 + 34) / 116][Stage 47:==========================================>           (91 + 25) / 116][Stage 47:================================================>    (106 + 10) / 116][Stage 47:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.01114715 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499892188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:===========================>                          (62 + 59) / 121][Stage 48:=================================>                    (74 + 47) / 121][Stage 48:===========================================>         (100 + 21) / 121][Stage 48:==================================================>   (114 + 7) / 121][Stage 48:===================================================>  (116 + 5) / 121][Stage 48:====================================================> (118 + 3) / 121][Stage 48:=====================================================>(120 + 1) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:============================>                         (65 + 57) / 122][Stage 49:==================================>                   (79 + 43) / 122][Stage 49:=============================================>       (105 + 17) / 122][Stage 49:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.725785164 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395122923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===================================>                  (74 + 39) / 113][Stage 50:========================================>             (84 + 29) / 113][Stage 50:=============================================>        (96 + 17) / 113][Stage 50:==================================================>   (105 + 8) / 113][Stage 50:====================================================> (109 + 4) / 113]                                                                                [Stage 51:=====================================>                (80 + 34) / 114][Stage 51:========================================>             (85 + 29) / 114][Stage 51:===============================================>     (103 + 11) / 114][Stage 51:===================================================>  (109 + 5) / 114][Stage 51:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.402206673 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371635182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (82 + 33) / 115][Stage 52:========================================>             (87 + 28) / 115][Stage 52:==============================================>      (100 + 15) / 115][Stage 52:===================================================>  (109 + 6) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:========================================>             (87 + 29) / 116][Stage 53:=============================================>        (98 + 18) / 116][Stage 53:================================================>    (106 + 10) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.977808441 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411602933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (72 + 46) / 118][Stage 54:=====================================>                (83 + 35) / 118][Stage 54:============================================>        (100 + 18) / 118][Stage 54:====================================================> (114 + 4) / 118][Stage 54:=====================================================>(117 + 1) / 118]                                                                                [Stage 55:=================================>                    (73 + 46) / 119][Stage 55:====================================>                 (80 + 39) / 119][Stage 55:==========================================>           (94 + 25) / 119][Stage 55:================================================>    (108 + 11) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.172902951 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413693897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=================================>                    (71 + 42) / 113][Stage 56:========================================>             (85 + 28) / 113][Stage 56:==============================================>       (98 + 15) / 113][Stage 56:===================================================>  (107 + 6) / 113][Stage 56:====================================================> (110 + 3) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:=====================================>                (79 + 35) / 114][Stage 57:==========================================>           (90 + 24) / 114][Stage 57:===============================================>     (103 + 11) / 114][Stage 57:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.247771687 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457151495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:==============================>                       (68 + 52) / 120][Stage 58:========================================>             (90 + 30) / 120][Stage 58:================================================>    (109 + 11) / 120]                                                                                [Stage 59:===========================>                          (62 + 59) / 121][Stage 59:=================================>                    (74 + 47) / 121][Stage 59:=============================================>       (105 + 16) / 121][Stage 59:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.980681554 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569688416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==============================>                       (64 + 51) / 115][Stage 60:=================================>                    (72 + 43) / 115][Stage 60:=========================================>            (89 + 26) / 115][Stage 60:==============================================>       (98 + 17) / 115][Stage 60:===================================================>  (109 + 6) / 115][Stage 60:===================================================>  (110 + 5) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:==================================>                   (75 + 41) / 116][Stage 61:=========================================>            (90 + 26) / 116][Stage 61:==============================================>      (102 + 14) / 116][Stage 61:===============================================>     (105 + 11) / 116][Stage 61:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.581225129 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419137928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (73 + 45) / 118][Stage 62:===================================>                  (78 + 40) / 118][Stage 62:============================================>         (97 + 21) / 118][Stage 62:==================================================>   (111 + 7) / 118]                                                                                [Stage 63:==================================>                   (75 + 44) / 119][Stage 63:=========================================>            (91 + 28) / 119][Stage 63:==================================================>   (111 + 8) / 119][Stage 63:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.904327765 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42570348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==============================>                       (66 + 49) / 115][Stage 64:====================================>                 (78 + 37) / 115][Stage 64:============================================>         (95 + 20) / 115][Stage 64:===============================================>     (102 + 13) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:==============================>                       (66 + 50) / 116][Stage 65:======================================>               (82 + 34) / 116][Stage 65:===========================================>          (93 + 23) / 116][Stage 65:===============================================>     (103 + 13) / 116][Stage 65:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.19122806 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428147424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (58 + 55) / 113][Stage 66:===================================>                  (75 + 38) / 113][Stage 66:===========================================>          (91 + 22) / 113][Stage 66:==================================================>   (106 + 7) / 113]                                                                                [Stage 67:============================>                         (61 + 53) / 114][Stage 67:==================================>                   (72 + 42) / 114][Stage 67:==========================================>           (90 + 24) / 114][Stage 67:===============================================>     (102 + 12) / 114][Stage 67:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.328825188 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437695122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:=============================>                        (66 + 54) / 120][Stage 68:====================================>                 (81 + 39) / 120][Stage 68:=================================================>    (111 + 9) / 120][Stage 68:====================================================> (117 + 3) / 120]                                                                                [Stage 69:===========================>                          (61 + 60) / 121][Stage 69:=============================>                        (66 + 55) / 121][Stage 69:=====================================>                (84 + 37) / 121][Stage 69:================================================>    (110 + 11) / 121][Stage 69:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.012135185 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449760544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==========================>                           (60 + 61) / 121][Stage 70:===========================>                          (62 + 59) / 121][Stage 70:==================================>                   (78 + 43) / 121][Stage 70:=============================================>       (105 + 16) / 121][Stage 70:=====================================================>(120 + 1) / 121]                                                                                [Stage 71:===========================>                          (62 + 60) / 122][Stage 71:============================>                         (65 + 57) / 122][Stage 71:==================================>                   (79 + 43) / 122][Stage 71:=============================================>       (105 + 17) / 122][Stage 71:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 2.96295302 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368231638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (83 + 32) / 115][Stage 72:============================================>         (94 + 21) / 115][Stage 72:==================================================>   (107 + 8) / 115][Stage 72:=====================================================>(113 + 2) / 115]                                                                                [Stage 73:======================================>               (82 + 34) / 116][Stage 73:==========================================>           (91 + 25) / 116][Stage 73:==============================================>      (102 + 14) / 116][Stage 73:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.759986739 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385345689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:==================================>                   (76 + 42) / 118][Stage 74:=====================================>                (81 + 37) / 118][Stage 74:===========================================>          (96 + 22) / 118][Stage 74:==================================================>   (111 + 7) / 118][Stage 74:=====================================================>(117 + 1) / 118]                                                                                [Stage 75:===================================>                  (78 + 41) / 119][Stage 75:=======================================>              (87 + 32) / 119][Stage 75:===============================================>     (106 + 13) / 119][Stage 75:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.264758126 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444435396 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==========================>                           (60 + 61) / 121][Stage 76:============================>                         (63 + 58) / 121][Stage 76:=====================================>                (84 + 37) / 121][Stage 76:==============================================>      (106 + 15) / 121][Stage 76:=====================================================>(120 + 1) / 121]                                                                                [Stage 77:===========================>                          (63 + 59) / 122][Stage 77:=================================>                    (75 + 47) / 122][Stage 77:=========================================>            (94 + 28) / 122][Stage 77:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.099738434 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39596169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (60 + 53) / 113][Stage 78:================================>                     (67 + 46) / 113][Stage 78:=========================================>            (86 + 27) / 113][Stage 78:================================================>    (103 + 10) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:================================>                     (69 + 45) / 114][Stage 79:======================================>               (82 + 32) / 114][Stage 79:============================================>         (94 + 20) / 114][Stage 79:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.098211433 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416879588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:================================>                     (68 + 45) / 113][Stage 80:======================================>               (81 + 32) / 113][Stage 80:==============================================>      (100 + 13) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:===============================>                      (67 + 47) / 114][Stage 81:========================================>             (85 + 29) / 114][Stage 81:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.018132473 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389592639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:==================================>                   (76 + 42) / 118][Stage 82:===========================================>          (94 + 24) / 118][Stage 82:==================================================>   (111 + 7) / 118][Stage 82:=====================================================>(117 + 1) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:====================================>                 (81 + 38) / 119][Stage 83:===========================================>          (95 + 24) / 119][Stage 83:==============================================>      (105 + 14) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.009681641 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356745421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:======================================>               (83 + 32) / 115][Stage 84:============================================>         (95 + 20) / 115][Stage 84:=================================================>    (106 + 9) / 115]                                                                                [Stage 85:=======================================>              (85 + 31) / 116][Stage 85:===========================================>          (93 + 23) / 116][Stage 85:================================================>    (106 + 10) / 116][Stage 85:=====================================================>(114 + 2) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.806290038 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407379532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=============================>                        (61 + 52) / 113][Stage 86:====================================>                 (76 + 37) / 113][Stage 86:=========================================>            (87 + 26) / 113][Stage 86:==================================================>   (105 + 8) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:===========================>                          (59 + 55) / 114][Stage 87:==============================>                       (64 + 50) / 114][Stage 87:====================================>                 (78 + 36) / 114][Stage 87:===============================================>     (102 + 12) / 114][Stage 87:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.144691249 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362677171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=================================>                    (70 + 43) / 113][Stage 88:======================================>               (80 + 33) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:==================================================>   (105 + 8) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:====================================>                 (76 + 38) / 114][Stage 89:=========================================>            (88 + 26) / 114][Stage 89:==============================================>       (99 + 15) / 114][Stage 89:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.029448445 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413181103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=============================>                        (61 + 52) / 113][Stage 90:================================>                     (69 + 44) / 113][Stage 90:===========================================>          (92 + 21) / 113][Stage 90:===================================================>  (108 + 5) / 113]                                                                                [Stage 91:============================>                         (61 + 53) / 114][Stage 91:==================================>                   (73 + 41) / 114][Stage 91:==============================================>       (98 + 16) / 114][Stage 91:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.940065946 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424134823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:=============================>                        (66 + 55) / 121][Stage 92:================================>                     (73 + 48) / 121][Stage 92:=============================================>       (105 + 16) / 121][Stage 92:=====================================================>(119 + 2) / 121]                                                                                [Stage 93:===========================>                          (63 + 59) / 122][Stage 93:==================================>                   (79 + 43) / 122][Stage 93:===========================================>          (99 + 23) / 122][Stage 93:====================================================> (118 + 4) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.130889292 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381670007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=================================>                    (72 + 43) / 115][Stage 94:=========================================>            (89 + 26) / 115][Stage 94:==================================================>   (107 + 8) / 115]                                                                                [Stage 95:================================>                     (70 + 46) / 116][Stage 95:======================================>               (82 + 34) / 116][Stage 95:===========================================>          (93 + 23) / 116][Stage 95:================================================>    (106 + 10) / 116][Stage 95:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.942538676 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367368381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==================================>                   (72 + 41) / 113][Stage 96:===========================================>          (90 + 23) / 113][Stage 96:==============================================>       (97 + 16) / 113][Stage 96:=================================================>    (104 + 9) / 113][Stage 96:===================================================>  (107 + 6) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:===================================>                  (75 + 39) / 114][Stage 97:========================================>             (85 + 29) / 114][Stage 97:==============================================>       (99 + 15) / 114][Stage 97:==================================================>   (106 + 8) / 114][Stage 97:====================================================> (110 + 4) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.63741401 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352989896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (83 + 32) / 115][Stage 98:=============================================>        (96 + 19) / 115][Stage 98:===============================================>     (104 + 11) / 115][Stage 98:====================================================> (111 + 4) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:======================================>               (83 + 33) / 116][Stage 99:==========================================>           (92 + 24) / 116][Stage 99:==============================================>      (102 + 14) / 116][Stage 99:===================================================>  (110 + 6) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.101601288 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372773771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===================================>                 (76 + 37) / 113][Stage 100:=======================================>             (85 + 28) / 113][Stage 100:=============================================>       (97 + 16) / 113][Stage 100:==================================================>  (107 + 6) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:==================================>                  (74 + 40) / 114][Stage 101:======================================>              (83 + 31) / 114][Stage 101:===========================================>         (93 + 21) / 114][Stage 101:===============================================>    (104 + 10) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.265506987 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472580192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (72 + 46) / 118][Stage 102:===================================>                 (79 + 39) / 118][Stage 102:========================================>            (91 + 27) / 118][Stage 102:===============================================>    (107 + 11) / 118][Stage 102:====================================================>(116 + 2) / 118]                                                                                [Stage 103:=================================>                   (75 + 44) / 119][Stage 103:=====================================>               (85 + 34) / 119][Stage 103:============================================>       (101 + 18) / 119][Stage 103:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.088516991 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=27", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=27,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381336928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:==================================>                  (77 + 41) / 118][Stage 104:===========================================>         (96 + 22) / 118][Stage 104:==================================================>  (113 + 5) / 118][Stage 104:====================================================>(117 + 1) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:===================================>                 (80 + 39) / 119][Stage 105:==========================================>          (95 + 24) / 119][Stage 105:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 2.919591009 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405656392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=================================>                   (73 + 42) / 115][Stage 106:=======================================>             (86 + 29) / 115][Stage 106:=============================================>       (98 + 17) / 115][Stage 106:===================================================> (112 + 3) / 115]                                                                                [Stage 107:===============================>                     (70 + 46) / 116][Stage 107:=======================================>             (86 + 30) / 116][Stage 107:===========================================>         (95 + 21) / 116][Stage 107:==================================================>  (110 + 6) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.807118369 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433781983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (62 + 59) / 121][Stage 108:===============================>                     (71 + 50) / 121][Stage 108:========================================>            (93 + 28) / 121][Stage 108:=================================================>   (114 + 7) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:=============================>                       (69 + 53) / 122][Stage 109:=======================================>             (91 + 31) / 122][Stage 109:=================================================>   (113 + 9) / 122][Stage 109:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.045985522 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504426852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:===========================>                         (63 + 57) / 120][Stage 110:==================================>                  (78 + 42) / 120][Stage 110:=========================================>           (95 + 25) / 120][Stage 110:=================================================>   (112 + 8) / 120][Stage 110:====================================================>(119 + 1) / 120]                                                                                [Stage 111:===========================>                         (63 + 58) / 121][Stage 111:=====================================>               (86 + 35) / 121][Stage 111:===========================================>        (101 + 20) / 121][Stage 111:===============================================>    (110 + 11) / 121][Stage 111:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.468475649 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37651152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===============================>                     (68 + 47) / 115][Stage 112:=======================================>             (86 + 29) / 115][Stage 112:============================================>        (97 + 18) / 115][Stage 112:===================================================> (112 + 3) / 115]                                                                                [Stage 113:===============================>                     (68 + 48) / 116][Stage 113:==================================>                  (76 + 40) / 116][Stage 113:============================================>       (100 + 16) / 116][Stage 113:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.729580515 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377865563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (70 + 45) / 115][Stage 114:======================================>              (84 + 31) / 115][Stage 114:=============================================>       (99 + 16) / 115][Stage 114:===================================================> (112 + 3) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:===============================>                     (70 + 46) / 116][Stage 115:====================================>                (80 + 36) / 116][Stage 115:=============================================>       (99 + 17) / 116][Stage 115:===================================================> (113 + 3) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.857633879 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404451052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:===========================>                         (63 + 58) / 121][Stage 116:================================>                    (74 + 47) / 121][Stage 116:==========================================>          (97 + 24) / 121][Stage 116:==================================================>  (115 + 6) / 121]                                                                                [Stage 117:==========================>                          (62 + 60) / 122][Stage 117:===============================>                     (73 + 49) / 122][Stage 117:==========================================>          (97 + 25) / 122][Stage 117:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.059504858 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406667236 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:===========================>                         (63 + 57) / 120][Stage 118:====================================>                (82 + 38) / 120][Stage 118:==========================================>          (97 + 23) / 120][Stage 118:=================================================>   (113 + 7) / 120]                                                                                [Stage 119:===========================>                         (62 + 59) / 121][Stage 119:==================================>                  (78 + 43) / 121][Stage 119:==========================================>         (100 + 21) / 121][Stage 119:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.095944407 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388997525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:==============================>                      (65 + 48) / 113][Stage 120:====================================>                (78 + 35) / 113][Stage 120:==============================================>     (100 + 13) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:=============================>                       (63 + 51) / 114][Stage 121:===================================>                 (76 + 38) / 114][Stage 121:============================================>        (96 + 18) / 114][Stage 121:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.116229866 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3859309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:==============================>                      (65 + 48) / 113][Stage 122:=====================================>               (81 + 32) / 113][Stage 122:==============================================>     (102 + 11) / 113][Stage 122:==================================================>  (108 + 5) / 113]                                                                                [Stage 123:============================>                        (62 + 52) / 114][Stage 123:===================================>                 (76 + 38) / 114][Stage 123:============================================>        (95 + 19) / 114][Stage 123:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.142251396 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398167782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:=============================>                       (62 + 51) / 113][Stage 124:==================================>                  (74 + 39) / 113][Stage 124:============================================>        (95 + 18) / 113][Stage 124:===================================================> (109 + 4) / 113]                                                                                [Stage 125:============================>                        (62 + 52) / 114][Stage 125:================================>                    (69 + 45) / 114][Stage 125:==========================================>          (92 + 22) / 114][Stage 125:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.06539114 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363403599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:====================================>                (78 + 35) / 113][Stage 126:==========================================>          (91 + 22) / 113][Stage 126:=============================================>       (98 + 15) / 113][Stage 126:=================================================>   (105 + 8) / 113][Stage 126:====================================================>(111 + 2) / 113]                                                                                [Stage 127:===================================>                 (76 + 38) / 114][Stage 127:=========================================>           (89 + 25) / 114][Stage 127:=============================================>      (100 + 14) / 114][Stage 127:==================================================>  (108 + 6) / 114][Stage 127:===================================================> (111 + 3) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.273815681 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372525396 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==================================>                  (74 + 41) / 115][Stage 128:======================================>              (84 + 31) / 115][Stage 128:===============================================>    (105 + 10) / 115][Stage 128:===================================================> (111 + 4) / 115]                                                                                [Stage 129:================================>                    (71 + 45) / 116][Stage 129:========================================>            (88 + 28) / 116][Stage 129:===============================================>    (106 + 10) / 116][Stage 129:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.886560461 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384731879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:==============================>                      (65 + 48) / 113][Stage 130:=====================================>               (79 + 34) / 113][Stage 130:==============================================>     (100 + 13) / 113][Stage 130:===================================================> (110 + 3) / 113]                                                                                [Stage 131:==============================>                      (65 + 49) / 114][Stage 131:==================================>                  (74 + 40) / 114][Stage 131:===========================================>         (94 + 20) / 114][Stage 131:===============================================>    (104 + 10) / 114][Stage 131:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.206066764 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342964783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:======================================>              (83 + 32) / 115][Stage 132:===========================================>         (95 + 20) / 115][Stage 132:==============================================>     (103 + 12) / 115][Stage 132:===================================================> (112 + 3) / 115]                                                                                [Stage 133:======================================>              (84 + 32) / 116][Stage 133:============================================>        (97 + 19) / 116][Stage 133:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.708925243 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367677529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:=================================>                   (74 + 44) / 118][Stage 134:========================================>            (90 + 28) / 118][Stage 134:===============================================>    (108 + 10) / 118][Stage 134:===================================================> (115 + 3) / 118]                                                                                [Stage 135:=================================>                   (75 + 44) / 119][Stage 135:=======================================>             (88 + 31) / 119][Stage 135:==============================================>     (106 + 13) / 119][Stage 135:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.954908493 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397842963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (61 + 59) / 120][Stage 136:================================>                    (73 + 47) / 120][Stage 136:=======================================>             (89 + 31) / 120][Stage 136:==================================================>  (115 + 5) / 120][Stage 136:====================================================>(119 + 1) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:=============================>                       (67 + 54) / 121][Stage 137:===================================>                 (80 + 41) / 121][Stage 137:=============================================>      (107 + 14) / 121][Stage 137:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.064254954 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373837381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (71 + 44) / 115][Stage 138:=======================================>             (85 + 30) / 115][Stage 138:=============================================>      (100 + 15) / 115][Stage 138:=================================================>   (107 + 8) / 115][Stage 138:===================================================> (112 + 3) / 115]                                                                                [Stage 139:=====================================>               (82 + 34) / 116][Stage 139:===========================================>         (96 + 20) / 116][Stage 139:===============================================>    (105 + 11) / 116][Stage 139:===================================================> (112 + 4) / 116][Stage 139:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.232684763 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3739986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=============================>                       (65 + 50) / 115][Stage 140:===================================>                 (77 + 38) / 115][Stage 140:=========================================>           (90 + 25) / 115][Stage 140:=============================================>      (101 + 14) / 115][Stage 140:====================================================>(114 + 1) / 115]                                                                                [Stage 141:===============================>                     (68 + 48) / 116][Stage 141:======================================>              (85 + 31) / 116][Stage 141:==============================================>     (103 + 13) / 116][Stage 141:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.99877708 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366337587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (72 + 46) / 118][Stage 142:==================================>                  (76 + 42) / 118][Stage 142:=======================================>             (87 + 31) / 118][Stage 142:============================================>       (100 + 18) / 118][Stage 142:===================================================> (114 + 4) / 118]                                                                                [Stage 143:=================================>                   (76 + 43) / 119][Stage 143:=====================================>               (84 + 35) / 119][Stage 143:=========================================>           (93 + 26) / 119][Stage 143:============================================>       (102 + 17) / 119][Stage 143:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.448150701 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340678581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:========================================>            (87 + 28) / 115][Stage 144:=============================================>       (98 + 17) / 115][Stage 144:===================================================> (111 + 4) / 115]                                                                                [Stage 145:=====================================>               (83 + 33) / 116][Stage 145:===========================================>         (95 + 21) / 116][Stage 145:=================================================>   (108 + 8) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.64487168 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350205619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==================================>                  (74 + 39) / 113][Stage 146:========================================>            (87 + 26) / 113][Stage 146:============================================>        (95 + 18) / 113][Stage 146:================================================>    (104 + 9) / 113][Stage 146:===================================================> (110 + 3) / 113][Stage 146:====================================================>(111 + 2) / 113]                                                                                [Stage 147:======================================>              (83 + 31) / 114][Stage 147:===========================================>         (94 + 20) / 114][Stage 147:================================================>    (105 + 9) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.321805857 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371003616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==================================>                  (73 + 40) / 113][Stage 148:=======================================>             (85 + 28) / 113][Stage 148:=============================================>       (98 + 15) / 113][Stage 148:==================================================>  (107 + 6) / 113][Stage 148:===================================================> (109 + 4) / 113]                                                                                [Stage 149:======================================>              (83 + 31) / 114][Stage 149:===========================================>         (93 + 21) / 114][Stage 149:===============================================>    (104 + 10) / 114][Stage 149:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.045930377 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376266007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==================================>                  (74 + 41) / 115][Stage 150:=======================================>             (85 + 30) / 115][Stage 150:=============================================>       (99 + 16) / 115][Stage 150:==================================================>  (109 + 6) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:================================>                    (71 + 45) / 116][Stage 151:=========================================>           (90 + 26) / 116][Stage 151:===============================================>    (106 + 10) / 116][Stage 151:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.949295063 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362758042 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (80 + 33) / 113][Stage 152:=========================================>           (89 + 24) / 113][Stage 152:==============================================>     (101 + 12) / 113][Stage 152:====================================================>(111 + 2) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:=====================================>               (80 + 34) / 114][Stage 153:==========================================>          (92 + 22) / 114][Stage 153:==============================================>     (101 + 13) / 114][Stage 153:==================================================>  (109 + 5) / 114][Stage 153:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.409985127 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355070028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:====================================>                (78 + 35) / 113][Stage 154:========================================>            (87 + 26) / 113][Stage 154:=============================================>       (97 + 16) / 113][Stage 154:==================================================>  (107 + 6) / 113]                                                                                [Stage 155:======================================>              (83 + 31) / 114][Stage 155:===========================================>         (94 + 20) / 114][Stage 155:================================================>    (105 + 9) / 114][Stage 155:====================================================>(112 + 2) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.029671476 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395512003 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 60) / 120][Stage 156:===========================>                         (63 + 57) / 120][Stage 156:==================================>                  (78 + 42) / 120][Stage 156:===========================================>        (101 + 19) / 120][Stage 156:===================================================> (117 + 3) / 120]                                                                                [Stage 157:=============================>                       (67 + 54) / 121][Stage 157:==================================>                  (78 + 43) / 121][Stage 157:=============================================>      (105 + 16) / 121][Stage 157:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.956420584 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400513733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (63 + 57) / 120][Stage 158:===================================>                 (81 + 39) / 120][Stage 158:===========================================>        (100 + 20) / 120][Stage 158:===================================================> (116 + 4) / 120]                                                                                [Stage 159:==========================>                          (61 + 60) / 121][Stage 159:============================>                        (65 + 56) / 121][Stage 159:==================================>                  (78 + 43) / 121][Stage 159:============================================>       (104 + 17) / 121]                                                                                Time elapsed: 2.844934543 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39352116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (61 + 59) / 120][Stage 160:===============================>                     (71 + 49) / 120][Stage 160:=========================================>           (94 + 26) / 120][Stage 160:=================================================>   (113 + 7) / 120]                                                                                [Stage 161:===========================>                         (62 + 59) / 121][Stage 161:================================>                    (74 + 47) / 121][Stage 161:===========================================>         (99 + 22) / 121][Stage 161:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.839747435 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410619111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:============================>                        (66 + 55) / 121][Stage 162:==================================>                  (79 + 42) / 121][Stage 162:============================================>       (103 + 18) / 121][Stage 162:====================================================>(120 + 1) / 121]                                                                                [Stage 163:===========================>                         (64 + 58) / 122][Stage 163:================================>                    (75 + 47) / 122][Stage 163:========================================>            (94 + 28) / 122][Stage 163:===============================================>    (111 + 11) / 122][Stage 163:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.184728449 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396003585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:==============================>                      (69 + 52) / 121][Stage 164:======================================>              (87 + 34) / 121][Stage 164:==============================================>     (108 + 13) / 121][Stage 164:===================================================> (118 + 3) / 121]                                                                                [Stage 165:==========================>                          (62 + 60) / 122][Stage 165:=================================>                   (76 + 46) / 122][Stage 165:=======================================>             (91 + 31) / 122][Stage 165:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.177565779 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405650623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:===========================>                         (62 + 58) / 120][Stage 166:=================================>                   (75 + 45) / 120][Stage 166:========================================>            (92 + 28) / 120][Stage 166:==============================================>     (107 + 13) / 120][Stage 166:=================================================>   (113 + 7) / 120]                                                                                [Stage 167:===========================>                         (62 + 59) / 121][Stage 167:===================================>                 (80 + 41) / 121][Stage 167:==========================================>          (96 + 25) / 121][Stage 167:=================================================>   (114 + 7) / 121][Stage 167:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.321745786 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342207727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:====================================>                (80 + 35) / 115][Stage 168:=======================================>             (86 + 29) / 115][Stage 168:=============================================>       (99 + 16) / 115][Stage 168:===================================================> (111 + 4) / 115]                                                                                [Stage 169:========================================>            (89 + 27) / 116][Stage 169:=============================================>      (101 + 15) / 116][Stage 169:===================================================> (113 + 3) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.757997436 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384067884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===================================>                 (78 + 37) / 115][Stage 170:===========================================>         (94 + 21) / 115][Stage 170:==================================================>  (109 + 6) / 115]                                                                                [Stage 171:===============================>                     (70 + 46) / 116][Stage 171:=====================================>               (83 + 33) / 116][Stage 171:=============================================>       (99 + 17) / 116][Stage 171:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.002421727 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378537575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:================================>                    (69 + 44) / 113][Stage 172:=========================================>           (89 + 24) / 113][Stage 172:===================================================> (110 + 3) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:===========================>                         (60 + 54) / 114][Stage 173:=================================>                   (71 + 43) / 114][Stage 173:============================================>        (95 + 19) / 114][Stage 173:===============================================>    (104 + 10) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.370533544 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46313005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:=================================>                   (75 + 43) / 118][Stage 174:======================================>              (85 + 33) / 118][Stage 174:============================================>       (100 + 18) / 118][Stage 174:=================================================>   (110 + 8) / 118]                                                                                [Stage 175:================================>                    (74 + 45) / 119][Stage 175:====================================>                (82 + 37) / 119][Stage 175:=========================================>           (93 + 26) / 119][Stage 175:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 2.992998374 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333596933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (82 + 33) / 115][Stage 176:=======================================>             (85 + 30) / 115][Stage 176:===========================================>         (94 + 21) / 115][Stage 176:==================================================>  (110 + 5) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:======================================>              (85 + 31) / 116][Stage 177:============================================>        (97 + 19) / 116][Stage 177:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.741996716 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349269442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==================================>                  (74 + 39) / 113][Stage 178:========================================>            (87 + 26) / 113][Stage 178:============================================>        (95 + 18) / 113][Stage 178:=================================================>   (106 + 7) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===================================>                 (77 + 37) / 114][Stage 179:=========================================>           (89 + 25) / 114][Stage 179:==============================================>     (101 + 13) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.285847817 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352768589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:======================================>              (83 + 32) / 115][Stage 180:=========================================>           (90 + 25) / 115][Stage 180:=============================================>      (101 + 14) / 115][Stage 180:====================================================>(113 + 2) / 115]                                                                                [Stage 181:=====================================>               (82 + 34) / 116][Stage 181:========================================>            (88 + 28) / 116][Stage 181:============================================>        (98 + 18) / 116][Stage 181:=================================================>   (109 + 7) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.724515248 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434553279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 61) / 121][Stage 182:=================================>                   (76 + 45) / 121][Stage 182:===========================================>        (102 + 19) / 121][Stage 182:====================================================>(119 + 2) / 121]                                                                                [Stage 183:==========================>                          (62 + 60) / 122][Stage 183:=================================>                   (77 + 45) / 122][Stage 183:===========================================>         (99 + 23) / 122][Stage 183:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.072075249 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398254673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:============================>                        (64 + 56) / 120][Stage 184:==================================>                  (79 + 41) / 120][Stage 184:===========================================>         (98 + 22) / 120][Stage 184:====================================================>(119 + 1) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:==============================>                      (70 + 51) / 121][Stage 185:===================================>                 (81 + 40) / 121][Stage 185:===========================================>        (102 + 19) / 121]                                                                                Time elapsed: 2.960745108 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388444755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=============================>                       (62 + 51) / 113][Stage 186:=================================>                   (72 + 41) / 113][Stage 186:=============================================>       (96 + 17) / 113][Stage 186:==================================================>  (107 + 6) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:=================================>                   (73 + 41) / 114][Stage 187:=========================================>           (90 + 24) / 114][Stage 187:==============================================>     (103 + 11) / 114][Stage 187:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.222790452 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39089326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:==============================>                      (68 + 52) / 120][Stage 188:===================================>                 (81 + 39) / 120][Stage 188:=============================================>      (106 + 14) / 120][Stage 188:====================================================>(118 + 2) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:==============================>                      (69 + 52) / 121][Stage 189:====================================>                (83 + 38) / 121][Stage 189:==============================================>     (109 + 12) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.017759717 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427193767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:======================================>              (83 + 32) / 115][Stage 190:============================================>        (96 + 19) / 115][Stage 190:=================================================>   (107 + 8) / 115][Stage 190:====================================================>(114 + 1) / 115]                                                                                [Stage 191:=====================================>               (81 + 35) / 116][Stage 191:==========================================>          (93 + 23) / 116][Stage 191:================================================>    (107 + 9) / 116][Stage 191:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.725865303 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396805772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (62 + 59) / 121][Stage 192:===============================>                     (72 + 49) / 121][Stage 192:========================================>            (92 + 29) / 121][Stage 192:=================================================>   (114 + 7) / 121]                                                                                [Stage 193:==========================>                          (61 + 61) / 122][Stage 193:=============================>                       (69 + 53) / 122][Stage 193:=======================================>             (90 + 32) / 122][Stage 193:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 2.932533466 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40678657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 59) / 120][Stage 194:==================================>                  (78 + 42) / 120][Stage 194:=========================================>           (95 + 25) / 120][Stage 194:=================================================>   (111 + 9) / 120][Stage 194:====================================================>(119 + 1) / 120]                                                                                [Stage 195:===========================>                         (63 + 58) / 121][Stage 195:===================================>                 (81 + 40) / 121][Stage 195:===========================================>        (101 + 20) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.13971145 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361369847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:======================================>              (82 + 31) / 113][Stage 196:===========================================>         (92 + 21) / 113][Stage 196:===============================================>    (103 + 10) / 113][Stage 196:====================================================>(111 + 2) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:=====================================>               (81 + 33) / 114][Stage 197:=======================================>             (86 + 28) / 114][Stage 197:============================================>        (96 + 18) / 114][Stage 197:=================================================>   (106 + 8) / 114][Stage 197:===================================================> (110 + 4) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.228227836 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402518683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (60 + 53) / 113][Stage 198:================================>                    (70 + 43) / 113][Stage 198:=======================================>             (84 + 29) / 113][Stage 198:==============================================>     (101 + 12) / 113][Stage 198:===================================================> (110 + 3) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:==============================>                      (65 + 49) / 114][Stage 199:=================================>                   (73 + 41) / 114][Stage 199:=========================================>           (90 + 24) / 114][Stage 199:==============================================>     (102 + 12) / 114][Stage 199:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.341103167 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348464484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:======================================>              (82 + 31) / 113][Stage 200:==========================================>          (90 + 23) / 113][Stage 200:==============================================>     (101 + 12) / 113][Stage 200:==================================================>  (108 + 5) / 113][Stage 200:====================================================>(111 + 2) / 113]                                                                                [Stage 201:====================================>                (78 + 36) / 114][Stage 201:========================================>            (88 + 26) / 114][Stage 201:=============================================>       (98 + 16) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.213384775 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m55.882s
user	11m24.220s
sys	0m29.200s
