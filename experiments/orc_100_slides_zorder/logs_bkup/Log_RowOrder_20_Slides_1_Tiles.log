Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 02:00:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:00:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:00:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:00:57 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 02:00:59 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:01:09 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522020058-0399).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.382593099 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (48 + 67) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.533305691 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.636407216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=======================>                               (49 + 64) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:====================================>                  (75 + 38) / 113][Stage 2:======================================>                (79 + 34) / 113][Stage 2:=========================================>             (86 + 27) / 113][Stage 2:=============================================>         (94 + 19) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:===================================================>   (106 + 7) / 113][Stage 2:=====================================================> (110 + 3) / 113]                                                                                [Stage 3:==============================>                        (63 + 51) / 114][Stage 3:==================================>                    (72 + 42) / 114][Stage 3:=====================================>                 (78 + 36) / 114][Stage 3:==========================================>            (88 + 26) / 114][Stage 3:==============================================>        (96 + 18) / 114][Stage 3:===============================================>      (101 + 13) / 114][Stage 3:=================================================>    (104 + 10) / 114][Stage 3:=====================================================> (111 + 3) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.41413856 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.703631879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (53 + 60) / 113][Stage 4:===========================>                           (56 + 57) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:==============================>                        (63 + 50) / 113][Stage 4:===================================>                   (73 + 40) / 113][Stage 4:=======================================>               (81 + 32) / 113][Stage 4:===============================================>       (97 + 16) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:===============================>                       (65 + 49) / 114][Stage 5:=====================================>                 (78 + 36) / 114][Stage 5:==========================================>            (88 + 26) / 114][Stage 5:================================================>     (103 + 11) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.109349554 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.590292321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==================================>                    (70 + 43) / 113][Stage 6:======================================>                (80 + 33) / 113][Stage 6:==========================================>            (87 + 26) / 113][Stage 6:===========================================>           (89 + 24) / 113][Stage 6:===============================================>       (97 + 16) / 113][Stage 6:================================================>     (101 + 12) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:=====================================>                 (78 + 36) / 114][Stage 7:=======================================>               (81 + 33) / 114][Stage 7:==========================================>            (89 + 25) / 114][Stage 7:==============================================>        (96 + 18) / 114][Stage 7:===============================================>      (101 + 13) / 114][Stage 7:====================================================>  (108 + 6) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.647535973 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.58740483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (56 + 57) / 113][Stage 8:===========================>                           (57 + 56) / 113][Stage 8:=============================>                         (60 + 53) / 113][Stage 8:====================================>                  (75 + 38) / 113][Stage 8:=========================================>             (86 + 27) / 113][Stage 8:===============================================>       (97 + 16) / 113][Stage 8:=====================================================> (110 + 3) / 113]                                                                                [Stage 9:===========================>                           (56 + 58) / 114][Stage 9:===============================>                       (65 + 49) / 114][Stage 9:=====================================>                 (78 + 36) / 114][Stage 9:==============================================>        (96 + 18) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.90479806 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.575161749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:=============================>                        (61 + 52) / 113][Stage 10:====================================>                 (77 + 36) / 113][Stage 10:=============================================>        (95 + 18) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:===========================>                          (58 + 56) / 114][Stage 11:==============================>                       (64 + 50) / 114][Stage 11:==================================>                   (73 + 41) / 114][Stage 11:===========================================>          (91 + 23) / 114][Stage 11:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.47269806 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.592940247 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (57 + 56) / 113][Stage 12:============================>                         (60 + 53) / 113][Stage 12:==================================>                   (73 + 40) / 113][Stage 12:===========================================>          (92 + 21) / 113][Stage 12:===============================================>     (102 + 11) / 113][Stage 12:====================================================> (110 + 3) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:===========================>                          (58 + 56) / 114][Stage 13:================================>                     (69 + 45) / 114][Stage 13:=========================================>            (87 + 27) / 114][Stage 13:===============================================>     (102 + 12) / 114][Stage 13:==================================================>   (107 + 7) / 114][Stage 13:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 4.032107709 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469618177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==================================>                   (73 + 40) / 113][Stage 14:======================================>               (80 + 33) / 113][Stage 14:===========================================>          (91 + 22) / 113][Stage 14:================================================>    (103 + 10) / 113][Stage 14:===================================================>  (108 + 5) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:==================================>                   (73 + 41) / 114][Stage 15:======================================>               (82 + 32) / 114][Stage 15:============================================>         (93 + 21) / 114][Stage 15:===============================================>     (103 + 11) / 114][Stage 15:==================================================>   (106 + 8) / 114][Stage 15:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.773330485 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564639551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===================================>                  (74 + 39) / 113][Stage 16:===========================================>          (90 + 23) / 113][Stage 16:==============================================>       (97 + 16) / 113][Stage 16:==================================================>   (105 + 8) / 113][Stage 16:===================================================>  (107 + 6) / 113][Stage 16:====================================================> (109 + 4) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:=====================================>                (80 + 34) / 114][Stage 17:===========================================>          (92 + 22) / 114][Stage 17:==============================================>      (101 + 13) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.837590432 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483754722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==============================>                       (64 + 51) / 115][Stage 18:==================================>                   (74 + 41) / 115][Stage 18:========================================>             (87 + 28) / 115][Stage 18:==============================================>       (99 + 16) / 115][Stage 18:==================================================>   (107 + 8) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:===================================>                  (77 + 39) / 116][Stage 19:============================================>         (96 + 20) / 116][Stage 19:================================================>    (106 + 10) / 116][Stage 19:===================================================>  (110 + 6) / 116][Stage 19:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.614582508 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54066725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=========================>                            (56 + 64) / 120][Stage 20:===========================>                          (62 + 58) / 120][Stage 20:=================================>                    (74 + 46) / 120][Stage 20:===========================================>          (97 + 23) / 120][Stage 20:=============================================>       (104 + 16) / 120][Stage 20:==================================================>   (113 + 7) / 120][Stage 20:=====================================================>(119 + 1) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:==============================>                       (68 + 53) / 121][Stage 21:=====================================>                (83 + 38) / 121][Stage 21:================================================>    (110 + 11) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.633877947 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469410074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:==================================>                   (75 + 43) / 118][Stage 22:====================================>                 (79 + 39) / 118][Stage 22:========================================>             (89 + 29) / 118][Stage 22:=============================================>        (99 + 19) / 118][Stage 22:================================================>    (108 + 10) / 118][Stage 22:====================================================> (115 + 3) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:==================================>                   (76 + 43) / 119][Stage 23:========================================>             (89 + 30) / 119][Stage 23:==========================================>           (94 + 25) / 119][Stage 23:============================================>        (101 + 18) / 119][Stage 23:==================================================>   (112 + 7) / 119][Stage 23:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.046427585 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458913158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:======================================>               (80 + 33) / 113][Stage 24:==========================================>           (89 + 24) / 113][Stage 24:===============================================>     (101 + 12) / 113][Stage 24:====================================================> (110 + 3) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===================================>                  (75 + 39) / 114][Stage 25:========================================>             (85 + 29) / 114][Stage 25:===========================================>          (92 + 22) / 114][Stage 25:==============================================>      (101 + 13) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.421911614 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460396402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:=================================>                    (73 + 45) / 118][Stage 26:===================================>                  (78 + 40) / 118][Stage 26:===========================================>          (95 + 23) / 118][Stage 26:=================================================>    (109 + 9) / 118]                                                                                [Stage 27:=================================>                    (74 + 45) / 119][Stage 27:=====================================>                (82 + 37) / 119][Stage 27:=============================================>       (102 + 17) / 119][Stage 27:====================================================> (115 + 4) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.183460202 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422615097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=====================================>                (80 + 35) / 115][Stage 28:========================================>             (86 + 29) / 115][Stage 28:=============================================>        (96 + 19) / 115][Stage 28:===================================================>  (109 + 6) / 115][Stage 28:====================================================> (112 + 3) / 115]                                                                                [Stage 29:======================================>               (83 + 33) / 116][Stage 29:=============================================>        (97 + 19) / 116][Stage 29:===================================================>  (110 + 6) / 116][Stage 29:====================================================> (112 + 4) / 116][Stage 29:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.317261579 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496805021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:===============================>                      (66 + 47) / 113][Stage 30:========================================>             (84 + 29) / 113][Stage 30:===================================================>  (107 + 6) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:=============================>                        (62 + 52) / 114][Stage 31:====================================>                 (76 + 38) / 114][Stage 31:============================================>         (94 + 20) / 114][Stage 31:===============================================>     (102 + 12) / 114][Stage 31:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.531460542 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427620611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:====================================>                 (76 + 37) / 113][Stage 32:=========================================>            (86 + 27) / 113][Stage 32:===============================================>     (101 + 12) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:===================================>                  (74 + 40) / 114][Stage 33:=======================================>              (83 + 31) / 114][Stage 33:=============================================>        (96 + 18) / 114][Stage 33:==================================================>   (107 + 7) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.13240894 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405527158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:======================================>               (82 + 33) / 115][Stage 34:============================================>         (95 + 20) / 115][Stage 34:==================================================>   (107 + 8) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:======================================>               (82 + 34) / 116][Stage 35:============================================>         (96 + 20) / 116][Stage 35:==================================================>   (109 + 7) / 116][Stage 35:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.104507304 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42445958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=====================================>                (79 + 36) / 115][Stage 36:=========================================>            (88 + 27) / 115][Stage 36:==================================================>   (107 + 8) / 115][Stage 36:====================================================> (111 + 4) / 115]                                                                                [Stage 37:======================================>               (83 + 33) / 116][Stage 37:==========================================>           (92 + 24) / 116][Stage 37:==================================================>   (108 + 8) / 116][Stage 37:====================================================> (113 + 3) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.060810456 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496992659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:==============================>                       (68 + 52) / 120][Stage 38:========================================>             (90 + 30) / 120][Stage 38:==============================================>      (106 + 14) / 120][Stage 38:===================================================>  (115 + 5) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:===============================>                      (71 + 50) / 121][Stage 39:=========================================>            (94 + 27) / 121][Stage 39:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.217386389 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518123348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:===========================>                          (62 + 59) / 121][Stage 40:==============================>                       (69 + 52) / 121][Stage 40:==========================================>           (96 + 25) / 121][Stage 40:=================================================>    (112 + 9) / 121]                                                                                [Stage 41:===========================>                          (63 + 59) / 122][Stage 41:=================================>                    (75 + 47) / 122][Stage 41:===========================================>         (100 + 22) / 122][Stage 41:===============================================>     (110 + 12) / 122][Stage 41:===================================================>  (117 + 5) / 122][Stage 41:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.38294541 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429298535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:======================================>               (81 + 34) / 115][Stage 42:=======================================>              (84 + 31) / 115][Stage 42:==============================================>       (98 + 17) / 115][Stage 42:====================================================> (111 + 4) / 115]                                                                                [Stage 43:========================================>             (86 + 30) / 116][Stage 43:==========================================>           (92 + 24) / 116][Stage 43:==============================================>      (101 + 15) / 116][Stage 43:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.80147221 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453643275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===============================>                      (68 + 47) / 115][Stage 44:======================================>               (82 + 33) / 115][Stage 44:===============================================>     (103 + 12) / 115][Stage 44:===================================================>  (110 + 5) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:==============================>                       (65 + 51) / 116][Stage 45:=====================================>                (81 + 35) / 116][Stage 45:=========================================>            (89 + 27) / 116][Stage 45:====================================================> (112 + 4) / 116][Stage 45:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.341001424 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406139277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:>                                                       (0 + 0) / 115][Stage 46:======================================>               (81 + 34) / 115][Stage 46:===========================================>          (93 + 22) / 115][Stage 46:=================================================>    (106 + 9) / 115][Stage 46:===================================================>  (110 + 5) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:======================================>               (83 + 33) / 116][Stage 47:==========================================>           (91 + 25) / 116][Stage 47:==============================================>      (101 + 15) / 116][Stage 47:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.062786244 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454581057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:================================>                     (70 + 48) / 118][Stage 48:==================================>                   (75 + 43) / 118][Stage 48:======================================>               (84 + 34) / 118][Stage 48:===========================================>          (96 + 22) / 118][Stage 48:===============================================>     (106 + 12) / 118][Stage 48:=====================================================>(117 + 1) / 118]                                                                                [Stage 49:=================================>                    (74 + 45) / 119][Stage 49:=====================================>                (83 + 36) / 119][Stage 49:===========================================>          (96 + 23) / 119][Stage 49:================================================>    (109 + 10) / 119][Stage 49:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.506846241 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374252891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:======================================>               (82 + 33) / 115][Stage 50:===========================================>          (93 + 22) / 115][Stage 50:==================================================>   (107 + 8) / 115][Stage 50:=====================================================>(113 + 2) / 115]                                                                                [Stage 51:=======================================>              (85 + 31) / 116][Stage 51:============================================>         (95 + 21) / 116][Stage 51:=================================================>    (107 + 9) / 116][Stage 51:====================================================> (113 + 3) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.247028922 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38308274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=====================================>                (79 + 36) / 115][Stage 52:=====================================>                (80 + 35) / 115][Stage 52:=========================================>            (88 + 27) / 115][Stage 52:=================================================>    (106 + 9) / 115][Stage 52:=====================================================>(113 + 2) / 115]                                                                                [Stage 53:======================================>               (82 + 34) / 116][Stage 53:========================================>             (87 + 29) / 116][Stage 53:=============================================>       (100 + 16) / 116][Stage 53:===================================================>  (110 + 6) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.918884238 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460077733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==============================>                       (65 + 50) / 115][Stage 54:====================================>                 (77 + 38) / 115][Stage 54:===========================================>          (93 + 22) / 115][Stage 54:==================================================>   (108 + 7) / 115][Stage 54:=====================================================>(113 + 2) / 115]                                                                                [Stage 55:=================================>                    (71 + 45) / 116][Stage 55:=======================================>              (84 + 32) / 116][Stage 55:=============================================>        (97 + 19) / 116][Stage 55:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.784344853 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440276208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (60 + 53) / 113][Stage 56:==================================>                   (73 + 40) / 113][Stage 56:==========================================>           (88 + 25) / 113][Stage 56:==============================================>      (100 + 13) / 113][Stage 56:===================================================>  (108 + 5) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:================================>                     (69 + 45) / 114][Stage 57:========================================>             (85 + 29) / 114][Stage 57:===================================================>  (109 + 5) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.751982129 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440562267 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:=============================>                        (66 + 54) / 120][Stage 58:====================================>                 (82 + 38) / 120][Stage 58:==========================================>           (95 + 25) / 120][Stage 58:=================================================>    (111 + 9) / 120][Stage 58:====================================================> (116 + 4) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:=============================>                        (66 + 55) / 121][Stage 59:=================================>                    (76 + 45) / 121][Stage 59:=======================================>              (89 + 32) / 121][Stage 59:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 3.300603461 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463308022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:=============================>                        (65 + 55) / 120][Stage 60:=======================================>              (88 + 32) / 120][Stage 60:=================================================>    (111 + 9) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:=============================>                        (67 + 54) / 121][Stage 61:=====================================>                (85 + 36) / 121][Stage 61:===============================================>     (109 + 12) / 121][Stage 61:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.173256419 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427413943 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (73 + 45) / 118][Stage 62:======================================>               (84 + 34) / 118][Stage 62:============================================>         (97 + 21) / 118][Stage 62:===================================================>  (112 + 6) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:=====================================>                (83 + 36) / 119][Stage 63:===========================================>          (95 + 24) / 119][Stage 63:================================================>    (109 + 10) / 119][Stage 63:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.092111889 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379424545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===================================>                  (75 + 38) / 113][Stage 64:=========================================>            (87 + 26) / 113][Stage 64:=============================================>        (96 + 17) / 113][Stage 64:==================================================>   (105 + 8) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:=======================================>              (84 + 30) / 114][Stage 65:=============================================>        (96 + 18) / 114][Stage 65:===================================================>  (108 + 6) / 114][Stage 65:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.999370561 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477432286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (62 + 58) / 120][Stage 66:===============================>                      (70 + 50) / 120][Stage 66:=====================================>                (83 + 37) / 120][Stage 66:=================================================>    (111 + 9) / 120]                                                                                [Stage 67:===========================>                          (61 + 60) / 121][Stage 67:===============================>                      (71 + 50) / 121][Stage 67:=======================================>              (89 + 32) / 121][Stage 67:=================================================>    (112 + 9) / 121][Stage 67:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.194860438 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412496792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:====================================>                 (77 + 38) / 115][Stage 68:=========================================>            (88 + 27) / 115][Stage 68:==============================================>      (100 + 15) / 115][Stage 68:====================================================> (112 + 3) / 115]                                                                                [Stage 69:==============================>                       (66 + 50) / 116][Stage 69:==================================>                   (75 + 41) / 116][Stage 69:==========================================>           (91 + 25) / 116][Stage 69:==================================================>   (109 + 7) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.948041205 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392992828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=====================================>                (80 + 35) / 115][Stage 70:========================================>             (87 + 28) / 115][Stage 70:==============================================>      (100 + 15) / 115][Stage 70:===================================================>  (110 + 5) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:======================================>               (83 + 33) / 116][Stage 71:========================================>             (87 + 29) / 116][Stage 71:==============================================>      (102 + 14) / 116][Stage 71:=================================================>    (107 + 9) / 116][Stage 71:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.0941319 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422394924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:============================>                         (59 + 54) / 113][Stage 72:===================================>                  (74 + 39) / 113][Stage 72:============================================>         (93 + 20) / 113][Stage 72:===============================================>     (102 + 11) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:================================>                     (68 + 46) / 114][Stage 73:===========================================>          (91 + 23) / 114][Stage 73:==================================================>   (107 + 7) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.258619696 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385221262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=====================================>                (80 + 35) / 115][Stage 74:=======================================>              (85 + 30) / 115][Stage 74:============================================>         (95 + 20) / 115][Stage 74:==================================================>   (107 + 8) / 115]                                                                                [Stage 75:========================================>             (86 + 30) / 116][Stage 75:===========================================>          (94 + 22) / 116][Stage 75:==================================================>   (109 + 7) / 116][Stage 75:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.686771879 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421210179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (70 + 45) / 115][Stage 76:=======================================>              (84 + 31) / 115][Stage 76:=================================================>    (106 + 9) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:===================================>                  (76 + 40) / 116][Stage 77:========================================>             (88 + 28) / 116][Stage 77:================================================>    (106 + 10) / 116][Stage 77:=====================================================>(114 + 2) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.043596524 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452258741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (60 + 60) / 120][Stage 78:===============================>                      (70 + 50) / 120][Stage 78:========================================>             (90 + 30) / 120][Stage 78:===============================================>     (108 + 12) / 120]                                                                                [Stage 79:============================>                         (63 + 58) / 121][Stage 79:=================================>                    (75 + 46) / 121][Stage 79:==========================================>           (95 + 26) / 121][Stage 79:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.059953334 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369225288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==================================>                   (72 + 41) / 113][Stage 80:=======================================>              (82 + 31) / 113][Stage 80:=============================================>        (96 + 17) / 113][Stage 80:===================================================>  (108 + 5) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:=========================================>            (87 + 27) / 114][Stage 81:============================================>         (94 + 20) / 114][Stage 81:=================================================>    (105 + 9) / 114][Stage 81:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.942159845 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384841518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (73 + 45) / 118][Stage 82:====================================>                 (80 + 38) / 118][Stage 82:============================================>         (98 + 20) / 118][Stage 82:===============================================>     (106 + 12) / 118][Stage 82:=====================================================>(117 + 1) / 118]                                                                                [Stage 83:===================================>                  (79 + 40) / 119][Stage 83:=========================================>            (91 + 28) / 119][Stage 83:=============================================>       (102 + 17) / 119][Stage 83:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.186421121 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392886584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==================================>                   (73 + 42) / 115][Stage 84:=========================================>            (89 + 26) / 115][Stage 84:===============================================>     (104 + 11) / 115][Stage 84:===================================================>  (110 + 5) / 115]                                                                                [Stage 85:===================================>                  (76 + 40) / 116][Stage 85:=======================================>              (84 + 32) / 116][Stage 85:=============================================>        (98 + 18) / 116][Stage 85:===================================================>  (110 + 6) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.283201273 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430593547 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:=============================>                        (65 + 55) / 120][Stage 86:===================================>                  (79 + 41) / 120][Stage 86:============================================>        (100 + 20) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:===============================>                      (71 + 50) / 121][Stage 87:======================================>               (87 + 34) / 121][Stage 87:===============================================>     (109 + 12) / 121]                                                                                Time elapsed: 2.943280258 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410383641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:===============================>                      (66 + 47) / 113][Stage 88:==========================================>           (88 + 25) / 113][Stage 88:=============================================>        (96 + 17) / 113]                                                                                [Stage 89:===========================>                          (59 + 55) / 114][Stage 89:================================>                     (69 + 45) / 114][Stage 89:=========================================>            (88 + 26) / 114][Stage 89:==============================================>      (101 + 13) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.068131382 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41925031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (63 + 57) / 120][Stage 90:================================>                     (72 + 48) / 120][Stage 90:========================================>             (90 + 30) / 120][Stage 90:===============================================>     (108 + 12) / 120]                                                                                [Stage 91:===========================>                          (62 + 59) / 121][Stage 91:===============================>                      (71 + 50) / 121][Stage 91:=========================================>            (92 + 29) / 121][Stage 91:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.013757121 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381472506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:=================================>                    (74 + 44) / 118][Stage 92:======================================>               (85 + 33) / 118][Stage 92:===============================================>     (106 + 12) / 118][Stage 92:====================================================> (115 + 3) / 118][Stage 92:=====================================================>(117 + 1) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:=====================================>                (82 + 37) / 119][Stage 93:=======================================>              (88 + 31) / 119][Stage 93:===============================================>     (106 + 13) / 119][Stage 93:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.332753659 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42588447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:==============================>                       (69 + 52) / 121][Stage 94:=========================================>            (92 + 29) / 121][Stage 94:===============================================>     (108 + 13) / 121][Stage 94:=====================================================>(119 + 2) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:================================>                     (73 + 49) / 122][Stage 95:======================================>               (86 + 36) / 122][Stage 95:===============================================>     (109 + 13) / 122][Stage 95:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.098785732 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427740695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (61 + 60) / 121][Stage 96:================================>                     (72 + 49) / 121][Stage 96:==========================================>           (96 + 25) / 121][Stage 96:=================================================>    (112 + 9) / 121]                                                                                [Stage 97:============================>                         (65 + 57) / 122][Stage 97:==============================>                       (70 + 52) / 122][Stage 97:============================================>        (103 + 19) / 122][Stage 97:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 2.978019094 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422327978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:============================>                         (63 + 58) / 121][Stage 98:=====================================>                (83 + 38) / 121][Stage 98:=============================================>       (104 + 17) / 121][Stage 98:====================================================> (117 + 4) / 121]                                                                                [Stage 99:===========================>                          (61 + 61) / 122][Stage 99:==============================>                       (70 + 52) / 122][Stage 99:=========================================>            (93 + 29) / 122][Stage 99:==================================================>   (113 + 9) / 122][Stage 99:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.328699614 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34346716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:====================================>                (79 + 36) / 115][Stage 100:=====================================>               (81 + 34) / 115][Stage 100:=========================================>           (89 + 26) / 115][Stage 100:=================================================>   (108 + 7) / 115]                                                                                [Stage 101:=======================================>             (87 + 29) / 116][Stage 101:==========================================>          (93 + 23) / 116][Stage 101:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.63544305 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415269254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:============================>                        (64 + 57) / 121][Stage 102:====================================>                (84 + 37) / 121][Stage 102:==========================================>          (97 + 24) / 121][Stage 102:==================================================>  (116 + 5) / 121]                                                                                [Stage 103:============================>                        (65 + 57) / 122][Stage 103:================================>                    (75 + 47) / 122][Stage 103:=========================================>           (95 + 27) / 122][Stage 103:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.024729596 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375698644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:====================================>                (78 + 35) / 113][Stage 104:=========================================>           (89 + 24) / 113][Stage 104:==============================================>      (99 + 14) / 113][Stage 104:=================================================>   (106 + 7) / 113]                                                                                [Stage 105:====================================>                (79 + 35) / 114][Stage 105:=========================================>           (89 + 25) / 114][Stage 105:=============================================>      (100 + 14) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.046263483 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367328917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==================================>                  (74 + 39) / 113][Stage 106:========================================>            (86 + 27) / 113][Stage 106:===========================================>         (93 + 20) / 113][Stage 106:=================================================>   (105 + 8) / 113][Stage 106:===================================================> (109 + 4) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:=================================>                   (73 + 41) / 114][Stage 107:=======================================>             (85 + 29) / 114][Stage 107:==========================================>          (91 + 23) / 114][Stage 107:==============================================>     (102 + 12) / 114][Stage 107:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.231088161 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39619461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:====================================>                (82 + 36) / 118][Stage 108:=======================================>             (88 + 30) / 118][Stage 108:===============================================>    (108 + 10) / 118][Stage 108:====================================================>(116 + 2) / 118]                                                                                [Stage 109:=================================>                   (76 + 43) / 119][Stage 109:====================================>                (81 + 38) / 119][Stage 109:==========================================>          (96 + 23) / 119][Stage 109:================================================>    (110 + 9) / 119][Stage 109:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.178206885 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388114123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==================================>                  (74 + 41) / 115][Stage 110:======================================>              (84 + 31) / 115][Stage 110:===============================================>    (104 + 11) / 115][Stage 110:===================================================> (111 + 4) / 115]                                                                                [Stage 111:=====================================>               (83 + 33) / 116][Stage 111:============================================>        (98 + 18) / 116][Stage 111:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.778725042 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380471237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===============================>                     (68 + 47) / 115][Stage 112:======================================>              (83 + 32) / 115][Stage 112:=============================================>       (99 + 16) / 115][Stage 112:==================================================>  (109 + 6) / 115][Stage 112:====================================================>(114 + 1) / 115]                                                                                [Stage 113:=================================>                   (74 + 42) / 116][Stage 113:=========================================>           (90 + 26) / 116][Stage 113:===============================================>    (106 + 10) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.787320967 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371035907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=================================>                   (74 + 44) / 118][Stage 114:====================================>                (82 + 36) / 118][Stage 114:============================================>        (99 + 19) / 118][Stage 114:=================================================>   (110 + 8) / 118]                                                                                [Stage 115:================================>                    (74 + 45) / 119][Stage 115:==================================>                  (78 + 41) / 119][Stage 115:=========================================>           (94 + 25) / 119][Stage 115:=============================================>      (105 + 14) / 119][Stage 115:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.214839734 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355912197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=====================================>               (79 + 34) / 113][Stage 116:=========================================>           (89 + 24) / 113][Stage 116:============================================>        (94 + 19) / 113][Stage 116:==============================================>     (101 + 12) / 113][Stage 116:====================================================>(111 + 2) / 113]                                                                                [Stage 117:==================================>                  (74 + 40) / 114][Stage 117:========================================>            (88 + 26) / 114][Stage 117:=============================================>       (97 + 17) / 114][Stage 117:==================================================>  (108 + 6) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.054267708 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350516119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:====================================>                (78 + 35) / 113][Stage 118:==========================================>          (90 + 23) / 113][Stage 118:==============================================>     (100 + 13) / 113][Stage 118:===================================================> (110 + 3) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:==================================>                  (75 + 39) / 114][Stage 119:=======================================>             (86 + 28) / 114][Stage 119:==============================================>      (99 + 15) / 114][Stage 119:=================================================>   (107 + 7) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.325957187 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343217255 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=======================================>             (85 + 30) / 115][Stage 120:============================================>        (97 + 18) / 115][Stage 120:=================================================>   (107 + 8) / 115][Stage 120:====================================================>(114 + 1) / 115]                                                                                [Stage 121:=======================================>             (86 + 30) / 116][Stage 121:==========================================>          (92 + 24) / 116][Stage 121:================================================>    (107 + 9) / 116][Stage 121:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.700317632 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354771712 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:====================================>                (78 + 35) / 113][Stage 122:=========================================>           (88 + 25) / 113][Stage 122:=============================================>       (97 + 16) / 113][Stage 122:==================================================>  (107 + 6) / 113][Stage 122:===================================================> (110 + 3) / 113]                                                                                [Stage 123:======================================>              (83 + 31) / 114][Stage 123:===========================================>         (93 + 21) / 114][Stage 123:==============================================>     (101 + 13) / 114][Stage 123:===================================================> (111 + 3) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.364318905 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361477054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (73 + 45) / 118][Stage 124:====================================>                (81 + 37) / 118][Stage 124:============================================>        (99 + 19) / 118][Stage 124:=================================================>   (110 + 8) / 118][Stage 124:====================================================>(117 + 1) / 118]                                                                                [Stage 125:================================>                    (73 + 46) / 119][Stage 125:=================================>                   (75 + 44) / 119][Stage 125:=====================================>               (84 + 35) / 119][Stage 125:=============================================>      (105 + 14) / 119][Stage 125:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.169930549 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357289879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==================================>                  (73 + 40) / 113][Stage 126:=======================================>             (85 + 28) / 113][Stage 126:===========================================>         (92 + 21) / 113][Stage 126:==============================================>     (101 + 12) / 113][Stage 126:===================================================> (110 + 3) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:==================================>                  (75 + 39) / 114][Stage 127:========================================>            (87 + 27) / 114][Stage 127:===========================================>         (93 + 21) / 114][Stage 127:==============================================>     (102 + 12) / 114][Stage 127:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.215018992 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393045275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:================================>                    (70 + 43) / 113][Stage 128:========================================>            (87 + 26) / 113][Stage 128:===============================================>    (103 + 10) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:=================================>                   (71 + 43) / 114][Stage 129:======================================>              (82 + 32) / 114][Stage 129:=============================================>      (100 + 14) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.053697565 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336377231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=====================================>               (81 + 34) / 115][Stage 130:===========================================>         (94 + 21) / 115][Stage 130:==================================================>  (109 + 6) / 115]                                                                                [Stage 131:=======================================>             (86 + 30) / 116][Stage 131:==========================================>          (94 + 22) / 116][Stage 131:===============================================>    (105 + 11) / 116][Stage 131:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.642415548 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407891103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:===========================>                         (63 + 58) / 121][Stage 132:=================================>                   (76 + 45) / 121][Stage 132:===========================================>        (101 + 20) / 121][Stage 132:===================================================> (117 + 4) / 121]                                                                                [Stage 133:===========================>                         (64 + 58) / 122][Stage 133:==================================>                  (79 + 43) / 122][Stage 133:==========================================>          (98 + 24) / 122][Stage 133:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.024814325 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385333649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:===============================>                     (67 + 46) / 113][Stage 134:=======================================>             (85 + 28) / 113][Stage 134:==============================================>     (102 + 11) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (59 + 55) / 114][Stage 135:==============================>                      (65 + 49) / 114][Stage 135:=====================================>               (81 + 33) / 114][Stage 135:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.929561373 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370522121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (73 + 45) / 118][Stage 136:===================================>                 (80 + 38) / 118][Stage 136:========================================>            (91 + 27) / 118][Stage 136:============================================>       (101 + 17) / 118][Stage 136:===================================================> (114 + 4) / 118]                                                                                [Stage 137:=================================>                   (76 + 43) / 119][Stage 137:=======================================>             (88 + 31) / 119][Stage 137:============================================>       (101 + 18) / 119][Stage 137:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.121654952 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363698038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (73 + 45) / 118][Stage 138:====================================>                (81 + 37) / 118][Stage 138:=========================================>           (92 + 26) / 118][Stage 138:=============================================>      (104 + 14) / 118][Stage 138:====================================================>(116 + 2) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:=================================>                   (76 + 43) / 119][Stage 139:=======================================>             (89 + 30) / 119][Stage 139:===============================================>    (108 + 11) / 119][Stage 139:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.123084614 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356156733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=================================>                   (72 + 41) / 113][Stage 140:========================================>            (86 + 27) / 113][Stage 140:============================================>        (95 + 18) / 113][Stage 140:===================================================> (109 + 4) / 113][Stage 140:====================================================>(111 + 2) / 113]                                                                                [Stage 141:===================================>                 (76 + 38) / 114][Stage 141:==========================================>          (91 + 23) / 114][Stage 141:=============================================>       (98 + 16) / 114][Stage 141:==================================================>  (108 + 6) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.071392763 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3522974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===================================>                 (75 + 38) / 113][Stage 142:=====================================>               (81 + 32) / 113][Stage 142:============================================>        (94 + 19) / 113][Stage 142:==============================================>     (101 + 12) / 113][Stage 142:===================================================> (110 + 3) / 113]                                                                                [Stage 143:======================================>              (82 + 32) / 114][Stage 143:===========================================>         (93 + 21) / 114][Stage 143:==============================================>     (102 + 12) / 114][Stage 143:==================================================>  (108 + 6) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.206739657 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354047245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (80 + 33) / 113][Stage 144:===========================================>         (93 + 20) / 113][Stage 144:=============================================>       (98 + 15) / 113][Stage 144:==================================================>  (108 + 5) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:=================================>                   (72 + 42) / 114][Stage 145:=======================================>             (84 + 30) / 114][Stage 145:===========================================>         (94 + 20) / 114][Stage 145:==============================================>     (102 + 12) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.541402175 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398654169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (62 + 58) / 120][Stage 146:===============================>                     (72 + 48) / 120][Stage 146:========================================>            (92 + 28) / 120][Stage 146:=================================================>   (112 + 8) / 120]                                                                                [Stage 147:============================>                        (64 + 57) / 121][Stage 147:===============================>                     (71 + 50) / 121][Stage 147:=====================================>               (85 + 36) / 121][Stage 147:=============================================>      (105 + 16) / 121][Stage 147:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.041798736 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362868193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (74 + 44) / 118][Stage 148:====================================>                (82 + 36) / 118][Stage 148:===============================================>    (107 + 11) / 118][Stage 148:====================================================>(117 + 1) / 118]                                                                                [Stage 149:=================================>                   (75 + 44) / 119][Stage 149:====================================>                (83 + 36) / 119][Stage 149:=============================================>      (105 + 14) / 119][Stage 149:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.976312721 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391280984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:==============================>                      (70 + 50) / 120][Stage 150:=====================================>               (84 + 36) / 120][Stage 150:=================================================>   (111 + 9) / 120]                                                                                [Stage 151:===========================>                         (62 + 59) / 121][Stage 151:===============================>                     (73 + 48) / 121][Stage 151:=======================================>             (91 + 30) / 121][Stage 151:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.018850195 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386516269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:=================================>                   (72 + 41) / 113][Stage 152:========================================>            (87 + 26) / 113][Stage 152:=================================================>   (105 + 8) / 113]                                                                                [Stage 153:===========================>                         (60 + 54) / 114][Stage 153:=================================>                   (71 + 43) / 114][Stage 153:=======================================>             (85 + 29) / 114][Stage 153:==============================================>      (99 + 15) / 114][Stage 153:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.068553052 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360369304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:==================================>                  (76 + 42) / 118][Stage 154:=======================================>             (88 + 30) / 118][Stage 154:============================================>        (98 + 20) / 118][Stage 154:===================================================> (114 + 4) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:========================================>            (90 + 29) / 119][Stage 155:============================================>       (102 + 17) / 119][Stage 155:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.038930793 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37792878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (71 + 44) / 115][Stage 156:=======================================>             (86 + 29) / 115][Stage 156:============================================>        (97 + 18) / 115][Stage 156:===================================================> (112 + 3) / 115]                                                                                [Stage 157:=====================================>               (81 + 35) / 116][Stage 157:===========================================>         (96 + 20) / 116][Stage 157:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.726664422 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373573606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==============================>                      (66 + 49) / 115][Stage 158:======================================>              (83 + 32) / 115][Stage 158:=============================================>      (100 + 15) / 115][Stage 158:==================================================>  (109 + 6) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:================================>                    (71 + 45) / 116][Stage 159:======================================>              (85 + 31) / 116][Stage 159:=============================================>      (101 + 15) / 116][Stage 159:=================================================>   (108 + 8) / 116][Stage 159:===================================================> (113 + 3) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.148130919 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351294934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===================================>                 (76 + 37) / 113][Stage 160:=======================================>             (84 + 29) / 113][Stage 160:===========================================>         (93 + 20) / 113][Stage 160:=================================================>   (106 + 7) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:=======================================>             (85 + 29) / 114][Stage 161:============================================>        (96 + 18) / 114][Stage 161:==================================================>  (108 + 6) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.129724816 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38752123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (58 + 55) / 113][Stage 162:============================>                        (60 + 53) / 113][Stage 162:================================>                    (70 + 43) / 113][Stage 162:============================================>        (95 + 18) / 113][Stage 162:=================================================>   (106 + 7) / 113]                                                                                [Stage 163:=============================>                       (63 + 51) / 114][Stage 163:================================>                    (69 + 45) / 114][Stage 163:=========================================>           (89 + 25) / 114][Stage 163:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.981216334 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369264791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===============================>                     (68 + 47) / 115][Stage 164:=======================================>             (86 + 29) / 115][Stage 164:=============================================>       (99 + 16) / 115][Stage 164:===================================================> (112 + 3) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:==============================>                      (66 + 50) / 116][Stage 165:======================================>              (84 + 32) / 116][Stage 165:=============================================>      (101 + 15) / 116][Stage 165:==================================================>  (110 + 6) / 116][Stage 165:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.970756857 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401013252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:===========================>                         (63 + 57) / 120][Stage 166:=================================>                   (75 + 45) / 120][Stage 166:============================================>       (102 + 18) / 120][Stage 166:==================================================>  (114 + 6) / 120]                                                                                [Stage 167:============================>                        (64 + 57) / 121][Stage 167:================================>                    (75 + 46) / 121][Stage 167:===========================================>         (99 + 22) / 121][Stage 167:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.027943137 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410382182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:===========================>                         (63 + 58) / 121][Stage 168:====================================>                (83 + 38) / 121][Stage 168:===========================================>         (99 + 22) / 121]                                                                                [Stage 169:==========================>                          (61 + 61) / 122][Stage 169:=============================>                       (67 + 55) / 122][Stage 169:========================================>            (93 + 29) / 122][Stage 169:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 2.896955173 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337931788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:======================================>              (83 + 32) / 115][Stage 170:=========================================>           (89 + 26) / 115][Stage 170:===============================================>    (104 + 11) / 115][Stage 170:==================================================>  (109 + 6) / 115]                                                                                [Stage 171:======================================>              (84 + 32) / 116][Stage 171:==========================================>          (92 + 24) / 116][Stage 171:==============================================>     (104 + 12) / 116][Stage 171:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.936695537 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362274567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:=================================>                   (75 + 43) / 118][Stage 172:=======================================>             (87 + 31) / 118][Stage 172:============================================>        (98 + 20) / 118][Stage 172:===================================================> (114 + 4) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:=================================>                   (75 + 44) / 119][Stage 173:========================================>            (90 + 29) / 119][Stage 173:==============================================>     (106 + 13) / 119][Stage 173:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.343990705 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366763041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=====================================>               (80 + 33) / 113][Stage 174:=========================================>           (89 + 24) / 113][Stage 174:=============================================>       (98 + 15) / 113][Stage 174:==================================================>  (108 + 5) / 113]                                                                                [Stage 175:=====================================>               (81 + 33) / 114][Stage 175:============================================>        (95 + 19) / 114][Stage 175:================================================>    (105 + 9) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.921472601 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393195485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:===============================>                     (72 + 48) / 120][Stage 176:=======================================>             (89 + 31) / 120][Stage 176:===================================================> (116 + 4) / 120]                                                                                [Stage 177:==========================>                          (61 + 60) / 121][Stage 177:=============================>                       (68 + 53) / 121][Stage 177:=====================================>               (86 + 35) / 121][Stage 177:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 2.76339491 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377525034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===============================>                     (69 + 46) / 115][Stage 178:=======================================>             (85 + 30) / 115][Stage 178:=========================================>           (91 + 24) / 115][Stage 178:==================================================>  (109 + 6) / 115]                                                                                [Stage 179:===================================>                 (77 + 39) / 116][Stage 179:==========================================>          (93 + 23) / 116][Stage 179:==================================================>  (110 + 6) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.816929299 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344261647 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:======================================>              (83 + 32) / 115][Stage 180:===========================================>         (95 + 20) / 115][Stage 180:====================================================>(113 + 2) / 115]                                                                                [Stage 181:=======================================>             (87 + 29) / 116][Stage 181:============================================>        (98 + 18) / 116][Stage 181:=================================================>   (108 + 8) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.619364881 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384538516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==================================>                  (73 + 40) / 113][Stage 182:=======================================>             (84 + 29) / 113][Stage 182:=============================================>       (96 + 17) / 113][Stage 182:==============================================>     (101 + 12) / 113][Stage 182:==================================================>  (108 + 5) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:===================================>                 (77 + 37) / 114][Stage 183:========================================>            (87 + 27) / 114][Stage 183:=============================================>       (98 + 16) / 114][Stage 183:================================================>    (105 + 9) / 114][Stage 183:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.189600731 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384599616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==============================>                      (66 + 49) / 115][Stage 184:=====================================>               (81 + 34) / 115][Stage 184:=============================================>       (99 + 16) / 115][Stage 184:================================================>    (106 + 9) / 115][Stage 184:===================================================> (111 + 4) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:===================================>                 (77 + 39) / 116][Stage 185:===========================================>         (95 + 21) / 116][Stage 185:===============================================>    (105 + 11) / 116][Stage 185:==================================================>  (111 + 5) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.349913902 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362582805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (73 + 45) / 118][Stage 186:====================================>                (81 + 37) / 118][Stage 186:=======================================>             (88 + 30) / 118][Stage 186:=================================================>   (110 + 8) / 118][Stage 186:====================================================>(116 + 2) / 118][Stage 186:====================================================>(117 + 1) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:==================================>                  (77 + 42) / 119][Stage 187:=======================================>             (88 + 31) / 119][Stage 187:===========================================>        (100 + 19) / 119][Stage 187:=================================================>   (111 + 8) / 119][Stage 187:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.47171245 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41415861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (62 + 59) / 121][Stage 188:===============================>                     (71 + 50) / 121][Stage 188:===========================================>         (99 + 22) / 121][Stage 188:==================================================>  (115 + 6) / 121]                                                                                [Stage 189:===========================>                         (63 + 59) / 122][Stage 189:=================================>                   (77 + 45) / 122][Stage 189:==========================================>          (98 + 24) / 122][Stage 189:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.045460898 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382968549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==============================>                      (67 + 48) / 115][Stage 190:=====================================>               (81 + 34) / 115][Stage 190:===========================================>         (95 + 20) / 115][Stage 190:==================================================>  (109 + 6) / 115]                                                                                [Stage 191:===================================>                 (78 + 38) / 116][Stage 191:=========================================>           (91 + 25) / 116][Stage 191:================================================>    (107 + 9) / 116][Stage 191:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.803288917 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395231188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (61 + 60) / 121][Stage 192:============================>                        (66 + 55) / 121][Stage 192:======================================>              (88 + 33) / 121][Stage 192:==============================================>     (109 + 12) / 121]                                                                                [Stage 193:==========================>                          (61 + 61) / 122][Stage 193:===============================>                     (73 + 49) / 122][Stage 193:===========================================>         (99 + 23) / 122][Stage 193:===================================================> (118 + 4) / 122][Stage 193:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.040901237 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383806311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:===================================>                 (79 + 39) / 118][Stage 194:=====================================>               (83 + 35) / 118][Stage 194:===========================================>         (96 + 22) / 118][Stage 194:===============================================>    (108 + 10) / 118][Stage 194:====================================================>(117 + 1) / 118]                                                                                [Stage 195:=================================>                   (75 + 44) / 119][Stage 195:===================================>                 (80 + 39) / 119][Stage 195:==========================================>          (95 + 24) / 119][Stage 195:=================================================>   (111 + 8) / 119][Stage 195:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.538267188 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407493567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (62 + 58) / 120][Stage 196:=============================>                       (66 + 54) / 120][Stage 196:======================================>              (88 + 32) / 120][Stage 196:==================================================>  (114 + 6) / 120]                                                                                [Stage 197:============================>                        (64 + 57) / 121][Stage 197:================================>                    (75 + 46) / 121][Stage 197:==========================================>          (97 + 24) / 121][Stage 197:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.993382097 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37120883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:=================================>                   (75 + 43) / 118][Stage 198:=======================================>             (88 + 30) / 118][Stage 198:============================================>        (99 + 19) / 118][Stage 198:================================================>    (109 + 9) / 118][Stage 198:====================================================>(117 + 1) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:=================================>                   (76 + 43) / 119][Stage 199:======================================>              (86 + 33) / 119][Stage 199:==========================================>          (95 + 24) / 119][Stage 199:===============================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.254397691 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333787789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=======================================>             (85 + 30) / 115][Stage 200:=============================================>       (99 + 16) / 115][Stage 200:==================================================>  (110 + 5) / 115][Stage 200:====================================================>(114 + 1) / 115]                                                                                [Stage 201:======================================>              (85 + 31) / 116][Stage 201:==========================================>          (93 + 23) / 116][Stage 201:===============================================>    (106 + 10) / 116][Stage 201:===================================================> (113 + 3) / 116][Stage 201:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.338787818 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m53.620s
user	11m25.548s
sys	0m28.340s
