Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 05:31:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:31:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:31:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:31:28 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 05:31:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:31:41 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522053130-0419).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.339066104 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:==============================>                        (64 + 52) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.290179043 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  p artitionIndex = 45  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.658832418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=========================>                             (55 + 63) / 118][Stage 2:===============================>                       (67 + 51) / 118][Stage 2:==================================>                    (73 + 45) / 118][Stage 2:==================================>                    (74 + 44) / 118][Stage 2:====================================>                  (79 + 39) / 118][Stage 2:==========================================>            (91 + 27) / 118][Stage 2:==============================================>       (102 + 16) / 118][Stage 2:===================================================>   (111 + 7) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:====================================>                  (78 + 41) / 119][Stage 3:=========================================>             (90 + 29) / 119][Stage 3:==============================================>       (103 + 16) / 119][Stage 3:===================================================>   (111 + 8) / 119][Stage 3:=====================================================> (115 + 4) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.170812176 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  p artitionIndex = 95  OR  partitionIndex = 109 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.790692563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (60 + 61) / 121][Stage 4:============================>                          (63 + 58) / 121][Stage 4:===============================>                       (69 + 52) / 121][Stage 4:==================================>                    (75 + 46) / 121][Stage 4:===========================================>           (96 + 25) / 121][Stage 4:=================================================>    (111 + 10) / 121][Stage 4:=====================================================> (118 + 3) / 121]                                                                                [Stage 5:===========================>                           (61 + 61) / 122][Stage 5:============================>                          (64 + 58) / 122][Stage 5:==================================>                    (76 + 46) / 122][Stage 5:=====================================>                 (83 + 39) / 122][Stage 5:===========================================>           (97 + 25) / 122][Stage 5:================================================>     (110 + 12) / 122][Stage 5:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.985075225 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553443648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==================================>                    (70 + 43) / 113][Stage 6:===================================>                   (73 + 40) / 113][Stage 6:========================================>              (83 + 30) / 113][Stage 6:==========================================>            (88 + 25) / 113][Stage 6:=============================================>         (94 + 19) / 113][Stage 6:===============================================>      (100 + 13) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:=====================================>                 (78 + 36) / 114][Stage 7:========================================>              (84 + 30) / 114][Stage 7:==========================================>            (88 + 26) / 114][Stage 7:============================================>          (93 + 21) / 114][Stage 7:===============================================>       (99 + 15) / 114][Stage 7:==================================================>    (105 + 9) / 114][Stage 7:======================================================>(112 + 2) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.566750974 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233  OR   partitionIndex = 234  OR  partitionIndex = 220 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537739813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (79 + 36) / 115][Stage 8:=======================================>               (83 + 32) / 115][Stage 8:=========================================>             (87 + 28) / 115][Stage 8:============================================>          (93 + 22) / 115][Stage 8:===============================================>       (99 + 16) / 115][Stage 8:================================================>     (104 + 11) / 115][Stage 8:======================================================>(114 + 1) / 115]                                                                                [Stage 9:======================================>                (82 + 34) / 116][Stage 9:=========================================>             (88 + 28) / 116][Stage 9:===========================================>           (92 + 24) / 116][Stage 9:==============================================>        (98 + 18) / 116][Stage 9:================================================>     (104 + 12) / 116][Stage 9:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 4.01413617 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182  OR   partitionIndex = 183  OR  partitionIndex = 197 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587302407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:=====================================>                (79 + 34) / 113][Stage 10:========================================>             (84 + 29) / 113][Stage 10:============================================>         (93 + 20) / 113][Stage 10:==============================================>       (98 + 15) / 113][Stage 10:==================================================>   (105 + 8) / 113][Stage 10:====================================================> (109 + 4) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===================================>                  (75 + 39) / 114][Stage 11:=====================================>                (80 + 34) / 114][Stage 11:========================================>             (86 + 28) / 114][Stage 11:===========================================>          (92 + 22) / 114][Stage 11:==============================================>      (100 + 14) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.243290059 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  p artitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519004447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==================================>                   (73 + 40) / 113][Stage 12:=======================================>              (82 + 31) / 113][Stage 12:==========================================>           (88 + 25) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:====================================================> (110 + 3) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:===================================>                  (75 + 39) / 114][Stage 13:========================================>             (85 + 29) / 114][Stage 13:=========================================>            (87 + 27) / 114][Stage 13:=============================================>        (97 + 17) / 114][Stage 13:================================================>    (104 + 10) / 114][Stage 13:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.20060201 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR   partitionIndex = 216  OR  partitionIndex = 217 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.589476295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:===============================>                      (65 + 48) / 113][Stage 14:===================================>                  (75 + 38) / 113][Stage 14:=============================================>        (95 + 18) / 113][Stage 14:==================================================>   (106 + 7) / 113][Stage 14:====================================================> (110 + 3) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:=============================>                        (62 + 52) / 114][Stage 15:==================================>                   (73 + 41) / 114][Stage 15:========================================>             (85 + 29) / 114][Stage 15:=============================================>        (95 + 19) / 114][Stage 15:==================================================>   (106 + 8) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.29421052 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR   partitionIndex = 186  OR  partitionIndex = 187 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441284094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (79 + 36) / 115][Stage 16:======================================>               (83 + 32) / 115][Stage 16:============================================>         (95 + 20) / 115][Stage 16:===================================================>  (109 + 6) / 115][Stage 16:=====================================================>(113 + 2) / 115]                                                                                [Stage 17:========================================>             (86 + 30) / 116][Stage 17:=============================================>        (97 + 19) / 116][Stage 17:===============================================>     (104 + 12) / 116][Stage 17:==================================================>   (108 + 8) / 116][Stage 17:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.280110131 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR   partitionIndex = 184  OR  partitionIndex = 185 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.559470911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=========================>                            (57 + 63) / 120][Stage 18:=============================>                        (65 + 55) / 120][Stage 18:===============================>                      (71 + 49) / 120][Stage 18:==========================================>           (94 + 26) / 120][Stage 18:=================================================>    (111 + 9) / 120][Stage 18:====================================================> (116 + 4) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:=============================>                        (65 + 56) / 121][Stage 19:=====================================>                (83 + 38) / 121][Stage 19:==============================================>      (106 + 15) / 121][Stage 19:==================================================>   (113 + 8) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.94120264 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.665230443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===============================>                      (69 + 51) / 120][Stage 20:===================================>                  (78 + 42) / 120][Stage 20:===========================================>          (97 + 23) / 120][Stage 20:=================================================>    (111 + 9) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:================================>                     (72 + 49) / 121][Stage 21:=======================================>              (89 + 32) / 121][Stage 21:==================================================>   (113 + 8) / 121][Stage 21:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.590039124 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  p artitionIndex = 50  OR  partitionIndex = 36 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494511062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:==============================>                       (64 + 49) / 113][Stage 22:==================================>                   (73 + 40) / 113][Stage 22:==========================================>           (88 + 25) / 113][Stage 22:===============================================>     (101 + 12) / 113][Stage 22:==================================================>   (106 + 7) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:=============================>                        (63 + 51) / 114][Stage 23:===================================>                  (75 + 39) / 114][Stage 23:=============================================>        (95 + 19) / 114][Stage 23:====================================================> (111 + 3) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.294159985 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  p artitionIndex = 90  OR  partitionIndex = 91 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.551258622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:============================>                         (63 + 58) / 121][Stage 24:====================================>                 (82 + 39) / 121][Stage 24:============================================>        (102 + 19) / 121][Stage 24:=====================================================>(119 + 2) / 121]                                                                                [Stage 25:===========================>                          (62 + 60) / 122][Stage 25:==============================>                       (69 + 53) / 122][Stage 25:====================================>                 (83 + 39) / 122][Stage 25:=============================================>       (105 + 17) / 122][Stage 25:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.915794014 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43137078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=====================================>                (80 + 35) / 115][Stage 26:=======================================>              (85 + 30) / 115][Stage 26:==============================================>       (98 + 17) / 115][Stage 26:====================================================> (111 + 4) / 115]                                                                                [Stage 27:======================================>               (83 + 33) / 116][Stage 27:========================================>             (88 + 28) / 116][Stage 27:=============================================>        (98 + 18) / 116][Stage 27:===================================================>  (111 + 5) / 116][Stage 27:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.800647327 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 145 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.610130669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:===========================>                          (61 + 60) / 121][Stage 28:==============================>                       (68 + 53) / 121][Stage 28:=======================================>              (88 + 33) / 121][Stage 28:=============================================>       (104 + 17) / 121][Stage 28:===================================================>  (116 + 5) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:=============================>                        (66 + 56) / 122][Stage 29:=================================>                    (76 + 46) / 122][Stage 29:=========================================>            (93 + 29) / 122][Stage 29:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.72105019 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  p artitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458728076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===============================>                      (68 + 47) / 115][Stage 30:==========================================>           (90 + 25) / 115][Stage 30:===============================================>     (103 + 12) / 115][Stage 30:==================================================>   (107 + 8) / 115][Stage 30:==================================================>   (108 + 7) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:===============================>                      (67 + 49) / 116][Stage 31:====================================>                 (79 + 37) / 116][Stage 31:=========================================>            (90 + 26) / 116][Stage 31:===============================================>     (104 + 12) / 116][Stage 31:====================================================> (112 + 4) / 116][Stage 31:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 7.030945453 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471428721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (71 + 47) / 118][Stage 32:==================================>                   (75 + 43) / 118][Stage 32:==========================================>           (92 + 26) / 118][Stage 32:====================================================> (115 + 3) / 118]                                                                                [Stage 33:==================================>                   (76 + 43) / 119][Stage 33:=======================================>              (86 + 33) / 119][Stage 33:=============================================>       (102 + 17) / 119][Stage 33:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.364277735 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR   partitionIndex = 132  OR  partitionIndex = 133 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443488983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:======================================>               (85 + 33) / 118][Stage 34:==========================================>           (93 + 25) / 118][Stage 34:=================================================>    (109 + 9) / 118][Stage 34:=====================================================>(117 + 1) / 118]                                                                                [Stage 35:=================================>                    (73 + 46) / 119][Stage 35:====================================>                 (80 + 39) / 119][Stage 35:============================================>         (97 + 22) / 119][Stage 35:===============================================>     (106 + 13) / 119][Stage 35:===================================================>  (113 + 6) / 119][Stage 35:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.470537631 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501697548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:==================================>                   (75 + 43) / 118][Stage 36:=========================================>            (90 + 28) / 118][Stage 36:===============================================>     (105 + 13) / 118][Stage 36:====================================================> (115 + 3) / 118]                                                                                [Stage 37:=================================>                    (73 + 46) / 119][Stage 37:===================================>                  (78 + 41) / 119][Stage 37:==========================================>           (94 + 25) / 119][Stage 37:================================================>    (108 + 11) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.276655948 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 140 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44843792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:====================================>                 (77 + 36) / 113][Stage 38:===========================================>          (90 + 23) / 113][Stage 38:===============================================>     (101 + 12) / 113][Stage 38:==================================================>   (106 + 7) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:=================================>                    (71 + 43) / 114][Stage 39:======================================>               (81 + 33) / 114][Stage 39:==========================================>           (90 + 24) / 114][Stage 39:=============================================>        (97 + 17) / 114][Stage 39:====================================================> (110 + 4) / 114][Stage 39:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.6146762 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR   partitionIndex = 116  OR  partitionIndex = 72 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409798104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=====================================>                (79 + 36) / 115][Stage 40:==========================================>           (91 + 24) / 115][Stage 40:===============================================>     (104 + 11) / 115][Stage 40:===================================================>  (109 + 6) / 115][Stage 40:====================================================> (112 + 3) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:======================================>               (82 + 34) / 116][Stage 41:=========================================>            (89 + 27) / 116][Stage 41:===============================================>     (104 + 12) / 116][Stage 41:==================================================>   (108 + 8) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.33335103 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR   partitionIndex = 190  OR  partitionIndex = 191 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484064666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==================================>                   (72 + 41) / 113][Stage 42:==========================================>           (88 + 25) / 113][Stage 42:==============================================>       (97 + 16) / 113][Stage 42:===================================================>  (107 + 6) / 113][Stage 42:====================================================> (109 + 4) / 113][Stage 42:====================================================> (110 + 3) / 113]                                                                                [Stage 43:==================================>                   (73 + 41) / 114][Stage 43:========================================>             (86 + 28) / 114][Stage 43:==============================================>       (99 + 15) / 114][Stage 43:====================================================> (111 + 3) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.301324638 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  p artitionIndex = 13  OR  partitionIndex = 27 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39425771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=====================================>                (80 + 35) / 115][Stage 44:=======================================>              (84 + 31) / 115][Stage 44:============================================>         (94 + 21) / 115][Stage 44:==================================================>   (108 + 7) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:=====================================>                (81 + 35) / 116][Stage 45:========================================>             (87 + 29) / 116][Stage 45:=============================================>        (98 + 18) / 116][Stage 45:==================================================>   (109 + 7) / 116][Stage 45:====================================================> (113 + 3) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.055896178 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  p artitionIndex = 41  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44267668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (73 + 45) / 118][Stage 46:==================================>                   (76 + 42) / 118][Stage 46:=====================================>                (82 + 36) / 118][Stage 46:==========================================>           (92 + 26) / 118][Stage 46:=============================================>       (102 + 16) / 118][Stage 46:====================================================> (115 + 3) / 118]                                                                                [Stage 47:=================================>                    (74 + 45) / 119][Stage 47:==================================>                   (77 + 42) / 119][Stage 47:=========================================>            (91 + 28) / 119][Stage 47:============================================>        (100 + 19) / 119][Stage 47:================================================>    (109 + 10) / 119][Stage 47:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.901403095 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430408557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (73 + 42) / 115][Stage 48:========================================>             (87 + 28) / 115][Stage 48:================================================>    (105 + 10) / 115][Stage 48:====================================================> (111 + 4) / 115]                                                                                [Stage 49:===================================>                  (76 + 40) / 116][Stage 49:==========================================>           (92 + 24) / 116][Stage 49:=================================================>    (107 + 9) / 116][Stage 49:====================================================> (112 + 4) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.160062582 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR   partitionIndex = 150  OR  partitionIndex = 162 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42267435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=================================>                    (70 + 43) / 113][Stage 50:=====================================>                (79 + 34) / 113][Stage 50:============================================>         (94 + 19) / 113][Stage 50:================================================>    (103 + 10) / 113][Stage 50:===================================================>  (108 + 5) / 113][Stage 50:=====================================================>(111 + 2) / 113]                                                                                [Stage 51:========================================>             (85 + 29) / 114][Stage 51:==============================================>       (98 + 16) / 114][Stage 51:==================================================>   (107 + 7) / 114][Stage 51:=====================================================>(112 + 2) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.317121097 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  p artitionIndex = 78  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434575132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===============================>                      (67 + 48) / 115][Stage 52:===================================>                  (75 + 40) / 115][Stage 52:========================================>             (87 + 28) / 115][Stage 52:===============================================>     (103 + 12) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:=================================>                    (71 + 45) / 116][Stage 53:=======================================>              (84 + 32) / 116][Stage 53:===============================================>     (104 + 12) / 116][Stage 53:===================================================>  (110 + 6) / 116][Stage 53:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.41413742 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441348056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===============================>                      (67 + 48) / 115][Stage 54:======================================>               (81 + 34) / 115][Stage 54:===========================================>          (92 + 23) / 115][Stage 54:===============================================>     (103 + 12) / 115][Stage 54:====================================================> (112 + 3) / 115]                                                                                [Stage 55:====================================>                 (78 + 38) / 116][Stage 55:===========================================>          (94 + 22) / 116][Stage 55:================================================>    (106 + 10) / 116][Stage 55:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.980612692 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  p artitionIndex = 76  OR  partitionIndex = 62 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429449574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===============================>                      (68 + 47) / 115][Stage 56:====================================>                 (78 + 37) / 115][Stage 56:===============================================>     (103 + 12) / 115][Stage 56:================================================>    (105 + 10) / 115][Stage 56:==================================================>   (108 + 7) / 115][Stage 56:===================================================>  (110 + 5) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:===============================>                      (68 + 48) / 116][Stage 57:====================================>                 (79 + 37) / 116][Stage 57:==========================================>           (91 + 25) / 116][Stage 57:===============================================>     (104 + 12) / 116][Stage 57:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 4.103913294 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  p artitionIndex = 26  OR  partitionIndex = 38 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417064791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==============================>                       (66 + 49) / 115][Stage 58:===================================>                  (76 + 39) / 115][Stage 58:==========================================>           (90 + 25) / 115][Stage 58:=================================================>    (106 + 9) / 115][Stage 58:===================================================>  (110 + 5) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:===============================>                      (67 + 49) / 116][Stage 59:=====================================>                (81 + 35) / 116][Stage 59:============================================>         (96 + 20) / 116][Stage 59:===============================================>     (105 + 11) / 116][Stage 59:===================================================>  (110 + 6) / 116][Stage 59:=====================================================>(114 + 2) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.935685289 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR   partitionIndex = 114  OR  partitionIndex = 100 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417344672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:====================================>                 (77 + 36) / 113][Stage 60:=========================================>            (87 + 26) / 113][Stage 60:=============================================>        (95 + 18) / 113][Stage 60:==================================================>   (106 + 7) / 113][Stage 60:===================================================>  (108 + 5) / 113]                                                                                [Stage 61:=======================================>              (83 + 31) / 114][Stage 61:============================================>         (93 + 21) / 114][Stage 61:==============================================>       (99 + 15) / 114][Stage 61:====================================================> (110 + 4) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.246835533 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40842186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:====================================>                 (80 + 38) / 118][Stage 62:===========================================>          (95 + 23) / 118][Stage 62:==================================================>   (110 + 8) / 118]                                                                                [Stage 63:=================================>                    (74 + 45) / 119][Stage 63:=====================================>                (82 + 37) / 119][Stage 63:============================================>        (100 + 19) / 119][Stage 63:==================================================>   (112 + 7) / 119][Stage 63:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.408558744 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR   partitionIndex = 103  OR  partitionIndex = 117 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3914117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:==================================>                   (76 + 42) / 118][Stage 64:=======================================>              (87 + 31) / 118][Stage 64:===============================================>     (106 + 12) / 118][Stage 64:=====================================================>(117 + 1) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:==================================>                   (77 + 42) / 119][Stage 65:==========================================>           (93 + 26) / 119][Stage 65:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.145027315 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40805734 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:====================================>                 (77 + 36) / 113][Stage 66:=======================================>              (83 + 30) / 113][Stage 66:=============================================>        (95 + 18) / 113][Stage 66:===================================================>  (108 + 5) / 113][Stage 66:=====================================================>(111 + 2) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:====================================>                 (77 + 37) / 114][Stage 67:=========================================>            (87 + 27) / 114][Stage 67:=============================================>        (96 + 18) / 114][Stage 67:==================================================>   (106 + 8) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.369693669 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  p artitionIndex = 34  OR  partitionIndex = 35 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414607183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (73 + 42) / 115][Stage 68:=======================================>              (84 + 31) / 115][Stage 68:==============================================>      (100 + 15) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:=====================================>                (80 + 36) / 116][Stage 69:==========================================>           (92 + 24) / 116][Stage 69:===============================================>     (105 + 11) / 116][Stage 69:===================================================>  (110 + 6) / 116][Stage 69:====================================================> (113 + 3) / 116][Stage 69:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.29123787 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  p artitionIndex = 33  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449495147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:===============================>                      (70 + 50) / 120][Stage 70:=========================================>            (93 + 27) / 120][Stage 70:=================================================>    (111 + 9) / 120]                                                                                [Stage 71:===========================>                          (62 + 59) / 121][Stage 71:==============================>                       (69 + 52) / 121][Stage 71:========================================>             (91 + 30) / 121][Stage 71:===============================================>     (108 + 13) / 121][Stage 71:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.38068617 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  p artitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510780383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (70 + 45) / 115][Stage 72:=========================================>            (89 + 26) / 115][Stage 72:==============================================>      (101 + 14) / 115][Stage 72:====================================================> (111 + 4) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:================================>                     (69 + 47) / 116][Stage 73:=====================================>                (81 + 35) / 116][Stage 73:==============================================>       (99 + 17) / 116][Stage 73:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.904280209 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 149  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398218905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=================================>                    (73 + 45) / 118][Stage 74:=====================================>                (81 + 37) / 118][Stage 74:=========================================>            (90 + 28) / 118][Stage 74:===============================================>     (106 + 12) / 118][Stage 74:===================================================>  (113 + 5) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:======================================>               (85 + 34) / 119][Stage 75:=============================================>       (103 + 16) / 119][Stage 75:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.39173015 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  p artitionIndex = 37  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468101012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:==============================>                       (67 + 53) / 120][Stage 76:======================================>               (85 + 35) / 120][Stage 76:==================================================>   (113 + 7) / 120][Stage 76:=====================================================>(119 + 1) / 120]                                                                                [Stage 77:===========================>                          (62 + 59) / 121][Stage 77:=================================>                    (75 + 46) / 121][Stage 77:==========================================>           (95 + 26) / 121][Stage 77:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.321543863 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420521824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:================================>                     (69 + 44) / 113][Stage 78:=============================================>        (96 + 17) / 113][Stage 78:===================================================>  (107 + 6) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:==============================>                       (65 + 49) / 114][Stage 79:=====================================>                (80 + 34) / 114][Stage 79:==============================================>      (100 + 14) / 114][Stage 79:===================================================>  (108 + 6) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.509037366 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208  OR  partitionIndex = 194  OR   partitionIndex = 195  OR  partitionIndex = 209 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414285343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (61 + 59) / 120][Stage 80:===============================>                      (70 + 50) / 120][Stage 80:========================================>             (91 + 29) / 120][Stage 80:=================================================>    (111 + 9) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:=============================>                        (67 + 54) / 121][Stage 81:========================================>             (90 + 31) / 121][Stage 81:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.077466603 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423372214 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:===========================>                          (62 + 59) / 121][Stage 82:================================>                     (73 + 48) / 121][Stage 82:============================================>         (99 + 22) / 121][Stage 82:=====================================================>(119 + 2) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:================================>                     (74 + 48) / 122][Stage 83:==========================================>           (95 + 27) / 122][Stage 83:================================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.310075605 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84  OR  p artitionIndex = 70  OR  partitionIndex = 71 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365817192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===================================>                  (74 + 39) / 113][Stage 84:========================================>             (85 + 28) / 113][Stage 84:============================================>         (94 + 19) / 113][Stage 84:===============================================>     (102 + 11) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:=======================================>              (83 + 31) / 114][Stage 85:============================================>         (93 + 21) / 114][Stage 85:==============================================>      (100 + 14) / 114][Stage 85:===================================================>  (108 + 6) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.136989415 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  p artitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42476136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (63 + 58) / 121][Stage 86:=================================>                    (74 + 47) / 121][Stage 86:=========================================>            (93 + 28) / 121][Stage 86:====================================================> (117 + 4) / 121]                                                                                [Stage 87:============================>                         (65 + 57) / 122][Stage 87:==============================>                       (69 + 53) / 122][Stage 87:=======================================>              (89 + 33) / 122][Stage 87:================================================>    (112 + 10) / 122][Stage 87:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.3593526 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  p artitionIndex = 81  OR  partitionIndex = 82 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350554818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:======================================>               (82 + 33) / 115][Stage 88:===========================================>          (92 + 23) / 115][Stage 88:==============================================>      (101 + 14) / 115][Stage 88:===================================================>  (110 + 5) / 115][Stage 88:=====================================================>(114 + 1) / 115]                                                                                [Stage 89:=======================================>              (84 + 32) / 116][Stage 89:=============================================>        (98 + 18) / 116][Stage 89:====================================================> (113 + 3) / 116][Stage 89:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.033734872 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384397298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:=================================>                    (74 + 44) / 118][Stage 90:====================================>                 (80 + 38) / 118][Stage 90:=======================================>              (87 + 31) / 118][Stage 90:=============================================>       (101 + 17) / 118][Stage 90:===================================================>  (112 + 6) / 118]                                                                                [Stage 91:=================================>                    (73 + 46) / 119][Stage 91:==================================>                   (76 + 43) / 119][Stage 91:=====================================>                (83 + 36) / 119][Stage 91:==========================================>           (94 + 25) / 119][Stage 91:================================================>    (108 + 11) / 119][Stage 91:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.925274941 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208  OR   partitionIndex = 194  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421306008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:=============================>                        (65 + 55) / 120][Stage 92:====================================>                 (82 + 38) / 120][Stage 92:============================================>        (100 + 20) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:================================>                     (73 + 48) / 121][Stage 93:=====================================>                (85 + 36) / 121][Stage 93:================================================>    (111 + 10) / 121][Stage 93:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.33883685 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367430977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:====================================>                 (77 + 36) / 113][Stage 94:=========================================>            (87 + 26) / 113][Stage 94:==============================================>       (97 + 16) / 113][Stage 94:===================================================>  (107 + 6) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:====================================>                 (76 + 38) / 114][Stage 95:========================================>             (86 + 28) / 114][Stage 95:=============================================>        (97 + 17) / 114][Stage 95:===============================================>     (103 + 11) / 114][Stage 95:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.15469204 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  p artitionIndex = 80  OR  partitionIndex = 66 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379339159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (73 + 45) / 118][Stage 96:==================================>                   (76 + 42) / 118][Stage 96:=====================================>                (82 + 36) / 118][Stage 96:============================================>        (100 + 18) / 118][Stage 96:====================================================> (115 + 3) / 118]                                                                                [Stage 97:==================================>                   (76 + 43) / 119][Stage 97:=====================================>                (82 + 37) / 119][Stage 97:========================================>             (90 + 29) / 119][Stage 97:=============================================>       (102 + 17) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.496739949 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419901184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:===========================>                          (62 + 58) / 120][Stage 98:================================>                     (72 + 48) / 120][Stage 98:===========================================>          (97 + 23) / 120][Stage 98:====================================================> (117 + 3) / 120]                                                                                [Stage 99:===========================>                          (61 + 60) / 121][Stage 99:===============================>                      (70 + 51) / 121][Stage 99:======================================>               (86 + 35) / 121][Stage 99:===============================================>     (108 + 13) / 121][Stage 99:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.267642282 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406769537 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:==============================>                      (69 + 51) / 120][Stage 100:======================================>              (87 + 33) / 120][Stage 100:===============================================>    (110 + 10) / 120][Stage 100:====================================================>(119 + 1) / 120]                                                                                [Stage 101:==========================>                          (61 + 60) / 121][Stage 101:==============================>                      (70 + 51) / 121][Stage 101:===================================>                 (81 + 40) / 121][Stage 101:=============================================>      (106 + 15) / 121][Stage 101:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.330920846 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  p artitionIndex = 68  OR  partitionIndex = 69 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372253295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (72 + 46) / 118][Stage 102:==================================>                  (77 + 41) / 118][Stage 102:=======================================>             (88 + 30) / 118][Stage 102:============================================>       (102 + 16) / 118][Stage 102:==================================================>  (113 + 5) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:=====================================>               (84 + 35) / 119][Stage 103:============================================>        (99 + 20) / 119][Stage 103:=================================================>   (112 + 7) / 119][Stage 103:===================================================> (115 + 4) / 119][Stage 103:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.570889374 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  pa rtitionIndex = 22  OR  partitionIndex = 34 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402459701 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:============================>                        (60 + 53) / 113][Stage 104:==================================>                  (73 + 40) / 113][Stage 104:==========================================>          (91 + 22) / 113][Stage 104:==================================================>  (107 + 6) / 113][Stage 104:===================================================> (110 + 3) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:===========================>                         (59 + 55) / 114][Stage 105:================================>                    (69 + 45) / 114][Stage 105:======================================>              (83 + 31) / 114][Stage 105:=============================================>      (100 + 14) / 114][Stage 105:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.806965809 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412991019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:=============================>                       (62 + 51) / 113][Stage 106:====================================>                (77 + 36) / 113][Stage 106:=============================================>       (97 + 16) / 113][Stage 106:===================================================> (110 + 3) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:==============================>                      (66 + 48) / 114][Stage 107:==================================>                  (75 + 39) / 114][Stage 107:==========================================>          (92 + 22) / 114][Stage 107:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.479738874 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  p artitionIndex = 15  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440897538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:============================>                        (64 + 57) / 121][Stage 108:=================================>                   (76 + 45) / 121][Stage 108:==========================================>          (96 + 25) / 121][Stage 108:=================================================>   (114 + 7) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:===============================>                     (72 + 50) / 122][Stage 109:=====================================>               (86 + 36) / 122][Stage 109:==============================================>     (109 + 13) / 122][Stage 109:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.437892926 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360542634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (82 + 33) / 115][Stage 110:==========================================>          (92 + 23) / 115][Stage 110:==============================================>     (103 + 12) / 115]                                                                                [Stage 111:======================================>              (85 + 31) / 116][Stage 111:==========================================>          (94 + 22) / 116][Stage 111:=================================================>   (108 + 8) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.775079466 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358328706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:======================================>              (84 + 31) / 115][Stage 112:==========================================>          (92 + 23) / 115][Stage 112:===================================================> (111 + 4) / 115]                                                                                [Stage 113:=====================================>               (83 + 33) / 116][Stage 113:==========================================>          (94 + 22) / 116][Stage 113:==================================================>  (111 + 5) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.80161406 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR   partitionIndex = 164  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398686209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 60) / 120][Stage 114:=============================>                       (67 + 53) / 120][Stage 114:=====================================>               (84 + 36) / 120][Stage 114:============================================>       (103 + 17) / 120][Stage 114:===================================================> (116 + 4) / 120][Stage 114:====================================================>(119 + 1) / 120]                                                                                [Stage 115:==========================>                          (61 + 60) / 121][Stage 115:============================>                        (66 + 55) / 121][Stage 115:===================================>                 (81 + 40) / 121][Stage 115:===============================================>    (110 + 11) / 121][Stage 115:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.415233729 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR   partitionIndex = 187  OR  partitionIndex = 201 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346959946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=====================================>               (81 + 34) / 115][Stage 116:========================================>            (88 + 27) / 115][Stage 116:=============================================>      (100 + 15) / 115][Stage 116:===================================================> (111 + 4) / 115]                                                                                [Stage 117:=====================================>               (81 + 35) / 116][Stage 117:=========================================>           (90 + 26) / 116][Stage 117:=============================================>      (102 + 14) / 116][Stage 117:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.60875308 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  p artitionIndex = 111  OR  partitionIndex = 112 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367235658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:=====================================>               (83 + 35) / 118][Stage 118:===========================================>         (97 + 21) / 118][Stage 118:==================================================>  (112 + 6) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:=====================================>               (85 + 34) / 119][Stage 119:==========================================>          (95 + 24) / 119][Stage 119:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.146674661 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  p artitionIndex = 46  OR  partitionIndex = 32 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388435893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:===============================>                     (67 + 46) / 113][Stage 120:========================================>            (87 + 26) / 113][Stage 120:==============================================>     (101 + 12) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:===============================>                     (68 + 46) / 114][Stage 121:========================================>            (87 + 27) / 114][Stage 121:==============================================>     (103 + 11) / 114][Stage 121:===================================================> (110 + 4) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.314134534 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR   partitionIndex = 101  OR  partitionIndex = 115 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401240758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:===============================>                     (73 + 48) / 121][Stage 122:======================================>              (87 + 34) / 121][Stage 122:===============================================>    (111 + 10) / 121][Stage 122:===================================================> (118 + 3) / 121]                                                                                [Stage 123:===========================>                         (63 + 59) / 122][Stage 123:==============================>                      (70 + 52) / 122][Stage 123:======================================>              (89 + 33) / 122][Stage 123:===============================================>    (111 + 11) / 122][Stage 123:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.496166238 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  p artitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375216847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=================================>                   (72 + 43) / 115][Stage 124:========================================>            (87 + 28) / 115][Stage 124:============================================>        (97 + 18) / 115][Stage 124:==================================================>  (109 + 6) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:===============================>                     (68 + 48) / 116][Stage 125:=====================================>               (81 + 35) / 116][Stage 125:=========================================>           (90 + 26) / 116][Stage 125:==============================================>     (103 + 13) / 116][Stage 125:=================================================>   (109 + 7) / 116][Stage 125:===================================================> (113 + 3) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.539144901 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377970717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=================================>                   (72 + 43) / 115][Stage 126:==========================================>          (92 + 23) / 115][Stage 126:=============================================>      (101 + 14) / 115][Stage 126:=================================================>   (108 + 7) / 115][Stage 126:====================================================>(113 + 2) / 115]                                                                                [Stage 127:=================================>                   (74 + 42) / 116][Stage 127:========================================>            (88 + 28) / 116][Stage 127:============================================>       (100 + 16) / 116][Stage 127:=================================================>   (108 + 8) / 116][Stage 127:====================================================>(114 + 2) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.455451056 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370856171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:=================================>                   (75 + 43) / 118][Stage 128:=========================================>           (93 + 25) / 118][Stage 128:==============================================>     (105 + 13) / 118][Stage 128:===================================================> (115 + 3) / 118]                                                                                [Stage 129:=================================>                   (76 + 43) / 119][Stage 129:====================================>                (82 + 37) / 119][Stage 129:============================================>       (101 + 18) / 119][Stage 129:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.306311409 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  p artitionIndex = 77  OR  partitionIndex = 78 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396469741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:==============================>                      (66 + 47) / 113][Stage 130:======================================>              (83 + 30) / 113][Stage 130:==============================================>      (99 + 14) / 113][Stage 130:===================================================> (109 + 4) / 113]                                                                                [Stage 131:============================>                        (62 + 52) / 114][Stage 131:===================================>                 (76 + 38) / 114][Stage 131:===========================================>         (94 + 20) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.084739047 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR   partitionIndex = 105  OR  partitionIndex = 119 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485478636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 60) / 120][Stage 132:============================>                        (64 + 56) / 120][Stage 132:==================================>                  (78 + 42) / 120][Stage 132:============================================>       (103 + 17) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:================================>                    (75 + 46) / 121][Stage 133:========================================>            (93 + 28) / 121][Stage 133:=================================================>   (114 + 7) / 121][Stage 133:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.28059452 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR   partitionIndex = 148  OR  partitionIndex = 134 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393686112 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 61) / 121][Stage 134:=============================>                       (67 + 54) / 121][Stage 134:==================================>                  (78 + 43) / 121][Stage 134:==============================================>     (108 + 13) / 121][Stage 134:====================================================>(119 + 2) / 121]                                                                                [Stage 135:==========================>                          (61 + 61) / 122][Stage 135:============================>                        (65 + 57) / 122][Stage 135:=================================>                   (77 + 45) / 122][Stage 135:=============================================>      (107 + 15) / 122][Stage 135:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.235805622 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR   partitionIndex = 182  OR  partitionIndex = 183 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38460034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (61 + 52) / 113][Stage 136:================================>                    (70 + 43) / 113][Stage 136:==========================================>          (90 + 23) / 113][Stage 136:==================================================>  (108 + 5) / 113]                                                                                [Stage 137:============================>                        (62 + 52) / 114][Stage 137:=================================>                   (73 + 41) / 114][Stage 137:=======================================>             (85 + 29) / 114][Stage 137:=================================================>   (106 + 8) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.368897194 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397715286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:==============================>                      (68 + 52) / 120][Stage 138:===================================>                 (81 + 39) / 120][Stage 138:=================================================>   (111 + 9) / 120][Stage 138:====================================================>(118 + 2) / 120]                                                                                [Stage 139:=============================>                       (67 + 54) / 121][Stage 139:===================================>                 (81 + 40) / 121][Stage 139:==============================================>     (109 + 12) / 121][Stage 139:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.230548425 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394289235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (62 + 58) / 120][Stage 140:===============================>                     (72 + 48) / 120][Stage 140:===========================================>         (99 + 21) / 120][Stage 140:===================================================> (117 + 3) / 120]                                                                                [Stage 141:===========================>                         (63 + 58) / 121][Stage 141:===================================>                 (81 + 40) / 121][Stage 141:===========================================>        (101 + 20) / 121][Stage 141:==================================================>  (116 + 5) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.444016541 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372081616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (72 + 46) / 118][Stage 142:=================================>                   (75 + 43) / 118][Stage 142:====================================>                (81 + 37) / 118][Stage 142:=========================================>           (92 + 26) / 118][Stage 142:============================================>       (102 + 16) / 118][Stage 142:==================================================>  (113 + 5) / 118]                                                                                [Stage 143:================================>                    (73 + 46) / 119][Stage 143:=================================>                   (76 + 43) / 119][Stage 143:==========================================>          (95 + 24) / 119][Stage 143:==============================================>     (106 + 13) / 119][Stage 143:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.581504588 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR   partitionIndex = 213  OR  partitionIndex = 227 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362554343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:==================================>                  (76 + 42) / 118][Stage 144:=======================================>             (88 + 30) / 118][Stage 144:============================================>       (100 + 18) / 118][Stage 144:==================================================>  (113 + 5) / 118][Stage 144:=====================================================(118 + 0) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:====================================>                (81 + 38) / 119][Stage 145:======================================>              (87 + 32) / 119][Stage 145:============================================>        (99 + 20) / 119][Stage 145:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.398805263 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR   partitionIndex = 118  OR  partitionIndex = 104 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361552399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:==================================>                  (76 + 42) / 118][Stage 146:======================================>              (86 + 32) / 118][Stage 146:===============================================>    (107 + 11) / 118][Stage 146:===================================================> (114 + 4) / 118]                                                                                [Stage 147:=================================>                   (76 + 43) / 119][Stage 147:=======================================>             (88 + 31) / 119][Stage 147:================================================>    (110 + 9) / 119][Stage 147:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.235623586 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR   partitionIndex = 225  OR  partitionIndex = 226 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34204309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (83 + 32) / 115][Stage 148:=========================================>           (90 + 25) / 115][Stage 148:=================================================>   (107 + 8) / 115]                                                                                [Stage 149:=======================================>             (87 + 29) / 116][Stage 149:==============================================>     (104 + 12) / 116][Stage 149:==================================================>  (111 + 5) / 116][Stage 149:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.712735237 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334227742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:====================================>                (80 + 35) / 115][Stage 150:=======================================>             (85 + 30) / 115][Stage 150:=============================================>       (98 + 17) / 115][Stage 150:==================================================>  (110 + 5) / 115]                                                                                [Stage 151:========================================>            (88 + 28) / 116][Stage 151:============================================>       (100 + 16) / 116][Stage 151:===================================================> (112 + 4) / 116][Stage 151:====================================================>(114 + 2) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.885427708 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404811173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 61) / 121][Stage 152:=============================>                       (67 + 54) / 121][Stage 152:================================>                    (75 + 46) / 121][Stage 152:========================================>            (93 + 28) / 121][Stage 152:=================================================>   (113 + 8) / 121]                                                                                [Stage 153:============================>                        (65 + 57) / 122][Stage 153:==================================>                  (79 + 43) / 122][Stage 153:==========================================>          (98 + 24) / 122][Stage 153:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.262475703 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  p artitionIndex = 11  OR  partitionIndex = 25 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393483312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:============================>                        (64 + 57) / 121][Stage 154:===============================>                     (73 + 48) / 121][Stage 154:===========================================>        (101 + 20) / 121]                                                                                [Stage 155:==========================>                          (61 + 61) / 122][Stage 155:==============================>                      (70 + 52) / 122][Stage 155:========================================>            (94 + 28) / 122][Stage 155:===============================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.101732074 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213  OR  partitionIndex = 227  OR   partitionIndex = 228  OR  partitionIndex = 184 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377110014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:===============================>                     (67 + 46) / 113][Stage 156:=======================================>             (84 + 29) / 113][Stage 156:=================================================>   (106 + 7) / 113]                                                                                [Stage 157:============================>                        (61 + 53) / 114][Stage 157:================================>                    (70 + 44) / 114][Stage 157:==========================================>          (91 + 23) / 114][Stage 157:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.045383436 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  p artitionIndex = 29  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367598781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==============================>                      (67 + 48) / 115][Stage 158:===================================>                 (76 + 39) / 115][Stage 158:=========================================>           (91 + 24) / 115][Stage 158:=================================================>   (108 + 7) / 115][Stage 158:===================================================> (112 + 3) / 115]                                                                                [Stage 159:===============================>                     (69 + 47) / 116][Stage 159:=====================================>               (82 + 34) / 116][Stage 159:===========================================>         (95 + 21) / 116][Stage 159:===============================================>    (106 + 10) / 116][Stage 159:==================================================>  (111 + 5) / 116][Stage 159:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.110222324 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  p artitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398933572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:=============================>                       (66 + 54) / 120][Stage 160:========================================>            (91 + 29) / 120][Stage 160:=================================================>   (112 + 8) / 120][Stage 160:====================================================>(118 + 2) / 120]                                                                                [Stage 161:==========================>                          (61 + 60) / 121][Stage 161:============================>                        (65 + 56) / 121][Stage 161:====================================>                (84 + 37) / 121][Stage 161:=============================================>      (106 + 15) / 121][Stage 161:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.33410882 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  p artitionIndex = 99  OR  partitionIndex = 113 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404663412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:============================>                        (65 + 56) / 121][Stage 162:=================================>                   (77 + 44) / 121][Stage 162:===========================================>        (102 + 19) / 121][Stage 162:===================================================> (118 + 3) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:============================>                        (65 + 57) / 122][Stage 163:====================================>                (84 + 38) / 122][Stage 163:=========================================>           (95 + 27) / 122][Stage 163:=================================================>   (114 + 8) / 122][Stage 163:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.439668994 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  p artitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357606006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=====================================>               (80 + 33) / 113][Stage 164:==========================================>          (90 + 23) / 113][Stage 164:==============================================>     (102 + 11) / 113][Stage 164:===================================================> (109 + 4) / 113]                                                                                [Stage 165:===================================>                 (77 + 37) / 114][Stage 165:========================================>            (87 + 27) / 114][Stage 165:===========================================>         (94 + 20) / 114][Stage 165:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.974294007 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  p artitionIndex = 32  OR  partitionIndex = 33 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391612046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:=============================>                       (67 + 54) / 121][Stage 166:=======================================>             (90 + 31) / 121][Stage 166:=============================================>      (107 + 14) / 121]                                                                                [Stage 167:==========================>                          (61 + 61) / 122][Stage 167:==============================>                      (71 + 51) / 122][Stage 167:========================================>            (93 + 29) / 122][Stage 167:=================================================>   (114 + 8) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.14157996 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  p artitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393081452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (58 + 55) / 113][Stage 168:============================>                        (61 + 52) / 113][Stage 168:====================================>                (77 + 36) / 113][Stage 168:==============================================>     (102 + 11) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:===============================>                     (68 + 46) / 114][Stage 169:=======================================>             (85 + 29) / 114][Stage 169:==============================================>     (102 + 12) / 114][Stage 169:====================================================>(112 + 2) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.409098188 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334374684 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:====================================>                (80 + 35) / 115][Stage 170:=======================================>             (86 + 29) / 115][Stage 170:============================================>        (96 + 19) / 115][Stage 170:===============================================>    (104 + 11) / 115][Stage 170:==================================================>  (110 + 5) / 115]                                                                                [Stage 171:=======================================>             (86 + 30) / 116][Stage 171:=========================================>           (90 + 26) / 116][Stage 171:============================================>       (100 + 16) / 116][Stage 171:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.012080383 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR   partitionIndex = 136  OR  partitionIndex = 122 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374237005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:================================>                    (69 + 44) / 113][Stage 172:=====================================>               (81 + 32) / 113][Stage 172:===========================================>         (93 + 20) / 113][Stage 172:==================================================>  (107 + 6) / 113]                                                                                [Stage 173:============================>                        (62 + 52) / 114][Stage 173:==================================>                  (74 + 40) / 114][Stage 173:==========================================>          (91 + 23) / 114][Stage 173:=================================================>   (107 + 7) / 114][Stage 173:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.427571195 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  p artitionIndex = 85  OR  partitionIndex = 86 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365538975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=================================>                   (71 + 42) / 113][Stage 174:=====================================>               (81 + 32) / 113][Stage 174:===========================================>         (92 + 21) / 113][Stage 174:===============================================>    (103 + 10) / 113][Stage 174:===================================================> (110 + 3) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:====================================>                (78 + 36) / 114][Stage 175:=========================================>           (89 + 25) / 114][Stage 175:=============================================>       (98 + 16) / 114][Stage 175:==================================================>  (108 + 6) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.272617327 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  p artitionIndex = 28  OR  partitionIndex = 14 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376879055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:============================>                        (61 + 52) / 113][Stage 176:===================================>                 (75 + 38) / 113][Stage 176:============================================>        (95 + 18) / 113][Stage 176:===================================================> (110 + 3) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:==============================>                      (65 + 49) / 114][Stage 177:=====================================>               (81 + 33) / 114][Stage 177:=============================================>      (100 + 14) / 114][Stage 177:===================================================> (110 + 4) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.463982644 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389797741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (61 + 59) / 120][Stage 178:===============================>                     (71 + 49) / 120][Stage 178:=======================================>             (90 + 30) / 120][Stage 178:===============================================>    (109 + 11) / 120]                                                                                [Stage 179:===========================>                         (62 + 59) / 121][Stage 179:===============================>                     (73 + 48) / 121][Stage 179:=========================================>           (95 + 26) / 121][Stage 179:=================================================>   (114 + 7) / 121][Stage 179:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.273501732 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 147  OR  partitionIndex = 148 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341043608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (82 + 33) / 115][Stage 180:========================================>            (87 + 28) / 115][Stage 180:==========================================>          (93 + 22) / 115][Stage 180:==================================================>  (110 + 5) / 115]                                                                                [Stage 181:=======================================>             (87 + 29) / 116][Stage 181:===========================================>         (95 + 21) / 116][Stage 181:===================================================> (112 + 4) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.814606767 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  p artitionIndex = 12  OR  partitionIndex = 13 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419557586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (61 + 52) / 113][Stage 182:==================================>                  (73 + 40) / 113][Stage 182:===========================================>         (93 + 20) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:===========================>                         (59 + 55) / 114][Stage 183:=============================>                       (64 + 50) / 114][Stage 183:===================================>                 (77 + 37) / 114][Stage 183:==============================================>     (103 + 11) / 114][Stage 183:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.259436543 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR   partitionIndex = 214  OR  partitionIndex = 215 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356161821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:====================================>                (77 + 36) / 113][Stage 184:=========================================>           (89 + 24) / 113][Stage 184:==============================================>      (99 + 14) / 113][Stage 184:==================================================>  (107 + 6) / 113][Stage 184:===================================================> (110 + 3) / 113]                                                                                [Stage 185:=====================================>               (81 + 33) / 114][Stage 185:========================================>            (87 + 27) / 114][Stage 185:==============================================>     (102 + 12) / 114][Stage 185:===================================================> (111 + 3) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.136616949 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363486887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (71 + 44) / 115][Stage 186:====================================>                (80 + 35) / 115][Stage 186:============================================>        (96 + 19) / 115][Stage 186:====================================================>(113 + 2) / 115]                                                                                [Stage 187:======================================>              (84 + 32) / 116][Stage 187:=============================================>      (101 + 15) / 116][Stage 187:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.72459247 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  p artitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374965908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===============================>                     (69 + 46) / 115][Stage 188:======================================>              (83 + 32) / 115][Stage 188:=============================================>       (99 + 16) / 115][Stage 188:=================================================>   (107 + 8) / 115][Stage 188:==================================================>  (110 + 5) / 115][Stage 188:====================================================>(114 + 1) / 115]                                                                                [Stage 189:===============================>                     (69 + 47) / 116][Stage 189:===================================>                 (77 + 39) / 116][Stage 189:===========================================>         (96 + 20) / 116][Stage 189:==============================================>     (104 + 12) / 116][Stage 189:=================================================>   (108 + 8) / 116][Stage 189:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.848646374 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332924819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:====================================>                (80 + 35) / 115][Stage 190:=======================================>             (86 + 29) / 115][Stage 190:==========================================>          (93 + 22) / 115][Stage 190:=============================================>       (98 + 17) / 115][Stage 190:===================================================> (111 + 4) / 115]                                                                                [Stage 191:=====================================>               (82 + 34) / 116][Stage 191:========================================>            (88 + 28) / 116][Stage 191:=============================================>      (101 + 15) / 116][Stage 191:=================================================>   (108 + 8) / 116][Stage 191:==================================================>  (111 + 5) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.065237978 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.329583327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:======================================>              (83 + 32) / 115][Stage 192:============================================>        (97 + 18) / 115][Stage 192:==============================================>     (103 + 12) / 115][Stage 192:==================================================>  (110 + 5) / 115]                                                                                [Stage 193:======================================>              (85 + 31) / 116][Stage 193:===========================================>         (96 + 20) / 116][Stage 193:==================================================>  (111 + 5) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.835101443 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  p artitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366289978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:>                                                      (0 + 0) / 118][Stage 194:================================>                    (72 + 46) / 118][Stage 194:===================================>                 (78 + 40) / 118][Stage 194:==========================================>          (94 + 24) / 118][Stage 194:===============================================>    (108 + 10) / 118][Stage 194:====================================================>(117 + 1) / 118]                                                                                [Stage 195:================================>                    (74 + 45) / 119][Stage 195:====================================>                (81 + 38) / 119][Stage 195:========================================>            (92 + 27) / 119][Stage 195:=============================================>      (105 + 14) / 119][Stage 195:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.401962652 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96  OR   partitionIndex = 97  OR  partitionIndex = 111 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376541774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==============================>                      (67 + 48) / 115][Stage 196:=====================================>               (82 + 33) / 115][Stage 196:=============================================>       (98 + 17) / 115][Stage 196:===============================================>    (104 + 11) / 115][Stage 196:==================================================>  (109 + 6) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:==============================>                      (67 + 49) / 116][Stage 197:====================================>                (80 + 36) / 116][Stage 197:==========================================>          (94 + 22) / 116][Stage 197:===============================================>    (105 + 11) / 116][Stage 197:===================================================> (112 + 4) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.592163207 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR   partitionIndex = 64  OR  partitionIndex = 65 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399134654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:==============================>                      (64 + 49) / 113][Stage 198:====================================>                (78 + 35) / 113][Stage 198:==============================================>     (101 + 12) / 113][Stage 198:===================================================> (110 + 3) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (59 + 55) / 114][Stage 199:==============================>                      (65 + 49) / 114][Stage 199:===================================>                 (76 + 38) / 114][Stage 199:=============================================>      (100 + 14) / 114][Stage 199:===================================================> (111 + 3) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.518603267 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  p artitionIndex = 91  OR  partitionIndex = 105 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354124355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=================================>                   (75 + 43) / 118][Stage 200:======================================>              (85 + 33) / 118][Stage 200:=============================================>      (104 + 14) / 118][Stage 200:=================================================>   (111 + 7) / 118]                                                                                [Stage 201:================================>                    (73 + 46) / 119][Stage 201:===================================>                 (79 + 40) / 119][Stage 201:============================================>        (99 + 20) / 119][Stage 201:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.243261372 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 05:41:36 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.4:49302) dropped. RpcEnv already stopped.
17/05/22 05:41:36 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:59958) dropped. RpcEnv already stopped.
17/05/22 05:41:36 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.4:49302) dropped. RpcEnv already stopped.
17/05/22 05:41:36 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:59958) dropped. RpcEnv already stopped.

real	10m27.453s
user	11m50.980s
sys	0m54.808s
