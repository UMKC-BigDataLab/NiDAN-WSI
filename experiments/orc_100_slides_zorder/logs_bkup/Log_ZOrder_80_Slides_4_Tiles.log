Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 10:57:17 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:57:32 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:57:32 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:57:33 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 10:57:35 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:57:45 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522105734-0450).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.444204235 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.812937277 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.908266936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:========================>                              (53 + 68) / 121][Stage 2:===========================>                           (60 + 61) / 121][Stage 2:===========================>                           (61 + 60) / 121][Stage 2:==============================>                        (66 + 55) / 121][Stage 2:=====================================>                 (83 + 38) / 121][Stage 2:=============================================>         (99 + 22) / 121][Stage 2:====================================================>  (115 + 6) / 121]                                                                                [Stage 3:===========================>                           (61 + 61) / 122][Stage 3:=============================>                         (65 + 57) / 122][Stage 3:===============================>                       (69 + 53) / 122][Stage 3:==================================>                    (77 + 45) / 122][Stage 3:===========================================>           (96 + 26) / 122][Stage 3:==============================================>       (105 + 17) / 122][Stage 3:===================================================>   (114 + 8) / 122][Stage 3:====================================================>  (117 + 5) / 122]                                                                                Time elapsed: 5.019816325 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.686064873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (51 + 62) / 113][Stage 4:==========================>                            (55 + 58) / 113][Stage 4:===============================>                       (64 + 49) / 113][Stage 4:===================================>                   (72 + 41) / 113][Stage 4:=========================================>             (86 + 27) / 113][Stage 4:===============================================>       (98 + 15) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:======================================================>(111 + 2) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (56 + 58) / 114][Stage 5:============================>                          (59 + 55) / 114][Stage 5:=================================>                     (70 + 44) / 114][Stage 5:=========================================>             (85 + 29) / 114][Stage 5:===============================================>      (101 + 13) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.966772512 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.607940709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:===========================>                           (57 + 56) / 113][Stage 6:==================================>                    (70 + 43) / 113][Stage 6:======================================>                (80 + 33) / 113][Stage 6:================================================>      (99 + 14) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:=====================================================> (109 + 4) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:===============================>                       (66 + 48) / 114][Stage 7:===================================>                   (73 + 41) / 114][Stage 7:=========================================>             (85 + 29) / 114][Stage 7:==============================================>        (96 + 18) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.507746797 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528417664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==================================>                    (70 + 43) / 113][Stage 8:====================================>                  (76 + 37) / 113][Stage 8:========================================>              (84 + 29) / 113][Stage 8:==============================================>        (95 + 18) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:==================================================>    (104 + 9) / 113][Stage 8:====================================================>  (108 + 5) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:====================================>                  (76 + 38) / 114][Stage 9:=======================================>               (82 + 32) / 114][Stage 9:============================================>          (93 + 21) / 114][Stage 9:===============================================>      (100 + 14) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:=====================================================> (110 + 4) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.281074457 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.616620719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (60 + 61) / 121][Stage 10:=============================>                        (67 + 54) / 121][Stage 10:=================================>                    (74 + 47) / 121][Stage 10:=====================================>                (85 + 36) / 121][Stage 10:===========================================>          (97 + 24) / 121][Stage 10:================================================>    (110 + 11) / 121][Stage 10:=====================================================>(119 + 2) / 121]                                                                                [Stage 11:==========================>                           (60 + 62) / 122][Stage 11:=============================>                        (66 + 56) / 122][Stage 11:===============================>                      (71 + 51) / 122][Stage 11:======================================>               (88 + 34) / 122][Stage 11:============================================>        (102 + 20) / 122][Stage 11:================================================>    (111 + 11) / 122][Stage 11:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.627992098 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550938804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:====================================>                 (79 + 39) / 118][Stage 12:==========================================>           (93 + 25) / 118][Stage 12:=============================================>       (102 + 16) / 118][Stage 12:===================================================>  (112 + 6) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:====================================>                 (81 + 38) / 119][Stage 13:========================================>             (90 + 29) / 119][Stage 13:===================================================>  (113 + 6) / 119][Stage 13:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.926518054 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538280535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==============================>                       (65 + 50) / 115][Stage 14:==================================>                   (74 + 41) / 115][Stage 14:==========================================>           (90 + 25) / 115][Stage 14:=================================================>    (106 + 9) / 115][Stage 14:====================================================> (111 + 4) / 115]                                                                                [Stage 15:================================>                     (70 + 46) / 116][Stage 15:=======================================>              (84 + 32) / 116][Stage 15:==========================================>           (92 + 24) / 116][Stage 15:==============================================>      (101 + 15) / 116][Stage 15:==================================================>   (108 + 8) / 116][Stage 15:====================================================> (113 + 3) / 116][Stage 15:=====================================================>(114 + 2) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.078715764 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49619186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=================================>                    (70 + 43) / 113][Stage 16:====================================>                 (76 + 37) / 113][Stage 16:=======================================>              (83 + 30) / 113][Stage 16:===========================================>          (92 + 21) / 113][Stage 16:===================================================>  (107 + 6) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:=================================>                    (71 + 43) / 114][Stage 17:=======================================>              (84 + 30) / 114][Stage 17:===========================================>          (92 + 22) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:===================================================>  (109 + 5) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.782352296 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507525071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==============================>                       (65 + 50) / 115][Stage 18:==================================>                   (74 + 41) / 115][Stage 18:=====================================>                (80 + 35) / 115][Stage 18:=============================================>        (96 + 19) / 115][Stage 18:================================================>    (105 + 10) / 115][Stage 18:====================================================> (112 + 3) / 115]                                                                                [Stage 19:===============================>                      (68 + 48) / 116][Stage 19:=====================================>                (80 + 36) / 116][Stage 19:============================================>         (96 + 20) / 116][Stage 19:===============================================>     (103 + 13) / 116][Stage 19:================================================>    (106 + 10) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.45879504 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548757426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=========================>                            (56 + 64) / 120][Stage 20:===========================>                          (61 + 59) / 120][Stage 20:===================================>                  (78 + 42) / 120][Stage 20:==========================================>           (94 + 26) / 120][Stage 20:=============================================>       (104 + 16) / 120][Stage 20:==================================================>   (113 + 7) / 120][Stage 20:=====================================================>(118 + 2) / 120]                                                                                [Stage 21:==========================>                           (59 + 62) / 121][Stage 21:=============================>                        (67 + 54) / 121][Stage 21:===================================>                  (80 + 41) / 121][Stage 21:=============================================>       (104 + 17) / 121][Stage 21:================================================>    (111 + 10) / 121][Stage 21:===================================================>  (115 + 6) / 121][Stage 21:====================================================> (118 + 3) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.342732198 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485693314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===============================>                      (68 + 47) / 115][Stage 22:=====================================>                (79 + 36) / 115][Stage 22:============================================>         (94 + 21) / 115][Stage 22:================================================>    (105 + 10) / 115][Stage 22:=====================================================>(113 + 2) / 115]                                                                                [Stage 23:===================================>                  (77 + 39) / 116][Stage 23:===========================================>          (94 + 22) / 116][Stage 23:=================================================>    (107 + 9) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.064221314 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524979128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:==============================>                       (69 + 52) / 121][Stage 24:======================================>               (87 + 34) / 121][Stage 24:==========================================>           (95 + 26) / 121][Stage 24:===============================================>     (109 + 12) / 121][Stage 24:==================================================>   (113 + 8) / 121][Stage 24:=====================================================>(120 + 1) / 121]                                                                                [Stage 25:============================>                         (64 + 58) / 122][Stage 25:==================================>                   (79 + 43) / 122][Stage 25:===========================================>          (98 + 24) / 122][Stage 25:================================================>    (111 + 11) / 122][Stage 25:==================================================>   (113 + 9) / 122][Stage 25:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.212913461 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477404889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (70 + 45) / 115][Stage 26:======================================>               (81 + 34) / 115][Stage 26:=============================================>        (97 + 18) / 115][Stage 26:==================================================>   (107 + 8) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:================================>                     (70 + 46) / 116][Stage 27:========================================>             (86 + 30) / 116][Stage 27:===============================================>     (103 + 13) / 116][Stage 27:=====================================================>(114 + 2) / 116][Stage 27:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.026862212 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433745992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=================================>                    (71 + 42) / 113][Stage 28:======================================>               (81 + 32) / 113][Stage 28:===========================================>          (91 + 22) / 113][Stage 28:===============================================>      (99 + 14) / 113][Stage 28:================================================>    (103 + 10) / 113][Stage 28:==================================================>   (105 + 8) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:=================================>                    (70 + 44) / 114][Stage 29:=====================================>                (79 + 35) / 114][Stage 29:===========================================>          (91 + 23) / 114][Stage 29:===============================================>     (102 + 12) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.740259348 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497944807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:===========================>                          (61 + 59) / 120][Stage 30:================================>                     (72 + 48) / 120][Stage 30:============================================>        (100 + 20) / 120][Stage 30:=================================================>    (111 + 9) / 120]                                                                                [Stage 31:==========================>                           (60 + 61) / 121][Stage 31:=============================>                        (67 + 54) / 121][Stage 31:=====================================>                (83 + 38) / 121][Stage 31:==============================================>      (106 + 15) / 121][Stage 31:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.599748173 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424260185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===================================>                  (74 + 39) / 113][Stage 32:========================================>             (84 + 29) / 113][Stage 32:=============================================>        (96 + 17) / 113][Stage 32:================================================>    (103 + 10) / 113][Stage 32:====================================================> (109 + 4) / 113]                                                                                [Stage 33:====================================>                 (77 + 37) / 114][Stage 33:==========================================>           (89 + 25) / 114][Stage 33:==============================================>       (98 + 16) / 114][Stage 33:==================================================>   (107 + 7) / 114][Stage 33:====================================================> (110 + 4) / 114][Stage 33:=====================================================>(112 + 2) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.142135047 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437132657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (70 + 43) / 113][Stage 34:=========================================>            (86 + 27) / 113][Stage 34:===========================================>          (92 + 21) / 113][Stage 34:===============================================>     (101 + 12) / 113][Stage 34:====================================================> (109 + 4) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:=======================================>              (84 + 30) / 114][Stage 35:============================================>         (93 + 21) / 114][Stage 35:================================================>    (104 + 10) / 114][Stage 35:====================================================> (110 + 4) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.492360053 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479673674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:=============================>                        (66 + 54) / 120][Stage 36:====================================>                 (82 + 38) / 120][Stage 36:=============================================>       (103 + 17) / 120][Stage 36:===================================================>  (114 + 6) / 120][Stage 36:====================================================> (116 + 4) / 120][Stage 36:====================================================> (117 + 3) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:================================>                     (73 + 48) / 121][Stage 37:===========================================>          (97 + 24) / 121][Stage 37:==================================================>   (113 + 8) / 121][Stage 37:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.301561278 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516739607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:===========================>                          (62 + 59) / 121][Stage 38:==================================>                   (77 + 44) / 121][Stage 38:==============================================>      (107 + 14) / 121][Stage 38:====================================================> (117 + 4) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:=============================>                        (66 + 56) / 122][Stage 39:==================================>                   (77 + 45) / 122][Stage 39:===========================================>         (101 + 21) / 122][Stage 39:===================================================>  (117 + 5) / 122][Stage 39:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.725846686 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478474495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:============================>                         (60 + 53) / 113][Stage 40:===================================>                  (74 + 39) / 113][Stage 40:=============================================>        (96 + 17) / 113][Stage 40:===================================================>  (108 + 5) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:==============================>                       (65 + 49) / 114][Stage 41:======================================>               (81 + 33) / 114][Stage 41:==============================================>      (101 + 13) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.328887027 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.62204616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:================================>                     (72 + 49) / 121][Stage 42:=====================================>                (84 + 37) / 121][Stage 42:=============================================>       (105 + 16) / 121][Stage 42:=====================================================>(119 + 2) / 121]                                                                                [Stage 43:=============================>                        (66 + 56) / 122][Stage 43:==================================>                   (79 + 43) / 122][Stage 43:==========================================>           (95 + 27) / 122][Stage 43:==================================================>   (115 + 7) / 122][Stage 43:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.615158721 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424605029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:====================================>                 (77 + 38) / 115][Stage 44:=========================================>            (88 + 27) / 115][Stage 44:==============================================>       (99 + 16) / 115][Stage 44:====================================================> (112 + 3) / 115]                                                                                [Stage 45:==================================>                   (75 + 41) / 116][Stage 45:========================================>             (86 + 30) / 116][Stage 45:==============================================>      (101 + 15) / 116][Stage 45:===================================================>  (110 + 6) / 116][Stage 45:====================================================> (113 + 3) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.706653266 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411373799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (72 + 46) / 118][Stage 46:===================================>                  (77 + 41) / 118][Stage 46:===========================================>          (94 + 24) / 118][Stage 46:===============================================>     (105 + 13) / 118][Stage 46:=====================================================>(117 + 1) / 118]                                                                                [Stage 47:=================================>                    (73 + 46) / 119][Stage 47:==================================>                   (76 + 43) / 119][Stage 47:========================================>             (90 + 29) / 119][Stage 47:============================================>        (101 + 18) / 119][Stage 47:==================================================>   (112 + 7) / 119][Stage 47:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.6010303 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45858218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (73 + 45) / 118][Stage 48:===================================>                  (77 + 41) / 118][Stage 48:=======================================>              (87 + 31) / 118][Stage 48:============================================>        (100 + 18) / 118][Stage 48:==================================================>   (111 + 7) / 118]                                                                                [Stage 49:=================================>                    (74 + 45) / 119][Stage 49:===================================>                  (78 + 41) / 119][Stage 49:======================================>               (85 + 34) / 119][Stage 49:============================================>         (99 + 20) / 119][Stage 49:==================================================>   (111 + 8) / 119][Stage 49:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.684511078 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43460476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (60 + 53) / 113][Stage 50:=================================>                    (70 + 43) / 113][Stage 50:=========================================>            (86 + 27) / 113][Stage 50:===================================================>  (107 + 6) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:==============================>                       (64 + 50) / 114][Stage 51:========================================>             (85 + 29) / 114][Stage 51:==================================================>   (106 + 8) / 114][Stage 51:=====================================================>(112 + 2) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.691293129 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374340008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (81 + 34) / 115][Stage 52:==========================================>           (90 + 25) / 115][Stage 52:===============================================>     (104 + 11) / 115][Stage 52:====================================================> (111 + 4) / 115]                                                                                [Stage 53:=======================================>              (84 + 32) / 116][Stage 53:=============================================>        (97 + 19) / 116][Stage 53:================================================>    (106 + 10) / 116][Stage 53:===================================================>  (110 + 6) / 116][Stage 53:=====================================================>(114 + 2) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.398138874 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381706175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=====================================>                (80 + 35) / 115][Stage 54:========================================>             (87 + 28) / 115][Stage 54:==============================================>       (98 + 17) / 115][Stage 54:====================================================> (111 + 4) / 115]                                                                                [Stage 55:=======================================>              (85 + 31) / 116][Stage 55:==============================================>       (99 + 17) / 116][Stage 55:==================================================>   (108 + 8) / 116][Stage 55:===================================================>  (110 + 6) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.037552267 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395513008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===================================>                  (74 + 39) / 113][Stage 56:=======================================>              (82 + 31) / 113][Stage 56:=============================================>        (95 + 18) / 113][Stage 56:=================================================>    (104 + 9) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:=======================================>              (83 + 31) / 114][Stage 57:===========================================>          (91 + 23) / 114][Stage 57:==============================================>      (101 + 13) / 114][Stage 57:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.010648126 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401472153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==================================>                   (73 + 40) / 113][Stage 58:=====================================>                (79 + 34) / 113][Stage 58:===========================================>          (92 + 21) / 113][Stage 58:==================================================>   (106 + 7) / 113][Stage 58:====================================================> (110 + 3) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:======================================>               (82 + 32) / 114][Stage 59:=============================================>        (97 + 17) / 114][Stage 59:===================================================>  (108 + 6) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.220517575 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412689943 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==============================>                       (64 + 51) / 115][Stage 60:=================================>                    (71 + 44) / 115][Stage 60:=======================================>              (85 + 30) / 115][Stage 60:=============================================>        (97 + 18) / 115][Stage 60:==================================================>   (108 + 7) / 115][Stage 60:===================================================>  (109 + 6) / 115][Stage 60:===================================================>  (110 + 5) / 115][Stage 60:====================================================> (112 + 3) / 115]                                                                                [Stage 61:=================================>                    (71 + 45) / 116][Stage 61:=========================================>            (90 + 26) / 116][Stage 61:===============================================>     (103 + 13) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.512399917 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43086786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:=======================================>              (86 + 32) / 118][Stage 62:=============================================>        (99 + 19) / 118][Stage 62:===================================================>  (113 + 5) / 118]                                                                                [Stage 63:==================================>                   (75 + 44) / 119][Stage 63:=====================================>                (82 + 37) / 119][Stage 63:============================================>         (97 + 22) / 119][Stage 63:================================================>    (109 + 10) / 119][Stage 63:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.445282843 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455534262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:================================>                     (72 + 48) / 120][Stage 64:==========================================>           (94 + 26) / 120][Stage 64:==================================================>   (113 + 7) / 120][Stage 64:=====================================================>(119 + 1) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:===============================>                      (71 + 50) / 121][Stage 65:=====================================>                (83 + 38) / 121][Stage 65:===========================================>         (100 + 21) / 121][Stage 65:====================================================> (118 + 3) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.654309753 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41788549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:==================================>                   (76 + 42) / 118][Stage 66:=========================================>            (90 + 28) / 118][Stage 66:===============================================>     (105 + 13) / 118][Stage 66:=====================================================>(117 + 1) / 118]                                                                                [Stage 67:==================================>                   (75 + 44) / 119][Stage 67:======================================>               (85 + 34) / 119][Stage 67:=============================================>       (103 + 16) / 119][Stage 67:=====================================================>(117 + 2) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.439629588 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364072783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (82 + 33) / 115][Stage 68:========================================>             (87 + 28) / 115][Stage 68:=============================================>        (96 + 19) / 115][Stage 68:===============================================>     (104 + 11) / 115][Stage 68:==================================================>   (107 + 8) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:==========================================>           (92 + 24) / 116][Stage 69:===============================================>     (103 + 13) / 116][Stage 69:===================================================>  (110 + 6) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.127627695 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38357896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (83 + 32) / 115][Stage 70:=========================================>            (89 + 26) / 115][Stage 70:==============================================>      (101 + 14) / 115][Stage 70:===================================================>  (109 + 6) / 115]                                                                                [Stage 71:=======================================>              (85 + 31) / 116][Stage 71:============================================>         (96 + 20) / 116][Stage 71:================================================>    (106 + 10) / 116][Stage 71:===================================================>  (111 + 5) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.994731601 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415495849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:=============================>                        (62 + 51) / 113][Stage 72:==================================>                   (73 + 40) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:===================================================>  (108 + 5) / 113]                                                                                [Stage 73:=============================>                        (63 + 51) / 114][Stage 73:=====================================>                (80 + 34) / 114][Stage 73:============================================>         (94 + 20) / 114][Stage 73:==================================================>   (107 + 7) / 114][Stage 73:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.402314568 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432537485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==========================>                           (60 + 61) / 121][Stage 74:==============================>                       (69 + 52) / 121][Stage 74:===========================================>          (97 + 24) / 121][Stage 74:===================================================>  (115 + 6) / 121][Stage 74:=====================================================>(120 + 1) / 121]                                                                                [Stage 75:===========================>                          (61 + 61) / 122][Stage 75:============================>                         (64 + 58) / 122][Stage 75:==================================>                   (77 + 45) / 122][Stage 75:==========================================>           (97 + 25) / 122][Stage 75:==================================================>   (114 + 8) / 122][Stage 75:=====================================================>(120 + 2) / 122][Stage 75:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.782544872 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384286303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=====================================>                (80 + 35) / 115][Stage 76:=========================================>            (89 + 26) / 115][Stage 76:===============================================>     (102 + 13) / 115][Stage 76:====================================================> (111 + 4) / 115]                                                                                [Stage 77:=======================================>              (85 + 31) / 116][Stage 77:===========================================>          (93 + 23) / 116][Stage 77:==============================================>      (102 + 14) / 116][Stage 77:===================================================>  (110 + 6) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.098485999 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421391796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (71 + 47) / 118][Stage 78:=================================>                    (73 + 45) / 118][Stage 78:=====================================>                (82 + 36) / 118][Stage 78:================================================>    (107 + 11) / 118][Stage 78:=====================================================>(117 + 1) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:===================================>                  (78 + 41) / 119][Stage 79:=============================================>       (102 + 17) / 119][Stage 79:==================================================>   (111 + 8) / 119][Stage 79:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.246685163 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395400514 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==============================>                       (65 + 50) / 115][Stage 80:====================================>                 (77 + 38) / 115][Stage 80:==========================================>           (91 + 24) / 115][Stage 80:===================================================>  (109 + 6) / 115]                                                                                [Stage 81:================================>                     (69 + 47) / 116][Stage 81:=======================================>              (84 + 32) / 116][Stage 81:=============================================>        (97 + 19) / 116][Stage 81:===================================================>  (110 + 6) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.922487398 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406376384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:================================>                     (68 + 45) / 113][Stage 82:========================================>             (84 + 29) / 113][Stage 82:===============================================>     (102 + 11) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:============================>                         (61 + 53) / 114][Stage 83:=================================>                    (70 + 44) / 114][Stage 83:=============================================>        (95 + 19) / 114][Stage 83:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.338662915 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409478508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:============================>                         (59 + 54) / 113][Stage 84:===================================>                  (75 + 38) / 113][Stage 84:===========================================>          (91 + 22) / 113][Stage 84:================================================>    (103 + 10) / 113]                                                                                [Stage 85:============================>                         (61 + 53) / 114][Stage 85:=================================>                    (70 + 44) / 114][Stage 85:=========================================>            (88 + 26) / 114][Stage 85:===================================================>  (108 + 6) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.779210355 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434832071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:============================>                         (63 + 57) / 120][Stage 86:====================================>                 (80 + 40) / 120][Stage 86:===========================================>          (96 + 24) / 120][Stage 86:====================================================> (117 + 3) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:============================>                         (64 + 57) / 121][Stage 87:======================================>               (86 + 35) / 121][Stage 87:=============================================>       (105 + 16) / 121][Stage 87:====================================================> (118 + 3) / 121][Stage 87:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.924770711 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406058506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:===============================>                      (66 + 47) / 113][Stage 88:========================================>             (84 + 29) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:==================================================>   (105 + 8) / 113][Stage 88:====================================================> (110 + 3) / 113]                                                                                [Stage 89:============================>                         (61 + 53) / 114][Stage 89:=====================================>                (79 + 35) / 114][Stage 89:============================================>         (94 + 20) / 114][Stage 89:=================================================>    (105 + 9) / 114][Stage 89:====================================================> (111 + 3) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.943149033 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402209843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=============================>                        (61 + 52) / 113][Stage 90:==================================>                   (73 + 40) / 113][Stage 90:========================================>             (84 + 29) / 113][Stage 90:=================================================>    (104 + 9) / 113][Stage 90:=====================================================>(111 + 2) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:==============================>                       (64 + 50) / 114][Stage 91:=====================================>                (79 + 35) / 114][Stage 91:=============================================>        (96 + 18) / 114][Stage 91:=====================================================>(112 + 2) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.588505939 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407914508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (60 + 53) / 113][Stage 92:=================================>                    (71 + 42) / 113][Stage 92:==========================================>           (88 + 25) / 113][Stage 92:===============================================>     (102 + 11) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:============================>                         (60 + 54) / 114][Stage 93:==============================>                       (65 + 49) / 114][Stage 93:==================================>                   (72 + 42) / 114][Stage 93:============================================>         (94 + 20) / 114][Stage 93:===================================================>  (108 + 6) / 114][Stage 93:=====================================================>(112 + 2) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.814580468 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436333135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:============================>                         (63 + 57) / 120][Stage 94:=================================>                    (75 + 45) / 120][Stage 94:===============================================>     (107 + 13) / 120]                                                                                [Stage 95:===========================>                          (61 + 60) / 121][Stage 95:==================================>                   (78 + 43) / 121][Stage 95:===========================================>         (100 + 21) / 121][Stage 95:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.032205905 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384782048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===============================>                      (67 + 48) / 115][Stage 96:=======================================>              (85 + 30) / 115][Stage 96:==============================================>       (98 + 17) / 115][Stage 96:=================================================>    (106 + 9) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:====================================>                 (79 + 37) / 116][Stage 97:==========================================>           (91 + 25) / 116][Stage 97:===============================================>     (105 + 11) / 116][Stage 97:====================================================> (113 + 3) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.155551761 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401265104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:=================================>                    (70 + 43) / 113][Stage 98:===========================================>          (91 + 22) / 113][Stage 98:=================================================>    (104 + 9) / 113][Stage 98:====================================================> (110 + 3) / 113]                                                                                [Stage 99:============================>                         (61 + 53) / 114][Stage 99:===================================>                  (75 + 39) / 114][Stage 99:============================================>         (93 + 21) / 114][Stage 99:==================================================>   (106 + 8) / 114][Stage 99:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.411330577 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413388996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:===============================>                     (72 + 48) / 120][Stage 100:========================================>            (92 + 28) / 120][Stage 100:===============================================>    (110 + 10) / 120]                                                                                [Stage 101:==========================>                          (61 + 60) / 121][Stage 101:===============================>                     (72 + 49) / 121][Stage 101:========================================>            (92 + 29) / 121][Stage 101:===============================================>    (111 + 10) / 121][Stage 101:===================================================> (118 + 3) / 121][Stage 101:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.404601696 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=222", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=222,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427504849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (61 + 59) / 120][Stage 102:===============================>                     (71 + 49) / 120][Stage 102:========================================>            (91 + 29) / 120][Stage 102:=================================================>   (113 + 7) / 120][Stage 102:====================================================>(119 + 1) / 120]                                                                                [Stage 103:==========================>                          (61 + 60) / 121][Stage 103:=============================>                       (67 + 54) / 121][Stage 103:===================================>                 (81 + 40) / 121][Stage 103:==========================================>         (100 + 21) / 121][Stage 103:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.351312412 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405321229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:=============================>                       (63 + 50) / 113][Stage 104:=====================================>               (80 + 33) / 113][Stage 104:============================================>        (95 + 18) / 113][Stage 104:=================================================>   (106 + 7) / 113][Stage 104:====================================================>(111 + 2) / 113]                                                                                [Stage 105:===========================>                         (59 + 55) / 114][Stage 105:==============================>                      (66 + 48) / 114][Stage 105:=====================================>               (80 + 34) / 114][Stage 105:===========================================>         (94 + 20) / 114][Stage 105:==============================================>     (103 + 11) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.646801185 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=176", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=176,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431680614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:============================>                        (61 + 52) / 113][Stage 106:===============================>                     (67 + 46) / 113][Stage 106:========================================>            (87 + 26) / 113][Stage 106:==============================================>     (100 + 13) / 113]                                                                                [Stage 107:============================>                        (61 + 53) / 114][Stage 107:===============================>                     (67 + 47) / 114][Stage 107:=======================================>             (86 + 28) / 114][Stage 107:=============================================>       (98 + 16) / 114][Stage 107:===============================================>    (104 + 10) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.486019684 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370020838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (73 + 45) / 118][Stage 108:===================================>                 (80 + 38) / 118][Stage 108:========================================>            (91 + 27) / 118][Stage 108:=============================================>      (103 + 15) / 118][Stage 108:==================================================>  (112 + 6) / 118]                                                                                [Stage 109:================================>                    (73 + 46) / 119][Stage 109:====================================>                (81 + 38) / 119][Stage 109:========================================>            (91 + 28) / 119][Stage 109:==============================================>     (106 + 13) / 119][Stage 109:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.511073111 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380253108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (72 + 43) / 115][Stage 110:======================================>              (84 + 31) / 115][Stage 110:==============================================>     (103 + 12) / 115][Stage 110:=================================================>   (108 + 7) / 115]                                                                                [Stage 111:==================================>                  (76 + 40) / 116][Stage 111:=======================================>             (87 + 29) / 116][Stage 111:================================================>    (107 + 9) / 116][Stage 111:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.911043846 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385553774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===============================>                     (69 + 46) / 115][Stage 112:=====================================>               (81 + 34) / 115][Stage 112:============================================>        (96 + 19) / 115][Stage 112:==================================================>  (110 + 5) / 115][Stage 112:====================================================>(114 + 1) / 115]                                                                                [Stage 113:===============================>                     (69 + 47) / 116][Stage 113:====================================>                (80 + 36) / 116][Stage 113:=============================================>       (99 + 17) / 116][Stage 113:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.859919882 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459611081 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=================================>                   (72 + 43) / 115][Stage 114:=======================================>             (85 + 30) / 115][Stage 114:===========================================>         (95 + 20) / 115][Stage 114:===================================================> (112 + 3) / 115]                                                                                [Stage 115:=================================>                   (74 + 42) / 116][Stage 115:======================================>              (85 + 31) / 116][Stage 115:===================================================> (113 + 3) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.918303719 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400986329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (70 + 45) / 115][Stage 116:=====================================>               (81 + 34) / 115][Stage 116:==========================================>          (93 + 22) / 115][Stage 116:==================================================>  (110 + 5) / 115]                                                                                [Stage 117:==================================>                  (75 + 41) / 116][Stage 117:==========================================>          (93 + 23) / 116][Stage 117:=================================================>   (108 + 8) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.825638218 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404683352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (61 + 59) / 120][Stage 118:==============================>                      (70 + 50) / 120][Stage 118:====================================>                (83 + 37) / 120][Stage 118:==============================================>     (107 + 13) / 120]                                                                                [Stage 119:============================>                        (64 + 57) / 121][Stage 119:===================================>                 (80 + 41) / 121][Stage 119:=========================================>           (94 + 27) / 121][Stage 119:=================================================>   (112 + 9) / 121][Stage 119:====================================================>(119 + 2) / 121][Stage 119:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.524356945 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399355448 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:===============================>                     (72 + 48) / 120][Stage 120:====================================>                (82 + 38) / 120][Stage 120:===========================================>         (99 + 21) / 120][Stage 120:====================================================>(119 + 1) / 120]                                                                                [Stage 121:==========================>                          (61 + 60) / 121][Stage 121:===============================>                     (71 + 50) / 121][Stage 121:======================================>              (88 + 33) / 121][Stage 121:=================================================>   (114 + 7) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.589218609 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354792467 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=================================>                   (71 + 42) / 113][Stage 122:========================================>            (87 + 26) / 113][Stage 122:=============================================>       (98 + 15) / 113][Stage 122:=================================================>   (105 + 8) / 113][Stage 122:===================================================> (110 + 3) / 113]                                                                                [Stage 123:=======================================>             (86 + 28) / 114][Stage 123:===========================================>         (94 + 20) / 114][Stage 123:===================================================> (110 + 4) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.019275828 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405543915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:=============================>                       (67 + 54) / 121][Stage 124:====================================>                (84 + 37) / 121][Stage 124:============================================>       (103 + 18) / 121][Stage 124:====================================================>(120 + 1) / 121]                                                                                [Stage 125:==========================>                          (61 + 61) / 122][Stage 125:=============================>                       (68 + 54) / 122][Stage 125:=================================>                   (77 + 45) / 122][Stage 125:==============================================>     (108 + 14) / 122][Stage 125:====================================================>(120 + 2) / 122][Stage 125:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.741483399 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402224612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:============================>                        (65 + 56) / 121][Stage 126:===============================>                     (71 + 50) / 121][Stage 126:=======================================>             (90 + 31) / 121][Stage 126:=================================================>   (113 + 8) / 121]                                                                                [Stage 127:==========================>                          (62 + 60) / 122][Stage 127:=================================>                   (76 + 46) / 122][Stage 127:=====================================>               (86 + 36) / 122][Stage 127:=============================================>      (106 + 16) / 122][Stage 127:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.440275365 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507098809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:============================>                        (60 + 53) / 113][Stage 128:================================>                    (69 + 44) / 113][Stage 128:=======================================>             (85 + 28) / 113][Stage 128:=================================================>   (106 + 7) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:==============================>                      (66 + 48) / 114][Stage 129:====================================>                (79 + 35) / 114][Stage 129:=============================================>      (100 + 14) / 114][Stage 129:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.309755229 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373831027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===============================>                     (69 + 46) / 115][Stage 130:=======================================>             (85 + 30) / 115][Stage 130:==========================================>          (93 + 22) / 115][Stage 130:==============================================>     (102 + 13) / 115][Stage 130:===================================================> (112 + 3) / 115]                                                                                [Stage 131:===================================>                 (77 + 39) / 116][Stage 131:=======================================>             (86 + 30) / 116][Stage 131:=============================================>       (99 + 17) / 116][Stage 131:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.116537433 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361644576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:===================================>                 (80 + 38) / 118][Stage 132:===========================================>         (96 + 22) / 118][Stage 132:==================================================>  (113 + 5) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:===================================>                 (79 + 40) / 119][Stage 133:============================================>        (99 + 20) / 119][Stage 133:===================================================> (115 + 4) / 119][Stage 133:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.172587469 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383543437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:=============================>                       (62 + 51) / 113][Stage 134:=================================>                   (72 + 41) / 113][Stage 134:===========================================>         (92 + 21) / 113][Stage 134:===================================================> (110 + 3) / 113]                                                                                [Stage 135:============================>                        (61 + 53) / 114][Stage 135:===============================>                     (68 + 46) / 114][Stage 135:=======================================>             (85 + 29) / 114][Stage 135:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.216315434 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400818414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (62 + 58) / 120][Stage 136:===================================>                 (80 + 40) / 120][Stage 136:===========================================>         (98 + 22) / 120][Stage 136:====================================================>(118 + 2) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:============================>                        (65 + 56) / 121][Stage 137:===================================>                 (82 + 39) / 121][Stage 137:=============================================>      (106 + 15) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.113285821 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353360489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=================================>                   (71 + 42) / 113][Stage 138:=========================================>           (88 + 25) / 113][Stage 138:===========================================>         (92 + 21) / 113][Stage 138:==================================================>  (107 + 6) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===================================>                 (77 + 37) / 114][Stage 139:=========================================>           (89 + 25) / 114][Stage 139:===========================================>         (94 + 20) / 114][Stage 139:=================================================>   (107 + 7) / 114][Stage 139:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.977157579 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395170709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:===============================>                     (71 + 49) / 120][Stage 140:=======================================>             (90 + 30) / 120][Stage 140:=============================================>      (106 + 14) / 120][Stage 140:===================================================> (116 + 4) / 120]                                                                                [Stage 141:============================>                        (65 + 56) / 121][Stage 141:===============================>                     (73 + 48) / 121][Stage 141:=====================================>               (85 + 36) / 121][Stage 141:=============================================>      (106 + 15) / 121][Stage 141:==================================================>  (115 + 6) / 121][Stage 141:====================================================>(119 + 2) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.978191618 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401732576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:==============================>                      (70 + 50) / 120][Stage 142:======================================>              (87 + 33) / 120][Stage 142:=============================================>      (106 + 14) / 120][Stage 142:====================================================>(119 + 1) / 120]                                                                                [Stage 143:===========================>                         (62 + 59) / 121][Stage 143:=============================>                       (68 + 53) / 121][Stage 143:======================================>              (88 + 33) / 121][Stage 143:==========================================>         (100 + 21) / 121][Stage 143:====================================================>(119 + 2) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.586182636 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347445965 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (79 + 34) / 113][Stage 144:========================================>            (87 + 26) / 113][Stage 144:=============================================>       (97 + 16) / 113][Stage 144:==================================================>  (107 + 6) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:===================================>                 (76 + 38) / 114][Stage 145:=======================================>             (85 + 29) / 114][Stage 145:==========================================>          (92 + 22) / 114][Stage 145:================================================>    (105 + 9) / 114][Stage 145:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.357685205 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402868738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:============================>                        (61 + 52) / 113][Stage 146:==================================>                  (73 + 40) / 113][Stage 146:=============================================>       (97 + 16) / 113][Stage 146:===================================================> (109 + 4) / 113]                                                                                [Stage 147:============================>                        (61 + 53) / 114][Stage 147:=================================>                   (72 + 42) / 114][Stage 147:=======================================>             (86 + 28) / 114][Stage 147:==============================================>     (103 + 11) / 114][Stage 147:====================================================>(112 + 2) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.948456147 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398226714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:============================>                        (64 + 57) / 121][Stage 148:=====================================>               (86 + 35) / 121][Stage 148:==============================================>     (108 + 13) / 121][Stage 148:====================================================>(119 + 2) / 121]                                                                                [Stage 149:===========================>                         (63 + 59) / 122][Stage 149:===================================>                 (81 + 41) / 122][Stage 149:===========================================>        (102 + 20) / 122][Stage 149:===================================================> (119 + 3) / 122][Stage 149:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.705324964 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334781555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:======================================>              (84 + 31) / 115][Stage 150:============================================>        (96 + 19) / 115][Stage 150:================================================>    (106 + 9) / 115][Stage 150:===================================================> (111 + 4) / 115]                                                                                [Stage 151:=====================================>               (83 + 33) / 116][Stage 151:============================================>        (97 + 19) / 116][Stage 151:==================================================>  (111 + 5) / 116][Stage 151:====================================================>(114 + 2) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.956641323 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335551557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (81 + 34) / 115][Stage 152:=========================================>           (91 + 24) / 115][Stage 152:================================================>    (106 + 9) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:========================================>            (88 + 28) / 116][Stage 153:============================================>       (100 + 16) / 116][Stage 153:===================================================> (112 + 4) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.738640202 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469097182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=================================>                   (73 + 42) / 115][Stage 154:=========================================>           (90 + 25) / 115][Stage 154:=============================================>       (99 + 16) / 115][Stage 154:====================================================>(113 + 2) / 115]                                                                                [Stage 155:================================>                    (72 + 44) / 116][Stage 155:=====================================>               (83 + 33) / 116][Stage 155:============================================>        (98 + 18) / 116][Stage 155:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.783600787 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335306637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (82 + 33) / 115][Stage 156:=========================================>           (89 + 26) / 115][Stage 156:=============================================>       (98 + 17) / 115][Stage 156:===================================================> (111 + 4) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:=====================================>               (83 + 33) / 116][Stage 157:=========================================>           (90 + 26) / 116][Stage 157:===============================================>    (105 + 11) / 116][Stage 157:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.919541719 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371517651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (70 + 45) / 115][Stage 158:=========================================>           (90 + 25) / 115][Stage 158:=============================================>      (100 + 15) / 115][Stage 158:==================================================>  (110 + 5) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:===============================>                     (69 + 47) / 116][Stage 159:=======================================>             (87 + 29) / 116][Stage 159:=============================================>      (102 + 14) / 116][Stage 159:=================================================>   (108 + 8) / 116][Stage 159:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.073836528 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333231075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:======================================>              (83 + 32) / 115][Stage 160:=============================================>      (101 + 14) / 115][Stage 160:=================================================>   (108 + 7) / 115]                                                                                [Stage 161:======================================>              (85 + 31) / 116][Stage 161:===========================================>         (96 + 20) / 116][Stage 161:===============================================>    (106 + 10) / 116][Stage 161:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.822914433 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398632078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:============================>                        (64 + 57) / 121][Stage 162:====================================>                (83 + 38) / 121][Stage 162:=============================================>      (105 + 16) / 121][Stage 162:====================================================>(119 + 2) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:============================>                        (66 + 56) / 122][Stage 163:=======================================>             (90 + 32) / 122][Stage 163:==============================================>     (109 + 13) / 122][Stage 163:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.656645908 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370899072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:================================>                    (73 + 45) / 118][Stage 164:====================================>                (82 + 36) / 118][Stage 164:========================================>            (90 + 28) / 118][Stage 164:=============================================>      (104 + 14) / 118][Stage 164:==================================================>  (113 + 5) / 118][Stage 164:====================================================>(117 + 1) / 118]                                                                                [Stage 165:================================>                    (73 + 46) / 119][Stage 165:=================================>                   (75 + 44) / 119][Stage 165:====================================>                (83 + 36) / 119][Stage 165:========================================>            (90 + 29) / 119][Stage 165:============================================>       (101 + 18) / 119][Stage 165:==================================================>  (113 + 6) / 119][Stage 165:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.061768658 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381383523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:============================>                        (61 + 52) / 113][Stage 166:=================================>                   (72 + 41) / 113][Stage 166:===========================================>         (92 + 21) / 113][Stage 166:==============================================>     (101 + 12) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:=================================>                   (71 + 43) / 114][Stage 167:==========================================>          (91 + 23) / 114][Stage 167:==============================================>     (102 + 12) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.306022164 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392558874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:===============================>                     (73 + 48) / 121][Stage 168:=======================================>             (91 + 30) / 121][Stage 168:=============================================>      (105 + 16) / 121][Stage 168:====================================================>(119 + 2) / 121]                                                                                [Stage 169:==========================>                          (61 + 61) / 122][Stage 169:==============================>                      (70 + 52) / 122][Stage 169:==================================>                  (80 + 42) / 122][Stage 169:=============================================>      (106 + 16) / 122][Stage 169:===================================================> (119 + 3) / 122][Stage 169:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.436535372 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386592748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (58 + 55) / 113][Stage 170:===============================>                     (68 + 45) / 113][Stage 170:========================================>            (86 + 27) / 113][Stage 170:===============================================>    (103 + 10) / 113][Stage 170:===================================================> (110 + 3) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:==============================>                      (65 + 49) / 114][Stage 171:=======================================>             (85 + 29) / 114][Stage 171:===============================================>    (104 + 10) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.422326563 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362998226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:================================>                    (73 + 45) / 118][Stage 172:====================================>                (81 + 37) / 118][Stage 172:=========================================>           (92 + 26) / 118][Stage 172:==============================================>     (106 + 12) / 118][Stage 172:===================================================> (115 + 3) / 118]                                                                                [Stage 173:================================>                    (74 + 45) / 119][Stage 173:===================================>                 (80 + 39) / 119][Stage 173:=========================================>           (94 + 25) / 119][Stage 173:==============================================>     (106 + 13) / 119][Stage 173:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.557778538 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346430411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===================================>                 (75 + 38) / 113][Stage 174:======================================>              (83 + 30) / 113][Stage 174:============================================>        (94 + 19) / 113][Stage 174:=================================================>   (105 + 8) / 113][Stage 174:==================================================>  (108 + 5) / 113][Stage 174:===================================================> (109 + 4) / 113]                                                                                [Stage 175:=================================>                   (73 + 41) / 114][Stage 175:=====================================>               (81 + 33) / 114][Stage 175:===========================================>         (93 + 21) / 114][Stage 175:===============================================>    (104 + 10) / 114][Stage 175:==================================================>  (109 + 5) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.647418604 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367246611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:==================================>                  (76 + 42) / 118][Stage 176:=========================================>           (92 + 26) / 118][Stage 176:=============================================>      (103 + 15) / 118][Stage 176:===================================================> (114 + 4) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:=====================================>               (84 + 35) / 119][Stage 177:===========================================>         (97 + 22) / 119][Stage 177:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.253023595 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371192995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:>                                                      (0 + 0) / 115][Stage 178:===============================>                     (69 + 46) / 115][Stage 178:=====================================>               (81 + 34) / 115][Stage 178:=============================================>      (101 + 14) / 115][Stage 178:=================================================>   (108 + 7) / 115][Stage 178:====================================================>(113 + 2) / 115]                                                                                [Stage 179:===============================>                     (69 + 47) / 116][Stage 179:=======================================>             (87 + 29) / 116][Stage 179:==============================================>     (103 + 13) / 116][Stage 179:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.872745414 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356418622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:==================================>                  (77 + 41) / 118][Stage 180:=======================================>             (89 + 29) / 118][Stage 180:============================================>       (102 + 16) / 118][Stage 180:===============================================>    (108 + 10) / 118][Stage 180:====================================================>(116 + 2) / 118][Stage 180:====================================================>(117 + 1) / 118]                                                                                [Stage 181:================================>                    (73 + 46) / 119][Stage 181:=================================>                   (76 + 43) / 119][Stage 181:======================================>              (86 + 33) / 119][Stage 181:==========================================>          (96 + 23) / 119][Stage 181:=================================================>   (112 + 7) / 119][Stage 181:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.141615456 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392696957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:=================================>                   (75 + 43) / 118][Stage 182:=====================================>               (83 + 35) / 118][Stage 182:=======================================>             (89 + 29) / 118][Stage 182:=============================================>      (103 + 15) / 118][Stage 182:===================================================> (115 + 3) / 118]                                                                                [Stage 183:=================================>                   (75 + 44) / 119][Stage 183:===================================>                 (80 + 39) / 119][Stage 183:=======================================>             (88 + 31) / 119][Stage 183:============================================>       (101 + 18) / 119][Stage 183:=================================================>   (111 + 8) / 119][Stage 183:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.84898774 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392792798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:=============================>                       (63 + 50) / 113][Stage 184:=====================================>               (79 + 34) / 113][Stage 184:=============================================>       (96 + 17) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:=============================>                       (64 + 50) / 114][Stage 185:====================================>                (78 + 36) / 114][Stage 185:=============================================>       (98 + 16) / 114][Stage 185:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.201808382 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377489624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:==================================>                  (73 + 40) / 113][Stage 186:============================================>        (94 + 19) / 113][Stage 186:===================================================> (109 + 4) / 113]                                                                                [Stage 187:=============================>                       (63 + 51) / 114][Stage 187:====================================>                (78 + 36) / 114][Stage 187:============================================>        (95 + 19) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.104518333 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388723395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:==============================>                      (69 + 51) / 120][Stage 188:===================================>                 (81 + 39) / 120][Stage 188:==========================================>          (97 + 23) / 120][Stage 188:===================================================> (117 + 3) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:==============================>                      (69 + 52) / 121][Stage 189:======================================>              (87 + 34) / 121][Stage 189:=============================================>      (107 + 14) / 121][Stage 189:===================================================> (117 + 4) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.642790216 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334003663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:======================================>              (84 + 31) / 115][Stage 190:===========================================>         (95 + 20) / 115][Stage 190:==============================================>     (102 + 13) / 115][Stage 190:=================================================>   (107 + 8) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:=======================================>             (86 + 30) / 116][Stage 191:===========================================>         (96 + 20) / 116][Stage 191:===============================================>    (106 + 10) / 116][Stage 191:===================================================> (113 + 3) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.355574569 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400697768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:===========================>                         (63 + 57) / 120][Stage 192:===================================>                 (81 + 39) / 120][Stage 192:===========================================>         (98 + 22) / 120][Stage 192:====================================================>(118 + 2) / 120]                                                                                [Stage 193:============================>                        (64 + 57) / 121][Stage 193:=================================>                   (76 + 45) / 121][Stage 193:=========================================>           (95 + 26) / 121][Stage 193:===================================================> (117 + 4) / 121][Stage 193:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.283614858 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404806372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:=============================>                       (66 + 54) / 120][Stage 194:==================================>                  (77 + 43) / 120][Stage 194:===========================================>         (98 + 22) / 120][Stage 194:==================================================>  (115 + 5) / 120]                                                                                [Stage 195:===========================>                         (62 + 59) / 121][Stage 195:===============================>                     (72 + 49) / 121][Stage 195:==========================================>         (100 + 21) / 121][Stage 195:===================================================> (117 + 4) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.461429594 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (73 + 45) / 118][Stage 196:====================================>                (81 + 37) / 118][Stage 196:============================================>       (100 + 18) / 118][Stage 196:====================================================>(116 + 2) / 118]                                                                                [Stage 197:================================>                    (73 + 46) / 119][Stage 197:==================================>                  (78 + 41) / 119][Stage 197:===========================================>        (100 + 19) / 119][Stage 197:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.918301471 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418413706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:==============================>                      (65 + 48) / 113][Stage 198:=====================================>               (81 + 32) / 113][Stage 198:==========================================>          (90 + 23) / 113][Stage 198:==================================================>  (107 + 6) / 113][Stage 198:====================================================>(111 + 2) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (59 + 55) / 114][Stage 199:===============================>                     (68 + 46) / 114][Stage 199:=======================================>             (85 + 29) / 114][Stage 199:=============================================>       (98 + 16) / 114][Stage 199:==================================================>  (109 + 5) / 114][Stage 199:====================================================>(112 + 2) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.99426252 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394929804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (63 + 58) / 121][Stage 200:==============================>                      (70 + 51) / 121][Stage 200:=======================================>             (91 + 30) / 121][Stage 200:=================================================>   (114 + 7) / 121]                                                                                [Stage 201:===========================>                         (63 + 59) / 122][Stage 201:==============================>                      (71 + 51) / 122][Stage 201:=======================================>             (92 + 30) / 122][Stage 201:=================================================>   (113 + 9) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.303781694 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m36.923s
user	12m0.176s
sys	0m54.652s
