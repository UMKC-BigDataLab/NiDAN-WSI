Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 08:53:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:53:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:53:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:53:51 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 08:53:53 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:54:04 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522085353-0438).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.35337914 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========>                                           (24 + 91) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.951371476 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.70900968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=============================>                         (63 + 55) / 118][Stage 2:================================>                      (69 + 49) / 118][Stage 2:=================================>                     (72 + 46) / 118][Stage 2:==================================>                    (74 + 44) / 118][Stage 2:===================================>                   (77 + 41) / 118][Stage 2:=====================================>                 (81 + 37) / 118][Stage 2:=======================================>               (84 + 34) / 118][Stage 2:========================================>              (87 + 31) / 118][Stage 2:============================================>          (95 + 23) / 118][Stage 2:==================================================>    (109 + 9) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:=================================>                     (72 + 47) / 119][Stage 3:=================================>                     (73 + 46) / 119][Stage 3:==================================>                    (74 + 45) / 119][Stage 3:====================================>                  (78 + 41) / 119][Stage 3:=====================================>                 (82 + 37) / 119][Stage 3:========================================>              (87 + 32) / 119][Stage 3:==============================================>       (103 + 16) / 119][Stage 3:====================================================>  (114 + 5) / 119]                                                                                Time elapsed: 5.305540409 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.711580428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (59 + 61) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:=============================>                         (64 + 56) / 120][Stage 4:==============================>                        (67 + 53) / 120][Stage 4:===================================>                   (77 + 43) / 120][Stage 4:============================================>          (96 + 24) / 120][Stage 4:==================================================>    (111 + 9) / 120][Stage 4:=====================================================> (116 + 4) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:==============================>                        (67 + 54) / 121][Stage 5:==================================>                    (76 + 45) / 121][Stage 5:======================================>                (85 + 36) / 121][Stage 5:============================================>          (97 + 24) / 121][Stage 5:=================================================>    (111 + 10) / 121]                                                                                Time elapsed: 4.232081621 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.66999741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==================================>                    (70 + 43) / 113][Stage 6:========================================>              (84 + 29) / 113][Stage 6:============================================>          (92 + 21) / 113][Stage 6:===============================================>       (98 + 15) / 113][Stage 6:=================================================>    (103 + 10) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:====================================>                  (76 + 38) / 114][Stage 7:=========================================>             (85 + 29) / 114][Stage 7:===========================================>           (90 + 24) / 114][Stage 7:===============================================>       (99 + 15) / 114][Stage 7:===================================================>   (106 + 8) / 114][Stage 7:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.912823581 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.560796163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:================================>                      (70 + 48) / 118][Stage 8:=================================>                     (72 + 46) / 118][Stage 8:====================================>                  (79 + 39) / 118][Stage 8:=========================================>             (88 + 30) / 118][Stage 8:============================================>          (95 + 23) / 118][Stage 8:===============================================>      (104 + 14) / 118][Stage 8:====================================================>  (112 + 6) / 118]                                                                                [Stage 9:=================================>                     (72 + 47) / 119][Stage 9:===================================>                   (76 + 43) / 119][Stage 9:=====================================>                 (82 + 37) / 119][Stage 9:========================================>              (87 + 32) / 119][Stage 9:============================================>          (96 + 23) / 119][Stage 9:=================================================>    (109 + 10) / 119][Stage 9:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.089878082 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46049738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=====================================>                (79 + 36) / 115][Stage 10:======================================>               (82 + 33) / 115][Stage 10:==========================================>           (91 + 24) / 115][Stage 10:==============================================>      (101 + 14) / 115][Stage 10:==================================================>   (108 + 7) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:======================================>               (82 + 34) / 116][Stage 11:==========================================>           (91 + 25) / 116][Stage 11:===============================================>     (104 + 12) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.516222864 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.64153513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:=============================>                        (65 + 56) / 121][Stage 12:=================================>                    (76 + 45) / 121][Stage 12:==========================================>           (96 + 25) / 121][Stage 12:=================================================>    (112 + 9) / 121][Stage 12:====================================================> (117 + 4) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:============================>                         (64 + 58) / 122][Stage 13:=======================================>              (89 + 33) / 122][Stage 13:===============================================>     (110 + 12) / 122][Stage 13:==================================================>   (113 + 9) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.753635795 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523702218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:============================>                         (59 + 54) / 113][Stage 14:============================>                         (60 + 53) / 113][Stage 14:================================>                     (67 + 46) / 113][Stage 14:=======================================>              (83 + 30) / 113][Stage 14:==============================================>       (97 + 16) / 113][Stage 14:===================================================>  (107 + 6) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:================================>                     (68 + 46) / 114][Stage 15:========================================>             (86 + 28) / 114][Stage 15:================================================>    (104 + 10) / 114][Stage 15:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.565104163 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518231502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (71 + 47) / 118][Stage 16:================================>                     (72 + 46) / 118][Stage 16:===================================>                  (78 + 40) / 118][Stage 16:=====================================>                (81 + 37) / 118][Stage 16:==========================================>           (92 + 26) / 118][Stage 16:===============================================>     (105 + 13) / 118][Stage 16:===================================================>  (113 + 5) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:==================================>                   (75 + 44) / 119][Stage 17:====================================>                 (81 + 38) / 119][Stage 17:=========================================>            (92 + 27) / 119][Stage 17:==============================================>      (104 + 15) / 119][Stage 17:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.984368047 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429386272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=====================================>                (80 + 35) / 115][Stage 18:========================================>             (87 + 28) / 115][Stage 18:===============================================>     (102 + 13) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:=====================================>                (81 + 35) / 116][Stage 19:========================================>             (86 + 30) / 116][Stage 19:==============================================>       (99 + 17) / 116][Stage 19:==================================================>   (109 + 7) / 116][Stage 19:====================================================> (113 + 3) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.705619441 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562737769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:=============================>                        (65 + 55) / 120][Stage 20:==================================>                   (76 + 44) / 120][Stage 20:=============================================>       (103 + 17) / 120][Stage 20:===================================================>  (115 + 5) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:===============================>                      (71 + 50) / 121][Stage 21:=========================================>            (93 + 28) / 121][Stage 21:==================================================>   (114 + 7) / 121][Stage 21:=====================================================>(119 + 2) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.53497888 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51712652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:==============================>                       (68 + 52) / 120][Stage 22:======================================>               (86 + 34) / 120][Stage 22:===============================================>     (107 + 13) / 120][Stage 22:=====================================================>(119 + 1) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=================================>                    (74 + 47) / 121][Stage 23:==========================================>           (95 + 26) / 121][Stage 23:==================================================>   (113 + 8) / 121][Stage 23:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.304972451 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554363085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:==============================>                       (68 + 52) / 120][Stage 24:====================================>                 (82 + 38) / 120][Stage 24:=============================================>       (104 + 16) / 120][Stage 24:==================================================>   (112 + 8) / 120]                                                                                [Stage 25:============================>                         (63 + 58) / 121][Stage 25:================================>                     (73 + 48) / 121][Stage 25:==========================================>           (95 + 26) / 121][Stage 25:================================================>    (110 + 11) / 121][Stage 25:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.42503221 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457833833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===================================>                  (74 + 39) / 113][Stage 26:=========================================>            (86 + 27) / 113][Stage 26:===============================================>      (99 + 14) / 113][Stage 26:===================================================>  (108 + 5) / 113][Stage 26:====================================================> (110 + 3) / 113]                                                                                [Stage 27:=======================================>              (83 + 31) / 114][Stage 27:============================================>         (93 + 21) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.19796649 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472308413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:===============================>                      (66 + 47) / 113][Stage 28:=======================================>              (83 + 30) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (61 + 53) / 114][Stage 29:=================================>                    (70 + 44) / 114][Stage 29:==========================================>           (89 + 25) / 114][Stage 29:===============================================>     (102 + 12) / 114][Stage 29:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.32535993 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46741134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:======================================>               (83 + 32) / 115][Stage 30:=============================================>        (97 + 18) / 115][Stage 30:===================================================>  (110 + 5) / 115][Stage 30:====================================================> (112 + 3) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:======================================>               (83 + 33) / 116][Stage 31:=========================================>            (89 + 27) / 116][Stage 31:=============================================>       (100 + 16) / 116][Stage 31:==================================================>   (108 + 8) / 116][Stage 31:=====================================================>(114 + 2) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.434486419 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428806771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===================================>                  (75 + 38) / 113][Stage 32:===========================================>          (92 + 21) / 113][Stage 32:=============================================>        (96 + 17) / 113][Stage 32:=================================================>    (104 + 9) / 113][Stage 32:=====================================================>(111 + 2) / 113]                                                                                [Stage 33:====================================>                 (76 + 38) / 114][Stage 33:=======================================>              (84 + 30) / 114][Stage 33:=============================================>        (95 + 19) / 114][Stage 33:====================================================> (111 + 3) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.443145904 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506724951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:=============================>                        (67 + 54) / 121][Stage 34:=================================>                    (76 + 45) / 121][Stage 34:=============================================>       (103 + 18) / 121][Stage 34:=====================================================>(119 + 2) / 121]                                                                                [Stage 35:===========================>                          (61 + 61) / 122][Stage 35:=============================>                        (66 + 56) / 122][Stage 35:=====================================>                (84 + 38) / 122][Stage 35:==============================================>      (107 + 15) / 122][Stage 35:====================================================> (119 + 3) / 122][Stage 35:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.326598075 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500564794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:=============================>                        (65 + 55) / 120][Stage 36:=================================>                    (74 + 46) / 120][Stage 36:============================================>         (98 + 22) / 120][Stage 36:===================================================>  (115 + 5) / 120]                                                                                [Stage 37:===========================>                          (62 + 59) / 121][Stage 37:=================================>                    (74 + 47) / 121][Stage 37:===========================================>          (97 + 24) / 121][Stage 37:==============================================>      (107 + 14) / 121][Stage 37:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.29255874 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480353637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:==================================>                   (75 + 43) / 118][Stage 38:====================================>                 (79 + 39) / 118][Stage 38:========================================>             (89 + 29) / 118][Stage 38:===============================================>     (106 + 12) / 118][Stage 38:====================================================> (114 + 4) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:==================================>                   (76 + 43) / 119][Stage 39:======================================>               (84 + 35) / 119][Stage 39:==========================================>           (93 + 26) / 119][Stage 39:===================================================>  (114 + 5) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.727216988 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444094315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:================================>                     (72 + 46) / 118][Stage 40:=================================>                    (73 + 45) / 118][Stage 40:=====================================>                (83 + 35) / 118][Stage 40:=========================================>            (90 + 28) / 118][Stage 40:==============================================>      (103 + 15) / 118][Stage 40:=====================================================>(116 + 2) / 118]                                                                                [Stage 41:==================================>                   (76 + 43) / 119][Stage 41:====================================>                 (81 + 38) / 119][Stage 41:=========================================>            (92 + 27) / 119][Stage 41:==============================================>      (104 + 15) / 119][Stage 41:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.552413455 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423743537 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:========================================>             (84 + 29) / 113][Stage 42:=============================================>        (96 + 17) / 113][Stage 42:==============================================>      (100 + 13) / 113][Stage 42:==================================================>   (106 + 7) / 113]                                                                                [Stage 43:=====================================>                (80 + 34) / 114][Stage 43:===========================================>          (91 + 23) / 114][Stage 43:==============================================>       (99 + 15) / 114][Stage 43:====================================================> (110 + 4) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.350831285 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427118946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:=================================>                    (74 + 44) / 118][Stage 44:=========================================>            (90 + 28) / 118][Stage 44:=============================================>       (101 + 17) / 118][Stage 44:================================================>    (108 + 10) / 118][Stage 44:====================================================> (115 + 3) / 118][Stage 44:=====================================================>(117 + 1) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:====================================>                 (80 + 39) / 119][Stage 45:=========================================>            (92 + 27) / 119][Stage 45:============================================>         (99 + 20) / 119][Stage 45:====================================================> (115 + 4) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.552322496 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53792896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (72 + 46) / 118][Stage 46:==================================>                   (76 + 42) / 118][Stage 46:=======================================>              (87 + 31) / 118][Stage 46:===============================================>     (105 + 13) / 118][Stage 46:=====================================================>(117 + 1) / 118]                                                                                [Stage 47:=================================>                    (73 + 46) / 119][Stage 47:===================================>                  (78 + 41) / 119][Stage 47:==========================================>           (93 + 26) / 119][Stage 47:===============================================>     (107 + 12) / 119][Stage 47:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.254321874 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432134001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:>                                                       (0 + 0) / 115][Stage 48:===============================>                      (68 + 47) / 115][Stage 48:====================================>                 (77 + 38) / 115][Stage 48:==============================================>      (100 + 15) / 115][Stage 48:===================================================>  (110 + 5) / 115]                                                                                [Stage 49:==================================>                   (74 + 42) / 116][Stage 49:=========================================>            (89 + 27) / 116][Stage 49:=================================================>    (107 + 9) / 116][Stage 49:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.007780118 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475895945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==============================>                       (65 + 50) / 115][Stage 50:===================================>                  (76 + 39) / 115][Stage 50:========================================>             (87 + 28) / 115][Stage 50:===============================================>     (102 + 13) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:====================================>                 (79 + 37) / 116][Stage 51:==============================================>       (99 + 17) / 116][Stage 51:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.776008364 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469121926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:===================================>                  (75 + 38) / 113][Stage 52:===========================================>          (92 + 21) / 113][Stage 52:===============================================>     (102 + 11) / 113]                                                                                [Stage 53:============================>                         (61 + 53) / 114][Stage 53:=================================>                    (71 + 43) / 114][Stage 53:========================================>             (86 + 28) / 114][Stage 53:================================================>    (104 + 10) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.360869137 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419701606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (70 + 43) / 113][Stage 54:=======================================>              (83 + 30) / 113][Stage 54:===========================================>          (90 + 23) / 113][Stage 54:===============================================>     (101 + 12) / 113][Stage 54:====================================================> (109 + 4) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:===================================>                  (75 + 39) / 114][Stage 55:=========================================>            (88 + 26) / 114][Stage 55:=============================================>        (97 + 17) / 114][Stage 55:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.066412625 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39962301 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=================================>                    (70 + 43) / 113][Stage 56:=====================================>                (79 + 34) / 113][Stage 56:===========================================>          (90 + 23) / 113][Stage 56:=================================================>    (104 + 9) / 113][Stage 56:===================================================>  (108 + 5) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:====================================>                 (77 + 37) / 114][Stage 57:=========================================>            (87 + 27) / 114][Stage 57:===============================================>     (103 + 11) / 114][Stage 57:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.345530934 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449891191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:=============================>                        (65 + 56) / 121][Stage 58:=================================>                    (76 + 45) / 121][Stage 58:============================================>        (101 + 20) / 121][Stage 58:===================================================>  (116 + 5) / 121][Stage 58:=====================================================>(120 + 1) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:==============================>                       (68 + 54) / 122][Stage 59:==================================>                   (77 + 45) / 122][Stage 59:=============================================>       (104 + 18) / 122][Stage 59:===================================================>  (116 + 6) / 122][Stage 59:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.407041769 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463743111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=================================>                    (72 + 43) / 115][Stage 60:===========================================>          (92 + 23) / 115][Stage 60:====================================================> (111 + 4) / 115][Stage 60:=====================================================>(113 + 2) / 115]                                                                                [Stage 61:=================================>                    (73 + 43) / 116][Stage 61:=========================================>            (90 + 26) / 116][Stage 61:=================================================>    (107 + 9) / 116][Stage 61:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.944633842 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=27", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=27,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.544449159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==============================>                       (66 + 49) / 115][Stage 62:=====================================>                (79 + 36) / 115][Stage 62:============================================>         (95 + 20) / 115][Stage 62:================================================>    (105 + 10) / 115][Stage 62:===================================================>  (109 + 6) / 115][Stage 62:====================================================> (112 + 3) / 115][Stage 62:=====================================================>(114 + 1) / 115]                                                                                [Stage 63:================================>                     (69 + 47) / 116][Stage 63:======================================>               (83 + 33) / 116][Stage 63:=============================================>        (98 + 18) / 116][Stage 63:==================================================>   (108 + 8) / 116][Stage 63:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.874984213 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414840713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==================================>                   (72 + 41) / 113][Stage 64:=========================================>            (87 + 26) / 113][Stage 64:=============================================>        (95 + 18) / 113][Stage 64:==================================================>   (106 + 7) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:========================================>             (85 + 29) / 114][Stage 65:===========================================>          (92 + 22) / 114][Stage 65:===============================================>     (103 + 11) / 114][Stage 65:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.074807111 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459399738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:============================>                         (64 + 57) / 121][Stage 66:==================================>                   (77 + 44) / 121][Stage 66:==========================================>           (96 + 25) / 121][Stage 66:================================================>    (110 + 11) / 121][Stage 66:=====================================================>(120 + 1) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:===============================>                      (71 + 51) / 122][Stage 67:========================================>             (92 + 30) / 122][Stage 67:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.284922106 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452508999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:============================>                         (63 + 58) / 121][Stage 68:====================================>                 (81 + 40) / 121][Stage 68:===========================================>         (100 + 21) / 121][Stage 68:===================================================>  (115 + 6) / 121]                                                                                [Stage 69:===========================>                          (62 + 60) / 122][Stage 69:===============================>                      (72 + 50) / 122][Stage 69:======================================>               (87 + 35) / 122][Stage 69:==============================================>      (108 + 14) / 122][Stage 69:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.413281949 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447989906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:==============================>                       (64 + 49) / 113][Stage 70:======================================>               (80 + 33) / 113][Stage 70:=============================================>        (96 + 17) / 113][Stage 70:====================================================> (109 + 4) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:==============================>                       (64 + 50) / 114][Stage 71:=======================================>              (84 + 30) / 114][Stage 71:=================================================>    (105 + 9) / 114][Stage 71:====================================================> (110 + 4) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.789804514 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449779391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (60 + 60) / 120][Stage 72:===============================>                      (69 + 51) / 120][Stage 72:======================================>               (85 + 35) / 120][Stage 72:===============================================>     (107 + 13) / 120][Stage 72:====================================================> (116 + 4) / 120]                                                                                [Stage 73:===========================>                          (61 + 60) / 121][Stage 73:=============================>                        (67 + 54) / 121][Stage 73:===================================>                  (80 + 41) / 121][Stage 73:==============================================>      (106 + 15) / 121][Stage 73:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.081413452 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376179404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=======================================>              (83 + 30) / 113][Stage 74:===========================================>          (90 + 23) / 113][Stage 74:=============================================>        (95 + 18) / 113][Stage 74:===================================================>  (107 + 6) / 113][Stage 74:======================================================(113 + 0) / 113]                                                                                [Stage 75:====================================>                 (77 + 37) / 114][Stage 75:=========================================>            (88 + 26) / 114][Stage 75:=============================================>        (96 + 18) / 114][Stage 75:==================================================>   (106 + 8) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.197191179 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41041622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=================================>                    (72 + 43) / 115][Stage 76:=========================================>            (89 + 26) / 115][Stage 76:===============================================>     (102 + 13) / 115][Stage 76:===================================================>  (110 + 5) / 115]                                                                                [Stage 77:===================================>                  (77 + 39) / 116][Stage 77:==========================================>           (92 + 24) / 116][Stage 77:==============================================>       (99 + 17) / 116][Stage 77:==================================================>   (109 + 7) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.101486709 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525393445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:================================>                     (69 + 44) / 113][Stage 78:========================================>             (84 + 29) / 113][Stage 78:===============================================>     (101 + 12) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:=================================>                    (71 + 43) / 114][Stage 79:========================================>             (86 + 28) / 114][Stage 79:==============================================>       (99 + 15) / 114][Stage 79:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.372629737 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398244426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:==================================>                   (76 + 42) / 118][Stage 80:=====================================>                (81 + 37) / 118][Stage 80:================================================>    (107 + 11) / 118][Stage 80:===================================================>  (113 + 5) / 118][Stage 80:=====================================================>(117 + 1) / 118]                                                                                [Stage 81:==================================>                   (77 + 42) / 119][Stage 81:=======================================>              (87 + 32) / 119][Stage 81:============================================>        (101 + 18) / 119][Stage 81:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.185544448 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451368636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:==============================>                       (69 + 52) / 121][Stage 82:=================================>                    (76 + 45) / 121][Stage 82:=========================================>            (93 + 28) / 121][Stage 82:==================================================>   (113 + 8) / 121][Stage 82:=====================================================>(119 + 2) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:=============================>                        (67 + 55) / 122][Stage 83:=================================>                    (75 + 47) / 122][Stage 83:========================================>             (92 + 30) / 122][Stage 83:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.371393614 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410526601 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:=============================>                        (61 + 52) / 113][Stage 84:===================================>                  (74 + 39) / 113][Stage 84:=============================================>        (96 + 17) / 113][Stage 84:===================================================>  (108 + 5) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:============================>                         (60 + 54) / 114][Stage 85:=================================>                    (70 + 44) / 114][Stage 85:==========================================>           (89 + 25) / 114][Stage 85:================================================>    (104 + 10) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.350988357 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399955811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:================================>                     (69 + 44) / 113][Stage 86:===========================================>          (91 + 22) / 113][Stage 86:=================================================>    (104 + 9) / 113][Stage 86:====================================================> (110 + 3) / 113]                                                                                [Stage 87:===========================>                          (58 + 56) / 114][Stage 87:============================>                         (61 + 53) / 114][Stage 87:=================================>                    (71 + 43) / 114][Stage 87:==========================================>           (90 + 24) / 114][Stage 87:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.183613384 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366940798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===================================>                  (75 + 38) / 113][Stage 88:=========================================>            (86 + 27) / 113][Stage 88:===============================================>      (99 + 14) / 113][Stage 88:================================================>    (103 + 10) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:=====================================>                (79 + 35) / 114][Stage 89:=========================================>            (87 + 27) / 114][Stage 89:=============================================>        (95 + 19) / 114][Stage 89:===================================================>  (108 + 6) / 114][Stage 89:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.044686051 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415777316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:=================================>                    (74 + 46) / 120][Stage 90:========================================>             (90 + 30) / 120][Stage 90:================================================>    (109 + 11) / 120]                                                                                [Stage 91:===========================>                          (62 + 59) / 121][Stage 91:=================================>                    (76 + 45) / 121][Stage 91:==========================================>           (95 + 26) / 121][Stage 91:=================================================>    (112 + 9) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.110573299 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403216501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==============================>                       (66 + 49) / 115][Stage 92:======================================>               (82 + 33) / 115][Stage 92:===============================================>     (104 + 11) / 115][Stage 92:===================================================>  (109 + 6) / 115]                                                                                [Stage 93:================================>                     (70 + 46) / 116][Stage 93:========================================>             (87 + 29) / 116][Stage 93:==============================================>      (101 + 15) / 116][Stage 93:==================================================>   (109 + 7) / 116][Stage 93:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.138866239 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377693429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:===================================>                  (77 + 41) / 118][Stage 94:======================================>               (85 + 33) / 118][Stage 94:============================================>        (100 + 18) / 118][Stage 94:===================================================>  (112 + 6) / 118][Stage 94:=====================================================>(117 + 1) / 118]                                                                                [Stage 95:=================================>                    (73 + 46) / 119][Stage 95:==================================>                   (77 + 42) / 119][Stage 95:======================================>               (84 + 35) / 119][Stage 95:==========================================>           (93 + 26) / 119][Stage 95:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.355300811 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386460793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==================================>                   (73 + 42) / 115][Stage 96:====================================>                 (78 + 37) / 115][Stage 96:===============================================>     (103 + 12) / 115][Stage 96:===================================================>  (109 + 6) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:=================================>                    (71 + 45) / 116][Stage 97:=======================================>              (84 + 32) / 116][Stage 97:============================================>         (95 + 21) / 116][Stage 97:===================================================>  (111 + 5) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.978916067 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414326872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:==============================>                       (67 + 53) / 120][Stage 98:======================================>               (86 + 34) / 120][Stage 98:==============================================>      (106 + 14) / 120][Stage 98:=====================================================>(119 + 1) / 120]                                                                                [Stage 99:===========================>                          (61 + 60) / 121][Stage 99:=============================>                        (65 + 56) / 121][Stage 99:===================================>                  (79 + 42) / 121][Stage 99:==========================================>           (96 + 25) / 121][Stage 99:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.154684825 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411021963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:===========================>                         (63 + 57) / 120][Stage 100:=================================>                   (76 + 44) / 120][Stage 100:============================================>       (102 + 18) / 120][Stage 100:===================================================> (116 + 4) / 120]                                                                                [Stage 101:===========================>                         (63 + 58) / 121][Stage 101:================================>                    (74 + 47) / 121][Stage 101:==========================================>          (96 + 25) / 121][Stage 101:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.039166378 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394112855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:============================>                        (61 + 52) / 113][Stage 102:=====================================>               (80 + 33) / 113][Stage 102:===============================================>    (103 + 10) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:============================>                        (61 + 53) / 114][Stage 103:================================>                    (70 + 44) / 114][Stage 103:========================================>            (87 + 27) / 114][Stage 103:=================================================>   (107 + 7) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.323737864 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40320068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==============================>                      (67 + 48) / 115][Stage 104:====================================>                (80 + 35) / 115][Stage 104:=============================================>      (101 + 14) / 115][Stage 104:===================================================> (112 + 3) / 115]                                                                                [Stage 105:====================================>                (80 + 36) / 116][Stage 105:=============================================>       (99 + 17) / 116][Stage 105:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.64707097 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427182489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:============================>                        (65 + 55) / 120][Stage 106:==================================>                  (79 + 41) / 120][Stage 106:============================================>       (102 + 18) / 120][Stage 106:====================================================>(119 + 1) / 120]                                                                                [Stage 107:==========================>                          (61 + 60) / 121][Stage 107:===============================>                     (71 + 50) / 121][Stage 107:======================================>              (89 + 32) / 121][Stage 107:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 2.903902057 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406394949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===============================>                     (69 + 46) / 115][Stage 108:=======================================>             (85 + 30) / 115][Stage 108:=============================================>      (100 + 15) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:================================>                    (71 + 45) / 116][Stage 109:========================================>            (88 + 28) / 116][Stage 109:===============================================>    (105 + 11) / 116][Stage 109:===================================================> (113 + 3) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.453682113 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352690058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (81 + 34) / 115][Stage 110:=======================================>             (86 + 29) / 115][Stage 110:==============================================>     (102 + 13) / 115][Stage 110:====================================================>(113 + 2) / 115]                                                                                [Stage 111:======================================>              (84 + 32) / 116][Stage 111:=========================================>           (90 + 26) / 116][Stage 111:============================================>       (100 + 16) / 116][Stage 111:===================================================> (112 + 4) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.73548628 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404675305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:===========================>                         (62 + 59) / 121][Stage 112:===================================>                 (82 + 39) / 121][Stage 112:=================================================>   (112 + 9) / 121]                                                                                [Stage 113:==========================>                          (61 + 61) / 122][Stage 113:==========================>                          (62 + 60) / 122][Stage 113:=================================>                   (78 + 44) / 122][Stage 113:============================================>       (104 + 18) / 122]                                                                                Time elapsed: 2.760625812 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384916689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (58 + 55) / 113][Stage 114:==============================>                      (65 + 48) / 113][Stage 114:====================================>                (78 + 35) / 113][Stage 114:==============================================>      (99 + 14) / 113][Stage 114:==================================================>  (108 + 5) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:===============================>                     (68 + 46) / 114][Stage 115:=====================================>               (81 + 33) / 114][Stage 115:=================================================>   (107 + 7) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.199251874 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343985574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=====================================>               (82 + 33) / 115][Stage 116:=======================================>             (86 + 29) / 115][Stage 116:=============================================>      (100 + 15) / 115][Stage 116:===================================================> (112 + 3) / 115]                                                                                [Stage 117:========================================>            (88 + 28) / 116][Stage 117:=============================================>      (101 + 15) / 116][Stage 117:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.606965019 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366593897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:================================>                    (73 + 45) / 118][Stage 118:======================================>              (86 + 32) / 118][Stage 118:===============================================>    (108 + 10) / 118][Stage 118:==================================================>  (113 + 5) / 118]                                                                                [Stage 119:================================>                    (74 + 45) / 119][Stage 119:======================================>              (86 + 33) / 119][Stage 119:==============================================>     (107 + 12) / 119][Stage 119:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.056522851 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415473776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 61) / 121][Stage 120:===========================>                         (62 + 59) / 121][Stage 120:=================================>                   (76 + 45) / 121][Stage 120:===========================================>        (102 + 19) / 121][Stage 120:====================================================>(119 + 2) / 121]                                                                                [Stage 121:==========================>                          (61 + 61) / 122][Stage 121:=============================>                       (69 + 53) / 122][Stage 121:====================================>                (83 + 39) / 122][Stage 121:===========================================>        (103 + 19) / 122][Stage 121:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.05278432 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=26", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=26,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40268866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:=============================>                       (67 + 54) / 121][Stage 122:=======================================>             (90 + 31) / 121][Stage 122:===============================================>    (111 + 10) / 121][Stage 122:====================================================>(119 + 2) / 121]                                                                                [Stage 123:==========================>                          (61 + 61) / 122][Stage 123:=============================>                       (67 + 55) / 122][Stage 123:================================>                    (74 + 48) / 122][Stage 123:===========================================>        (103 + 19) / 122][Stage 123:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.207337879 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356175788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (77 + 36) / 113][Stage 124:======================================>              (83 + 30) / 113][Stage 124:===========================================>         (93 + 20) / 113][Stage 124:===============================================>    (103 + 10) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===================================>                 (76 + 38) / 114][Stage 125:=======================================>             (86 + 28) / 114][Stage 125:===========================================>         (93 + 21) / 114][Stage 125:===============================================>    (104 + 10) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.13344167 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408699977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:=============================>                       (66 + 54) / 120][Stage 126:=====================================>               (85 + 35) / 120][Stage 126:==============================================>     (108 + 12) / 120][Stage 126:====================================================>(118 + 2) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:==============================>                      (70 + 51) / 121][Stage 127:=====================================>               (86 + 35) / 121][Stage 127:===============================================>    (110 + 11) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.096255085 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404206164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 61) / 121][Stage 128:=============================>                       (68 + 53) / 121][Stage 128:===================================>                 (80 + 41) / 121][Stage 128:==============================================>     (109 + 12) / 121][Stage 128:==================================================>  (116 + 5) / 121]                                                                                [Stage 129:============================>                        (66 + 56) / 122][Stage 129:=================================>                   (78 + 44) / 122][Stage 129:==========================================>         (100 + 22) / 122][Stage 129:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.1932201 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378536171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:==============================>                      (66 + 47) / 113][Stage 130:=====================================>               (79 + 34) / 113][Stage 130:==============================================>     (102 + 11) / 113][Stage 130:===================================================> (109 + 4) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:====================================>                (78 + 36) / 114][Stage 131:==============================================>     (101 + 13) / 114][Stage 131:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.259757629 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379970296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=============================>                       (62 + 51) / 113][Stage 132:====================================>                (77 + 36) / 113][Stage 132:===========================================>         (93 + 20) / 113][Stage 132:===================================================> (109 + 4) / 113]                                                                                [Stage 133:============================>                        (62 + 52) / 114][Stage 133:=================================>                   (73 + 41) / 114][Stage 133:===========================================>         (94 + 20) / 114][Stage 133:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.066179761 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376682007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=============================>                       (64 + 51) / 115][Stage 134:==================================>                  (75 + 40) / 115][Stage 134:========================================>            (88 + 27) / 115][Stage 134:===============================================>    (104 + 11) / 115][Stage 134:==================================================>  (110 + 5) / 115]                                                                                [Stage 135:=================================>                   (73 + 43) / 116][Stage 135:======================================>              (85 + 31) / 116][Stage 135:==========================================>          (94 + 22) / 116][Stage 135:==============================================>     (104 + 12) / 116][Stage 135:====================================================>(114 + 2) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.265355626 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39565422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:>                                                      (0 + 0) / 121][Stage 136:==========================>                          (61 + 60) / 121][Stage 136:=============================>                       (67 + 54) / 121][Stage 136:====================================>                (84 + 37) / 121][Stage 136:==============================================>     (109 + 12) / 121]                                                                                [Stage 137:==========================>                          (62 + 60) / 122][Stage 137:============================>                        (66 + 56) / 122][Stage 137:===========================================>         (99 + 23) / 122][Stage 137:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 2.901762097 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385545291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:================================>                    (70 + 43) / 113][Stage 138:========================================>            (86 + 27) / 113][Stage 138:=============================================>       (98 + 15) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:============================>                        (62 + 52) / 114][Stage 139:=================================>                   (72 + 42) / 114][Stage 139:=========================================>           (89 + 25) / 114][Stage 139:=================================================>   (107 + 7) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.332841718 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378349551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:============================>                        (61 + 52) / 113][Stage 140:==================================>                  (73 + 40) / 113][Stage 140:==========================================>          (90 + 23) / 113][Stage 140:==================================================>  (108 + 5) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (59 + 55) / 114][Stage 141:================================>                    (69 + 45) / 114][Stage 141:=======================================>             (84 + 30) / 114][Stage 141:================================================>    (105 + 9) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.093088159 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38513215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (58 + 55) / 113][Stage 142:=============================>                       (62 + 51) / 113][Stage 142:=====================================>               (81 + 32) / 113][Stage 142:================================================>    (104 + 9) / 113][Stage 142:===================================================> (110 + 3) / 113]                                                                                [Stage 143:============================>                        (62 + 52) / 114][Stage 143:=====================================>               (80 + 34) / 114][Stage 143:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.881694181 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361736865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (73 + 45) / 118][Stage 144:=====================================>               (83 + 35) / 118][Stage 144:===========================================>         (96 + 22) / 118][Stage 144:=================================================>   (111 + 7) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:=================================>                   (76 + 43) / 119][Stage 145:=========================================>           (93 + 26) / 119][Stage 145:===============================================>    (108 + 11) / 119][Stage 145:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.158224584 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401974879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:==============================>                      (69 + 51) / 120][Stage 146:======================================>              (87 + 33) / 120][Stage 146:=============================================>      (106 + 14) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:============================>                        (65 + 56) / 121][Stage 147:==================================>                  (79 + 42) / 121][Stage 147:=========================================>           (95 + 26) / 121][Stage 147:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.121884322 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398521969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (61 + 60) / 121][Stage 148:===============================>                     (73 + 48) / 121][Stage 148:======================================>              (88 + 33) / 121][Stage 148:=================================================>   (114 + 7) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:==============================>                      (70 + 52) / 122][Stage 149:=======================================>             (91 + 31) / 122][Stage 149:=================================================>   (113 + 9) / 122][Stage 149:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.034469214 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378775073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:==============================>                      (66 + 47) / 113][Stage 150:==================================>                  (73 + 40) / 113][Stage 150:==============================================>      (99 + 14) / 113][Stage 150:===================================================> (109 + 4) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:==============================>                      (65 + 49) / 114][Stage 151:===================================>                 (76 + 38) / 114][Stage 151:============================================>        (96 + 18) / 114][Stage 151:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.074003307 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379319475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==============================>                      (66 + 49) / 115][Stage 152:===================================>                 (77 + 38) / 115][Stage 152:===========================================>         (95 + 20) / 115][Stage 152:===============================================>    (104 + 11) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:===============================>                     (70 + 46) / 116][Stage 153:=====================================>               (81 + 35) / 116][Stage 153:==========================================>          (94 + 22) / 116][Stage 153:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.823433258 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403924505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (61 + 59) / 120][Stage 154:===============================>                     (72 + 48) / 120][Stage 154:=======================================>             (90 + 30) / 120][Stage 154:==================================================>  (115 + 5) / 120]                                                                                [Stage 155:===========================>                         (62 + 59) / 121][Stage 155:===============================>                     (72 + 49) / 121][Stage 155:=======================================>             (91 + 30) / 121][Stage 155:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.95456691 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407850136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:===========================>                         (63 + 58) / 121][Stage 156:==================================>                  (79 + 42) / 121][Stage 156:============================================>       (104 + 17) / 121]                                                                                [Stage 157:===========================>                         (64 + 58) / 122][Stage 157:==============================>                      (71 + 51) / 122][Stage 157:=======================================>             (92 + 30) / 122][Stage 157:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 2.838892942 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358861397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (73 + 45) / 118][Stage 158:===================================>                 (78 + 40) / 118][Stage 158:=========================================>           (92 + 26) / 118][Stage 158:============================================>       (102 + 16) / 118][Stage 158:====================================================>(116 + 2) / 118]                                                                                [Stage 159:=================================>                   (75 + 44) / 119][Stage 159:==================================>                  (78 + 41) / 119][Stage 159:======================================>              (86 + 33) / 119][Stage 159:===========================================>        (100 + 19) / 119][Stage 159:==================================================>  (114 + 5) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.564125157 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399775613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (62 + 59) / 121][Stage 160:============================>                        (65 + 56) / 121][Stage 160:=========================================>           (94 + 27) / 121][Stage 160:==============================================>     (108 + 13) / 121][Stage 160:====================================================>(119 + 2) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:=============================>                       (69 + 53) / 122][Stage 161:=======================================>             (90 + 32) / 122][Stage 161:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.203254015 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362189667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (80 + 33) / 113][Stage 162:=======================================>             (84 + 29) / 113][Stage 162:==========================================>          (91 + 22) / 113][Stage 162:===============================================>    (103 + 10) / 113][Stage 162:===================================================> (109 + 4) / 113]                                                                                [Stage 163:===================================>                 (76 + 38) / 114][Stage 163:==========================================>          (91 + 23) / 114][Stage 163:=============================================>       (97 + 17) / 114][Stage 163:=================================================>   (107 + 7) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.057218802 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379442795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (58 + 55) / 113][Stage 164:=============================>                       (62 + 51) / 113][Stage 164:==================================>                  (74 + 39) / 113][Stage 164:=============================================>       (98 + 15) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:===============================>                     (67 + 47) / 114][Stage 165:=========================================>           (89 + 25) / 114][Stage 165:==================================================>  (108 + 6) / 114][Stage 165:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.1764247 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465371358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=======================================>             (85 + 30) / 115][Stage 166:=============================================>       (99 + 16) / 115][Stage 166:=================================================>   (108 + 7) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:=====================================>               (82 + 34) / 116][Stage 167:==========================================>          (92 + 24) / 116][Stage 167:===============================================>    (106 + 10) / 116][Stage 167:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.741848649 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359091417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (70 + 43) / 113][Stage 168:=====================================>               (79 + 34) / 113][Stage 168:==========================================>          (90 + 23) / 113][Stage 168:===============================================>    (103 + 10) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:====================================>                (78 + 36) / 114][Stage 169:========================================>            (88 + 26) / 114][Stage 169:=============================================>      (100 + 14) / 114][Stage 169:=================================================>   (107 + 7) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.115630409 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420970913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:===========================>                         (62 + 59) / 121][Stage 170:====================================>                (84 + 37) / 121][Stage 170:==========================================>         (100 + 21) / 121][Stage 170:===================================================> (117 + 4) / 121]                                                                                [Stage 171:============================>                        (65 + 57) / 122][Stage 171:===============================>                     (73 + 49) / 122][Stage 171:=====================================>               (87 + 35) / 122][Stage 171:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.057126623 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3317008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=======================================>             (86 + 29) / 115][Stage 172:============================================>        (97 + 18) / 115][Stage 172:===================================================> (111 + 4) / 115]                                                                                [Stage 173:======================================>              (84 + 32) / 116][Stage 173:==========================================>          (92 + 24) / 116][Stage 173:=============================================>      (102 + 14) / 116][Stage 173:==================================================>  (111 + 5) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.004190594 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397141246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (61 + 59) / 120][Stage 174:===============================>                     (71 + 49) / 120][Stage 174:========================================>            (91 + 29) / 120][Stage 174:====================================================>(118 + 2) / 120]                                                                                [Stage 175:===========================>                         (62 + 59) / 121][Stage 175:=============================>                       (68 + 53) / 121][Stage 175:=====================================>               (86 + 35) / 121][Stage 175:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.000337483 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358160895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=================================>                   (75 + 43) / 118][Stage 176:===================================>                 (80 + 38) / 118][Stage 176:==========================================>          (95 + 23) / 118][Stage 176:==================================================>  (112 + 6) / 118]                                                                                [Stage 177:=================================>                   (75 + 44) / 119][Stage 177:====================================>                (82 + 37) / 119][Stage 177:=========================================>           (93 + 26) / 119][Stage 177:==============================================>     (107 + 12) / 119][Stage 177:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.203804579 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398163513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (61 + 60) / 121][Stage 178:===============================>                     (73 + 48) / 121][Stage 178:========================================>            (93 + 28) / 121][Stage 178:===============================================>    (111 + 10) / 121]                                                                                [Stage 179:===========================>                         (63 + 59) / 122][Stage 179:================================>                    (74 + 48) / 122][Stage 179:========================================>            (93 + 29) / 122][Stage 179:=================================================>   (113 + 9) / 122][Stage 179:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.20750283 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37631569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==============================>                      (67 + 48) / 115][Stage 180:====================================>                (79 + 36) / 115][Stage 180:===========================================>         (94 + 21) / 115][Stage 180:===============================================>    (104 + 11) / 115][Stage 180:=================================================>   (108 + 7) / 115]                                                                                [Stage 181:==================================>                  (75 + 41) / 116][Stage 181:=====================================>               (83 + 33) / 116][Stage 181:===============================================>    (105 + 11) / 116][Stage 181:==================================================>  (111 + 5) / 116][Stage 181:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.150762206 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446700014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (64 + 57) / 121][Stage 182:=================================>                   (76 + 45) / 121][Stage 182:===========================================>        (101 + 20) / 121][Stage 182:=================================================>   (114 + 7) / 121]                                                                                [Stage 183:==========================>                          (62 + 60) / 122][Stage 183:=================================>                   (76 + 46) / 122][Stage 183:===========================================>         (99 + 23) / 122][Stage 183:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.005523006 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355949131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (79 + 34) / 113][Stage 184:=========================================>           (89 + 24) / 113][Stage 184:===============================================>    (103 + 10) / 113][Stage 184:====================================================>(111 + 2) / 113]                                                                                [Stage 185:======================================>              (83 + 31) / 114][Stage 185:=========================================>           (90 + 24) / 114][Stage 185:==============================================>      (99 + 15) / 114][Stage 185:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.916378388 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362957271 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:================================>                    (73 + 45) / 118][Stage 186:=====================================>               (84 + 34) / 118][Stage 186:=========================================>           (93 + 25) / 118][Stage 186:==================================================>  (113 + 5) / 118][Stage 186:====================================================>(117 + 1) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:=================================>                   (76 + 43) / 119][Stage 187:====================================>                (82 + 37) / 119][Stage 187:=======================================>             (89 + 30) / 119][Stage 187:================================================>    (110 + 9) / 119][Stage 187:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.30731132 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378266696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=================================>                   (72 + 43) / 115][Stage 188:=========================================>           (91 + 24) / 115][Stage 188:=================================================>   (107 + 8) / 115]                                                                                [Stage 189:=====================================>               (81 + 35) / 116][Stage 189:=============================================>       (99 + 17) / 116][Stage 189:==================================================>  (111 + 5) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.635382834 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331911742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=====================================>               (82 + 33) / 115][Stage 190:=============================================>       (99 + 16) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:=======================================>             (86 + 30) / 116][Stage 191:==========================================>          (94 + 22) / 116][Stage 191:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.585986991 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389660228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (61 + 59) / 120][Stage 192:==================================>                  (77 + 43) / 120][Stage 192:===========================================>         (98 + 22) / 120][Stage 192:=================================================>   (112 + 8) / 120]                                                                                [Stage 193:============================>                        (66 + 55) / 121][Stage 193:==================================>                  (78 + 43) / 121][Stage 193:============================================>       (104 + 17) / 121][Stage 193:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.93092681 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350681196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (82 + 33) / 115][Stage 194:========================================>            (88 + 27) / 115][Stage 194:==============================================>     (103 + 12) / 115][Stage 194:===================================================> (111 + 4) / 115]                                                                                [Stage 195:======================================>              (84 + 32) / 116][Stage 195:============================================>        (98 + 18) / 116][Stage 195:=================================================>   (109 + 7) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.671539339 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422802545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 60) / 120][Stage 196:==============================>                      (68 + 52) / 120][Stage 196:=====================================>               (85 + 35) / 120][Stage 196:============================================>       (103 + 17) / 120][Stage 196:===================================================> (116 + 4) / 120]                                                                                [Stage 197:=============================>                       (67 + 54) / 121][Stage 197:===================================>                 (81 + 40) / 121][Stage 197:===========================================>         (99 + 22) / 121][Stage 197:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.026360927 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381433504 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==============================>                      (66 + 49) / 115][Stage 198:==================================>                  (74 + 41) / 115][Stage 198:===========================================>         (94 + 21) / 115][Stage 198:===============================================>    (105 + 10) / 115][Stage 198:===================================================> (111 + 4) / 115][Stage 198:====================================================>(113 + 2) / 115]                                                                                [Stage 199:====================================>                (80 + 36) / 116][Stage 199:==========================================>          (92 + 24) / 116][Stage 199:==============================================>     (104 + 12) / 116][Stage 199:===================================================> (112 + 4) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.295294186 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407024759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:================================>                    (75 + 46) / 121][Stage 200:=========================================>           (94 + 27) / 121][Stage 200:==================================================>  (116 + 5) / 121]                                                                                [Stage 201:=============================>                       (67 + 55) / 122][Stage 201:=================================>                   (77 + 45) / 122][Stage 201:==========================================>          (98 + 24) / 122][Stage 201:==============================================>     (110 + 12) / 122][Stage 201:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.137130808 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m50.375s
user	11m13.144s
sys	0m28.780s
