Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 03:15:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:15:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:15:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:15:43 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 03:15:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:15:55 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522031544-0406).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.405042011 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (46 + 69) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:======================>                                (47 + 69) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=============================================>         (96 + 20) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.664577394 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=132", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=132,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.658345246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=================================>                     (69 + 46) / 115][Stage 2:==================================>                    (73 + 42) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:========================================>              (84 + 31) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:============================================>          (94 + 21) / 115][Stage 2:===================================================>   (107 + 8) / 115][Stage 2:=====================================================> (112 + 3) / 115]                                                                                [Stage 3:=====================================>                 (80 + 36) / 116][Stage 3:========================================>              (85 + 31) / 116][Stage 3:============================================>          (94 + 22) / 116][Stage 3:===============================================>      (103 + 13) / 116][Stage 3:=================================================>    (106 + 10) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.377427888 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.682998988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (69 + 44) / 113][Stage 4:===================================>                   (72 + 41) / 113][Stage 4:=====================================>                 (78 + 35) / 113][Stage 4:=========================================>             (85 + 28) / 113][Stage 4:==============================================>        (95 + 18) / 113][Stage 4:================================================>     (101 + 12) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:====================================>                  (75 + 39) / 114][Stage 5:=====================================>                 (77 + 37) / 114][Stage 5:=======================================>               (82 + 32) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:=================================================>    (104 + 10) / 114][Stage 5:===================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.141116035 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.582100482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===============================>                       (65 + 48) / 113][Stage 6:================================>                      (67 + 46) / 113][Stage 6:=====================================>                 (77 + 36) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:==========================================>            (87 + 26) / 113][Stage 6:==============================================>        (95 + 18) / 113][Stage 6:================================================>     (102 + 11) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:==================================>                    (71 + 43) / 114][Stage 7:====================================>                  (76 + 38) / 114][Stage 7:=========================================>             (86 + 28) / 114][Stage 7:============================================>          (93 + 21) / 114][Stage 7:================================================>     (102 + 12) / 114][Stage 7:=====================================================> (110 + 4) / 114][Stage 7:=====================================================> (111 + 3) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.008942768 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.589621738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (59 + 56) / 115][Stage 8:===============================>                       (66 + 49) / 115][Stage 8:==================================>                    (73 + 42) / 115][Stage 8:====================================>                  (77 + 38) / 115][Stage 8:=====================================>                 (79 + 36) / 115][Stage 8:=============================================>         (95 + 20) / 115][Stage 8:================================================>     (103 + 12) / 115][Stage 8:====================================================>  (110 + 5) / 115][Stage 8:======================================================>(113 + 2) / 115]                                                                                [Stage 9:===================================>                   (74 + 42) / 116][Stage 9:========================================>              (86 + 30) / 116][Stage 9:===========================================>           (92 + 24) / 116][Stage 9:==============================================>        (98 + 18) / 116][Stage 9:===================================================>   (109 + 7) / 116][Stage 9:====================================================>  (111 + 5) / 116][Stage 9:======================================================>(114 + 2) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.750146563 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525601958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:=====================================>                (79 + 34) / 113][Stage 10:========================================>             (84 + 29) / 113][Stage 10:===========================================>          (92 + 21) / 113][Stage 10:=============================================>        (96 + 17) / 113][Stage 10:================================================>    (103 + 10) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:====================================>                 (77 + 37) / 114][Stage 11:========================================>             (86 + 28) / 114][Stage 11:=============================================>        (96 + 18) / 114][Stage 11:==================================================>   (106 + 8) / 114][Stage 11:==================================================>   (107 + 7) / 114][Stage 11:====================================================> (111 + 3) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.477866553 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538953302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===============================>                      (68 + 50) / 118][Stage 12:==================================>                   (75 + 43) / 118][Stage 12:====================================>                 (80 + 38) / 118][Stage 12:=========================================>            (90 + 28) / 118][Stage 12:============================================>         (98 + 20) / 118][Stage 12:==============================================>      (104 + 14) / 118][Stage 12:================================================>    (108 + 10) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:===================================>                  (79 + 40) / 119][Stage 13:=========================================>            (91 + 28) / 119][Stage 13:============================================>         (97 + 22) / 119][Stage 13:==============================================>      (104 + 15) / 119][Stage 13:===================================================>  (114 + 5) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.225886627 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.574621338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (57 + 56) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:===================================>                  (75 + 38) / 113][Stage 14:==========================================>           (89 + 24) / 113][Stage 14:==================================================>   (106 + 7) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:====================================>                 (76 + 38) / 114][Stage 15:===========================================>          (91 + 23) / 114][Stage 15:================================================>    (104 + 10) / 114][Stage 15:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.627801542 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54508297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (61 + 59) / 120][Stage 16:==============================>                       (68 + 52) / 120][Stage 16:======================================>               (86 + 34) / 120][Stage 16:=============================================>       (102 + 18) / 120][Stage 16:=================================================>    (111 + 9) / 120][Stage 16:===================================================>  (115 + 5) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:==============================>                       (68 + 53) / 121][Stage 17:======================================>               (87 + 34) / 121][Stage 17:==============================================>      (107 + 14) / 121][Stage 17:====================================================> (117 + 4) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.838554119 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546380335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:============================>                         (64 + 56) / 120][Stage 18:=====================================>                (84 + 36) / 120][Stage 18:=============================================>       (103 + 17) / 120][Stage 18:====================================================> (116 + 4) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:=============================>                        (65 + 56) / 121][Stage 19:======================================>               (87 + 34) / 121][Stage 19:=============================================>       (103 + 18) / 121][Stage 19:==================================================>   (113 + 8) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.565491213 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506321274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==============================>                       (64 + 51) / 115][Stage 20:==================================>                   (73 + 42) / 115][Stage 20:===========================================>          (92 + 23) / 115][Stage 20:===================================================>  (110 + 5) / 115][Stage 20:=====================================================>(114 + 1) / 115]                                                                                [Stage 21:=================================>                    (71 + 45) / 116][Stage 21:========================================>             (88 + 28) / 116][Stage 21:===============================================>     (104 + 12) / 116][Stage 21:====================================================> (112 + 4) / 116][Stage 21:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.220703273 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.56399766 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:=============================>                        (66 + 55) / 121][Stage 22:=====================================>                (83 + 38) / 121][Stage 22:==============================================>      (107 + 14) / 121][Stage 22:=====================================================>(120 + 1) / 121]                                                                                [Stage 23:===========================>                          (61 + 61) / 122][Stage 23:===========================>                          (63 + 59) / 122][Stage 23:===============================>                      (71 + 51) / 122][Stage 23:=======================================>              (89 + 33) / 122][Stage 23:==============================================>      (108 + 14) / 122][Stage 23:====================================================> (119 + 3) / 122][Stage 23:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.546875364 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438880738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:======================================>               (82 + 33) / 115][Stage 24:=======================================>              (85 + 30) / 115][Stage 24:===============================================>     (104 + 11) / 115][Stage 24:====================================================> (112 + 3) / 115]                                                                                [Stage 25:=======================================>              (84 + 32) / 116][Stage 25:==========================================>           (91 + 25) / 116][Stage 25:==================================================>   (109 + 7) / 116][Stage 25:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.923094382 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521174905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (61 + 60) / 121][Stage 26:==============================>                       (68 + 53) / 121][Stage 26:======================================>               (87 + 34) / 121][Stage 26:============================================>        (101 + 20) / 121][Stage 26:====================================================> (118 + 3) / 121]                                                                                [Stage 27:===========================>                          (63 + 59) / 122][Stage 27:=================================>                    (75 + 47) / 122][Stage 27:============================================>        (102 + 20) / 122][Stage 27:===================================================>  (116 + 6) / 122][Stage 27:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.347248339 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504776582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:=============================>                        (61 + 52) / 113][Stage 28:=================================>                    (71 + 42) / 113][Stage 28:============================================>         (93 + 20) / 113][Stage 28:====================================================> (109 + 4) / 113]                                                                                [Stage 29:=============================>                        (62 + 52) / 114][Stage 29:==================================>                   (73 + 41) / 114][Stage 29:===========================================>          (92 + 22) / 114][Stage 29:===================================================>  (108 + 6) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.211330898 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474672832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (74 + 44) / 118][Stage 30:======================================>               (84 + 34) / 118][Stage 30:============================================>         (98 + 20) / 118][Stage 30:==============================================>      (104 + 14) / 118][Stage 30:===================================================>  (113 + 5) / 118][Stage 30:=====================================================>(117 + 1) / 118]                                                                                [Stage 31:=================================>                    (73 + 46) / 119][Stage 31:====================================>                 (80 + 39) / 119][Stage 31:===========================================>          (95 + 24) / 119][Stage 31:===================================================>  (114 + 5) / 119][Stage 31:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.353290334 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.600608215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (61 + 59) / 120][Stage 32:==============================>                       (67 + 53) / 120][Stage 32:====================================>                 (81 + 39) / 120][Stage 32:===========================================>          (96 + 24) / 120][Stage 32:====================================================> (116 + 4) / 120][Stage 32:=====================================================>(119 + 1) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:==============================>                       (68 + 53) / 121][Stage 33:======================================>               (86 + 35) / 121][Stage 33:============================================>        (102 + 19) / 121][Stage 33:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.237227272 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.533475861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:=============================>                        (67 + 54) / 121][Stage 34:=======================================>              (88 + 33) / 121][Stage 34:===============================================>     (109 + 12) / 121][Stage 34:===================================================>  (116 + 5) / 121]                                                                                [Stage 35:===========================>                          (61 + 61) / 122][Stage 35:==============================>                       (70 + 52) / 122][Stage 35:=====================================>                (85 + 37) / 122][Stage 35:==============================================>      (108 + 14) / 122][Stage 35:====================================================> (118 + 4) / 122][Stage 35:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.574601975 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492846079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (59 + 54) / 113][Stage 36:===============================>                      (65 + 48) / 113][Stage 36:======================================>               (81 + 32) / 113][Stage 36:=============================================>        (95 + 18) / 113][Stage 36:==================================================>   (105 + 8) / 113][Stage 36:====================================================> (110 + 3) / 113]                                                                                [Stage 37:=============================>                        (62 + 52) / 114][Stage 37:====================================>                 (78 + 36) / 114][Stage 37:=============================================>        (97 + 17) / 114][Stage 37:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.375014319 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498728907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:===============================>                      (70 + 51) / 121][Stage 38:========================================>             (90 + 31) / 121][Stage 38:================================================>    (110 + 11) / 121][Stage 38:=====================================================>(120 + 1) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:==============================>                       (69 + 53) / 122][Stage 39:===================================>                  (81 + 41) / 122][Stage 39:==================================================>   (114 + 8) / 122][Stage 39:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.103911431 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467944354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:===============================>                      (65 + 48) / 113][Stage 40:=====================================>                (78 + 35) / 113][Stage 40:===============================================>     (101 + 12) / 113]                                                                                [Stage 41:============================>                         (61 + 53) / 114][Stage 41:===============================>                      (67 + 47) / 114][Stage 41:=========================================>            (88 + 26) / 114][Stage 41:==================================================>   (106 + 8) / 114][Stage 41:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.037365815 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49576567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:==============================>                       (63 + 50) / 113][Stage 42:====================================>                 (77 + 36) / 113][Stage 42:===============================================>      (99 + 14) / 113][Stage 42:===================================================>  (108 + 5) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:================================>                     (69 + 45) / 114][Stage 43:========================================>             (85 + 29) / 114][Stage 43:==============================================>      (101 + 13) / 114][Stage 43:===================================================>  (109 + 5) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.573425858 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412055616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=====================================>                (80 + 35) / 115][Stage 44:=======================================>              (84 + 31) / 115][Stage 44:=============================================>        (96 + 19) / 115][Stage 44:================================================>    (105 + 10) / 115][Stage 44:===================================================>  (109 + 6) / 115]                                                                                [Stage 45:========================================>             (86 + 30) / 116][Stage 45:============================================>         (95 + 21) / 116][Stage 45:=================================================>    (107 + 9) / 116][Stage 45:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.203379623 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459861071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:============================>                         (64 + 57) / 121][Stage 46:==================================>                   (77 + 44) / 121][Stage 46:===========================================>          (97 + 24) / 121][Stage 46:================================================>    (111 + 10) / 121][Stage 46:=====================================================>(120 + 1) / 121]                                                                                [Stage 47:===========================>                          (61 + 61) / 122][Stage 47:==============================>                       (68 + 54) / 122][Stage 47:========================================>             (92 + 30) / 122][Stage 47:================================================>    (112 + 10) / 122][Stage 47:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.189083465 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484584672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:============================>                         (64 + 56) / 120][Stage 48:====================================>                 (81 + 39) / 120][Stage 48:===============================================>     (107 + 13) / 120][Stage 48:=====================================================>(119 + 1) / 120]                                                                                [Stage 49:===========================>                          (61 + 60) / 121][Stage 49:=================================>                    (75 + 46) / 121][Stage 49:===========================================>         (100 + 21) / 121][Stage 49:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.888114413 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488753492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (64 + 56) / 120][Stage 50:===================================>                  (78 + 42) / 120][Stage 50:=============================================>       (102 + 18) / 120][Stage 50:=====================================================>(118 + 2) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:=============================>                        (67 + 54) / 121][Stage 51:=====================================>                (85 + 36) / 121][Stage 51:===============================================>     (108 + 13) / 121][Stage 51:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.012690882 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421951561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:===================================>                  (74 + 39) / 113][Stage 52:=========================================>            (87 + 26) / 113][Stage 52:==================================================>   (106 + 7) / 113][Stage 52:====================================================> (110 + 3) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:================================>                     (69 + 45) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.173045987 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44630868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==========================>                           (60 + 61) / 121][Stage 54:===============================>                      (70 + 51) / 121][Stage 54:=====================================>                (85 + 36) / 121][Stage 54:==================================================>   (114 + 7) / 121]                                                                                [Stage 55:==============================>                       (68 + 54) / 122][Stage 55:===================================>                  (81 + 41) / 122][Stage 55:============================================>        (102 + 20) / 122][Stage 55:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 2.944849635 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419454708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==================================>                   (73 + 42) / 115][Stage 56:=======================================>              (84 + 31) / 115][Stage 56:==============================================>       (99 + 16) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:=================================>                    (72 + 44) / 116][Stage 57:=========================================>            (89 + 27) / 116][Stage 57:===============================================>     (104 + 12) / 116][Stage 57:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.953728973 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412996934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===============================>                      (67 + 48) / 115][Stage 58:=========================================>            (88 + 27) / 115][Stage 58:===============================================>     (102 + 13) / 115][Stage 58:===================================================>  (110 + 5) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:==================================>                   (75 + 41) / 116][Stage 59:============================================>         (95 + 21) / 116][Stage 59:===============================================>     (105 + 11) / 116][Stage 59:===================================================>  (110 + 6) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.226888413 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417086114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:=================================>                    (74 + 44) / 118][Stage 60:=====================================>                (81 + 37) / 118][Stage 60:=======================================>              (87 + 31) / 118][Stage 60:=============================================>       (102 + 16) / 118][Stage 60:=====================================================>(117 + 1) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:==================================>                   (75 + 44) / 119][Stage 61:===================================>                  (78 + 41) / 119][Stage 61:=======================================>              (88 + 31) / 119][Stage 61:================================================>    (108 + 11) / 119][Stage 61:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.542361419 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435769905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:==============================>                       (64 + 49) / 113][Stage 62:======================================>               (80 + 33) / 113][Stage 62:===============================================>      (99 + 14) / 113][Stage 62:====================================================> (109 + 4) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:=================================>                    (71 + 43) / 114][Stage 63:======================================>               (82 + 32) / 114][Stage 63:==================================================>   (106 + 8) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.196238768 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400550011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:=================================>                    (74 + 44) / 118][Stage 64:====================================>                 (79 + 39) / 118][Stage 64:========================================>             (89 + 29) / 118][Stage 64:==================================================>   (110 + 8) / 118][Stage 64:====================================================> (114 + 4) / 118]                                                                                [Stage 65:==================================>                   (75 + 44) / 119][Stage 65:===================================>                  (79 + 40) / 119][Stage 65:=======================================>              (86 + 33) / 119][Stage 65:===========================================>          (96 + 23) / 119][Stage 65:==================================================>   (112 + 7) / 119][Stage 65:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.599963667 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468226983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:===========================>                          (62 + 58) / 120][Stage 66:===============================>                      (71 + 49) / 120][Stage 66:======================================>               (85 + 35) / 120][Stage 66:=================================================>    (111 + 9) / 120]                                                                                [Stage 67:============================>                         (63 + 58) / 121][Stage 67:================================>                     (73 + 48) / 121][Stage 67:============================================>         (99 + 22) / 121][Stage 67:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.041726836 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419577263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:=================================>                    (70 + 43) / 113][Stage 68:=========================================>            (87 + 26) / 113][Stage 68:==================================================>   (105 + 8) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:============================>                         (60 + 54) / 114][Stage 69:================================>                     (69 + 45) / 114][Stage 69:==========================================>           (90 + 24) / 114][Stage 69:===============================================>     (102 + 12) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.139380889 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406424557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:==================================>                   (76 + 42) / 118][Stage 70:=====================================>                (82 + 36) / 118][Stage 70:============================================>         (97 + 21) / 118][Stage 70:=================================================>    (109 + 9) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:==================================>                   (77 + 42) / 119][Stage 71:=====================================>                (83 + 36) / 119][Stage 71:============================================>         (98 + 21) / 119][Stage 71:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.370074336 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384526229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (81 + 32) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:=================================================>    (104 + 9) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:=====================================>                (80 + 34) / 114][Stage 73:===========================================>          (91 + 23) / 114][Stage 73:=================================================>    (105 + 9) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.991520031 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409534291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==============================>                       (65 + 50) / 115][Stage 74:====================================>                 (77 + 38) / 115][Stage 74:==========================================>           (91 + 24) / 115][Stage 74:===============================================>     (104 + 11) / 115][Stage 74:==================================================>   (108 + 7) / 115][Stage 74:====================================================> (112 + 3) / 115]                                                                                [Stage 75:================================>                     (70 + 46) / 116][Stage 75:====================================>                 (78 + 38) / 116][Stage 75:==========================================>           (91 + 25) / 116][Stage 75:===================================================>  (111 + 5) / 116][Stage 75:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.245619812 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37699033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (73 + 40) / 113][Stage 76:=========================================>            (86 + 27) / 113][Stage 76:============================================>         (94 + 19) / 113][Stage 76:==================================================>   (106 + 7) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:===================================>                  (74 + 40) / 114][Stage 77:========================================>             (85 + 29) / 114][Stage 77:==============================================>       (98 + 16) / 114][Stage 77:===================================================>  (109 + 5) / 114][Stage 77:====================================================> (110 + 4) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.331784748 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367954765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (82 + 33) / 115][Stage 78:============================================>         (94 + 21) / 115][Stage 78:==================================================>   (108 + 7) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:======================================>               (83 + 33) / 116][Stage 79:==============================================>       (99 + 17) / 116][Stage 79:===============================================>     (105 + 11) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.760813601 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369659073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:====================================>                 (76 + 37) / 113][Stage 80:=======================================>              (82 + 31) / 113][Stage 80:==========================================>           (88 + 25) / 113][Stage 80:==================================================>   (105 + 8) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:======================================>               (81 + 33) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:==============================================>       (99 + 15) / 114][Stage 81:=====================================================>(112 + 2) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.370857607 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425661786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:=============================>                        (67 + 54) / 121][Stage 82:=====================================>                (85 + 36) / 121][Stage 82:===========================================>         (100 + 21) / 121][Stage 82:=====================================================>(119 + 2) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:==============================>                       (70 + 52) / 122][Stage 83:====================================>                 (82 + 40) / 122][Stage 83:=============================================>       (104 + 18) / 122][Stage 83:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.136949394 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364890927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=====================================>                (80 + 35) / 115][Stage 84:=========================================>            (88 + 27) / 115][Stage 84:===================================================>  (109 + 6) / 115][Stage 84:=====================================================>(113 + 2) / 115]                                                                                [Stage 85:=======================================>              (84 + 32) / 116][Stage 85:=============================================>        (97 + 19) / 116][Stage 85:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.962603254 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381214827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=================================>                    (74 + 44) / 118][Stage 86:======================================>               (84 + 34) / 118][Stage 86:============================================>         (98 + 20) / 118][Stage 86:===================================================>  (112 + 6) / 118]                                                                                [Stage 87:==================================>                   (76 + 43) / 119][Stage 87:=======================================>              (86 + 33) / 119][Stage 87:=============================================>       (102 + 17) / 119][Stage 87:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.086124952 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426047766 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:=================================>                    (75 + 45) / 120][Stage 88:=======================================>              (88 + 32) / 120][Stage 88:============================================>        (100 + 20) / 120][Stage 88:==================================================>   (113 + 7) / 120]                                                                                [Stage 89:===========================>                          (62 + 59) / 121][Stage 89:=================================>                    (75 + 46) / 121][Stage 89:===========================================>          (98 + 23) / 121][Stage 89:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.216520085 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398182828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==================================>                   (73 + 42) / 115][Stage 90:=========================================>            (89 + 26) / 115][Stage 90:==============================================>      (100 + 15) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:================================>                     (70 + 46) / 116][Stage 91:=====================================>                (80 + 36) / 116][Stage 91:==============================================>       (99 + 17) / 116][Stage 91:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.737241953 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569280445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:=============================>                        (65 + 55) / 120][Stage 92:=======================================>              (88 + 32) / 120][Stage 92:==================================================>   (112 + 8) / 120]                                                                                [Stage 93:============================>                         (63 + 58) / 121][Stage 93:===============================>                      (71 + 50) / 121][Stage 93:=======================================>              (89 + 32) / 121][Stage 93:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.979935035 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379571776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=================================>                    (73 + 45) / 118][Stage 94:==================================>                   (76 + 42) / 118][Stage 94:=======================================>              (87 + 31) / 118][Stage 94:==============================================>      (104 + 14) / 118][Stage 94:==================================================>   (110 + 8) / 118]                                                                                [Stage 95:=================================>                    (73 + 46) / 119][Stage 95:=====================================>                (82 + 37) / 119][Stage 95:========================================>             (90 + 29) / 119][Stage 95:================================================>    (109 + 10) / 119][Stage 95:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.255397997 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371643077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (73 + 45) / 118][Stage 96:=====================================>                (82 + 36) / 118][Stage 96:===========================================>          (94 + 24) / 118][Stage 96:==================================================>   (110 + 8) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:=====================================>                (83 + 36) / 119][Stage 97:============================================>         (98 + 21) / 119][Stage 97:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.96087585 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351210816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (83 + 32) / 115][Stage 98:===========================================>          (92 + 23) / 115][Stage 98:=================================================>    (106 + 9) / 115][Stage 98:====================================================> (112 + 3) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:======================================>               (83 + 33) / 116][Stage 99:=========================================>            (89 + 27) / 116][Stage 99:================================================>    (106 + 10) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.805610207 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385710444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=============================>                       (65 + 50) / 115][Stage 100:===================================>                 (77 + 38) / 115][Stage 100:=========================================>           (91 + 24) / 115][Stage 100:=================================================>   (107 + 8) / 115]                                                                                [Stage 101:=====================================>               (81 + 35) / 116][Stage 101:=========================================>           (91 + 25) / 116][Stage 101:===============================================>    (105 + 11) / 116][Stage 101:====================================================>(114 + 2) / 116][Stage 101:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.063879842 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427036205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:==========================>                          (61 + 60) / 121][Stage 102:==============================>                      (70 + 51) / 121][Stage 102:======================================>              (89 + 32) / 121][Stage 102:=================================================>   (114 + 7) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:=============================>                       (68 + 54) / 122][Stage 103:=======================================>             (90 + 32) / 122][Stage 103:===============================================>    (112 + 10) / 122][Stage 103:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.090336966 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376073895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:================================>                    (73 + 45) / 118][Stage 104:==================================>                  (76 + 42) / 118][Stage 104:=======================================>             (89 + 29) / 118][Stage 104:============================================>       (100 + 18) / 118][Stage 104:=================================================>   (111 + 7) / 118][Stage 104:====================================================>(116 + 2) / 118]                                                                                [Stage 105:=================================>                   (75 + 44) / 119][Stage 105:===================================>                 (79 + 40) / 119][Stage 105:=======================================>             (89 + 30) / 119][Stage 105:===========================================>        (100 + 19) / 119][Stage 105:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.597601476 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400365654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:=================================>                   (75 + 43) / 118][Stage 106:======================================>              (86 + 32) / 118][Stage 106:============================================>        (98 + 20) / 118][Stage 106:===================================================> (115 + 3) / 118]                                                                                [Stage 107:=================================>                   (75 + 44) / 119][Stage 107:===================================>                 (80 + 39) / 119][Stage 107:========================================>            (90 + 29) / 119][Stage 107:===============================================>    (109 + 10) / 119][Stage 107:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.196345711 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391427828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:>                                                      (0 + 0) / 118][Stage 108:================================>                    (72 + 46) / 118][Stage 108:===================================>                 (78 + 40) / 118][Stage 108:======================================>              (86 + 32) / 118][Stage 108:============================================>        (98 + 20) / 118][Stage 108:==============================================>     (106 + 12) / 118][Stage 108:==================================================>  (113 + 5) / 118]                                                                                [Stage 109:================================>                    (73 + 46) / 119][Stage 109:=================================>                   (76 + 43) / 119][Stage 109:====================================>                (83 + 36) / 119][Stage 109:========================================>            (92 + 27) / 119][Stage 109:==============================================>     (107 + 12) / 119][Stage 109:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.655290902 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388275993 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (72 + 46) / 118][Stage 110:==================================>                  (76 + 42) / 118][Stage 110:=======================================>             (88 + 30) / 118][Stage 110:================================================>    (109 + 9) / 118]                                                                                [Stage 111:=================================>                   (76 + 43) / 119][Stage 111:=======================================>             (89 + 30) / 119][Stage 111:===========================================>        (100 + 19) / 119][Stage 111:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.818520017 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366401945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:====================================>                (82 + 36) / 118][Stage 112:============================================>        (98 + 20) / 118][Stage 112:==================================================>  (113 + 5) / 118]                                                                                [Stage 113:================================>                    (74 + 45) / 119][Stage 113:====================================>                (82 + 37) / 119][Stage 113:============================================>       (101 + 18) / 119][Stage 113:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.873142658 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376269533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (71 + 44) / 115][Stage 114:=============================================>       (98 + 17) / 115][Stage 114:=================================================>   (107 + 8) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:==================================>                  (76 + 40) / 116][Stage 115:==========================================>          (93 + 23) / 116][Stage 115:==============================================>     (104 + 12) / 116][Stage 115:====================================================>(114 + 2) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.098004888 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36562888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=====================================>               (81 + 32) / 113][Stage 116:===========================================>         (92 + 21) / 113][Stage 116:==============================================>     (101 + 12) / 113][Stage 116:=================================================>   (106 + 7) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:==================================>                  (74 + 40) / 114][Stage 117:=========================================>           (89 + 25) / 114][Stage 117:============================================>        (96 + 18) / 114][Stage 117:===============================================>    (104 + 10) / 114][Stage 117:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.14076891 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372301112 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (73 + 45) / 118][Stage 118:======================================>              (86 + 32) / 118][Stage 118:============================================>       (101 + 17) / 118][Stage 118:===============================================>    (108 + 10) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:====================================>                (82 + 37) / 119][Stage 119:============================================>        (99 + 20) / 119][Stage 119:================================================>    (110 + 9) / 119][Stage 119:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.058195362 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389569216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:==============================>                      (66 + 47) / 113][Stage 120:=========================================>           (88 + 25) / 113][Stage 120:==============================================>     (102 + 11) / 113][Stage 120:===================================================> (109 + 4) / 113]                                                                                [Stage 121:=============================>                       (63 + 51) / 114][Stage 121:==================================>                  (75 + 39) / 114][Stage 121:============================================>        (96 + 18) / 114][Stage 121:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.133758824 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35575525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===================================>                 (76 + 37) / 113][Stage 122:=========================================>           (88 + 25) / 113][Stage 122:============================================>        (95 + 18) / 113][Stage 122:==================================================>  (108 + 5) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:=======================================>             (84 + 30) / 114][Stage 123:============================================>        (95 + 19) / 114][Stage 123:==============================================>     (103 + 11) / 114][Stage 123:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.017848274 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374037978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===============================>                     (68 + 47) / 115][Stage 124:=====================================>               (81 + 34) / 115][Stage 124:===========================================>         (95 + 20) / 115][Stage 124:==================================================>  (110 + 5) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:===============================>                     (70 + 46) / 116][Stage 125:========================================>            (88 + 28) / 116][Stage 125:==============================================>     (104 + 12) / 116][Stage 125:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.8636398 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=90", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=90,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4073637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:============================>                        (65 + 55) / 120][Stage 126:==================================>                  (77 + 43) / 120][Stage 126:===========================================>         (99 + 21) / 120][Stage 126:====================================================>(118 + 2) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:===============================>                     (71 + 50) / 121][Stage 127:======================================>              (88 + 33) / 121][Stage 127:============================================>       (104 + 17) / 121][Stage 127:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.944422346 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429743308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:=============================>                       (66 + 54) / 120][Stage 128:========================================>            (92 + 28) / 120][Stage 128:==================================================>  (114 + 6) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:==================================>                  (79 + 42) / 121][Stage 129:==========================================>          (98 + 23) / 121][Stage 129:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.079143896 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372573529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (72 + 46) / 118][Stage 130:================================>                    (73 + 45) / 118][Stage 130:==================================>                  (77 + 41) / 118][Stage 130:=======================================>             (88 + 30) / 118][Stage 130:==============================================>     (106 + 12) / 118][Stage 130:====================================================>(117 + 1) / 118]                                                                                [Stage 131:================================>                    (74 + 45) / 119][Stage 131:=================================>                   (75 + 44) / 119][Stage 131:===================================>                 (79 + 40) / 119][Stage 131:=======================================>             (89 + 30) / 119][Stage 131:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.311645119 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370193697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:==================================>                  (76 + 42) / 118][Stage 132:=======================================>             (87 + 31) / 118][Stage 132:=========================================>           (93 + 25) / 118][Stage 132:=================================================>   (111 + 7) / 118][Stage 132:====================================================>(117 + 1) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:=================================>                   (76 + 43) / 119][Stage 133:========================================>            (90 + 29) / 119][Stage 133:=============================================>      (103 + 16) / 119][Stage 133:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.228157727 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38315772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:===============================>                     (68 + 45) / 113][Stage 134:=====================================>               (81 + 32) / 113][Stage 134:==================================================>  (108 + 5) / 113][Stage 134:===================================================> (110 + 3) / 113]                                                                                [Stage 135:=============================>                       (63 + 51) / 114][Stage 135:====================================>                (78 + 36) / 114][Stage 135:================================================>    (105 + 9) / 114][Stage 135:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.174722842 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386977937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:=============================>                       (63 + 50) / 113][Stage 136:========================================>            (86 + 27) / 113][Stage 136:==============================================>     (100 + 13) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:================================>                    (70 + 44) / 114][Stage 137:========================================>            (87 + 27) / 114][Stage 137:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.009718676 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360731309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=================================>                   (71 + 42) / 113][Stage 138:=======================================>             (85 + 28) / 113][Stage 138:==========================================>          (91 + 22) / 113][Stage 138:=================================================>   (105 + 8) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:====================================>                (78 + 36) / 114][Stage 139:=========================================>           (89 + 25) / 114][Stage 139:===========================================>         (94 + 20) / 114][Stage 139:=================================================>   (106 + 8) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.10438967 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351124302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=================================>                   (71 + 42) / 113][Stage 140:======================================>              (83 + 30) / 113][Stage 140:============================================>        (94 + 19) / 113][Stage 140:==================================================>  (107 + 6) / 113]                                                                                [Stage 141:=====================================>               (80 + 34) / 114][Stage 141:==========================================>          (92 + 22) / 114][Stage 141:===============================================>    (104 + 10) / 114][Stage 141:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.752221997 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35301661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==================================>                  (74 + 39) / 113][Stage 142:======================================>              (83 + 30) / 113][Stage 142:===========================================>         (92 + 21) / 113][Stage 142:================================================>    (104 + 9) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:==================================>                  (75 + 39) / 114][Stage 143:=======================================>             (85 + 29) / 114][Stage 143:===========================================>         (93 + 21) / 114][Stage 143:==================================================>  (108 + 6) / 114][Stage 143:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.992378376 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362468395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:=====================================>               (84 + 34) / 118][Stage 144:===========================================>         (96 + 22) / 118][Stage 144:=================================================>   (111 + 7) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:==================================>                  (77 + 42) / 119][Stage 145:=======================================>             (88 + 31) / 119][Stage 145:=============================================>      (104 + 15) / 119][Stage 145:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.236702853 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383737038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:===========================>                         (59 + 54) / 113][Stage 146:================================>                    (69 + 44) / 113][Stage 146:=======================================>             (84 + 29) / 113][Stage 146:==================================================>  (107 + 6) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:==============================>                      (65 + 49) / 114][Stage 147:====================================>                (78 + 36) / 114][Stage 147:=========================================>           (89 + 25) / 114][Stage 147:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.238117374 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396083216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:============================>                        (66 + 55) / 121][Stage 148:====================================>                (84 + 37) / 121][Stage 148:=================================================>   (114 + 7) / 121][Stage 148:====================================================>(120 + 1) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:=============================>                       (67 + 55) / 122][Stage 149:=====================================>               (87 + 35) / 122][Stage 149:===============================================>    (112 + 10) / 122][Stage 149:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.146380344 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40299103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:=============================>                       (67 + 53) / 120][Stage 150:====================================>                (83 + 37) / 120][Stage 150:=============================================>      (105 + 15) / 120][Stage 150:==================================================>  (114 + 6) / 120]                                                                                [Stage 151:==========================>                          (61 + 60) / 121][Stage 151:=============================>                       (68 + 53) / 121][Stage 151:===================================>                 (82 + 39) / 121][Stage 151:==============================================>     (108 + 13) / 121][Stage 151:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.016062449 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388527199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:==============================>                      (65 + 48) / 113][Stage 152:======================================>              (83 + 30) / 113][Stage 152:=================================================>   (105 + 8) / 113][Stage 152:===================================================> (109 + 4) / 113]                                                                                [Stage 153:=============================>                       (63 + 51) / 114][Stage 153:==================================>                  (74 + 40) / 114][Stage 153:=============================================>       (98 + 16) / 114][Stage 153:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.057279982 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393403202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (63 + 57) / 120][Stage 154:===============================>                     (72 + 48) / 120][Stage 154:======================================>              (87 + 33) / 120][Stage 154:==================================================>  (114 + 6) / 120]                                                                                [Stage 155:=============================>                       (68 + 53) / 121][Stage 155:=================================>                   (77 + 44) / 121][Stage 155:=========================================>           (94 + 27) / 121][Stage 155:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.976524886 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33725975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:======================================>              (83 + 32) / 115][Stage 156:========================================>            (87 + 28) / 115][Stage 156:===============================================>    (104 + 11) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:=====================================>               (82 + 34) / 116][Stage 157:=========================================>           (90 + 26) / 116][Stage 157:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.538857186 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336486626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=======================================>             (85 + 30) / 115][Stage 158:==========================================>          (93 + 22) / 115][Stage 158:===============================================>    (104 + 11) / 115]                                                                                [Stage 159:======================================>              (85 + 31) / 116][Stage 159:========================================>            (89 + 27) / 116][Stage 159:==============================================>     (104 + 12) / 116][Stage 159:==================================================>  (111 + 5) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.959377653 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368277298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==================================>                  (74 + 41) / 115][Stage 160:======================================>              (84 + 31) / 115][Stage 160:=============================================>       (98 + 17) / 115][Stage 160:=================================================>   (107 + 8) / 115]                                                                                [Stage 161:================================>                    (72 + 44) / 116][Stage 161:========================================>            (89 + 27) / 116][Stage 161:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.685104664 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386564726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:==============================>                      (66 + 47) / 113][Stage 162:=========================================>           (89 + 24) / 113][Stage 162:================================================>    (104 + 9) / 113][Stage 162:====================================================>(111 + 2) / 113]                                                                                [Stage 163:===========================>                         (59 + 55) / 114][Stage 163:=============================>                       (64 + 50) / 114][Stage 163:=====================================>               (81 + 33) / 114][Stage 163:==============================================>     (103 + 11) / 114][Stage 163:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.131776515 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332373543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=====================================>               (82 + 33) / 115][Stage 164:========================================>            (88 + 27) / 115][Stage 164:==============================================>     (102 + 13) / 115][Stage 164:====================================================>(113 + 2) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:=====================================>               (83 + 33) / 116][Stage 165:==========================================>          (92 + 24) / 116][Stage 165:===============================================>    (106 + 10) / 116][Stage 165:===================================================> (112 + 4) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.048923269 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410762841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:===========================>                         (63 + 58) / 121][Stage 166:===================================>                 (81 + 40) / 121][Stage 166:=============================================>      (106 + 15) / 121][Stage 166:===================================================> (118 + 3) / 121]                                                                                [Stage 167:============================>                        (66 + 56) / 122][Stage 167:===============================>                     (73 + 49) / 122][Stage 167:===============================================>    (112 + 10) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.059780156 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35051719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===================================>                 (76 + 37) / 113][Stage 168:=======================================>             (85 + 28) / 113][Stage 168:==========================================>          (91 + 22) / 113][Stage 168:================================================>    (104 + 9) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:=====================================>               (80 + 34) / 114][Stage 169:=========================================>           (89 + 25) / 114][Stage 169:=============================================>       (98 + 16) / 114][Stage 169:================================================>    (105 + 9) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.149487683 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394580022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:================================>                    (69 + 44) / 113][Stage 170:=======================================>             (85 + 28) / 113][Stage 170:===============================================>    (103 + 10) / 113][Stage 170:===================================================> (110 + 3) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:==============================>                      (65 + 49) / 114][Stage 171:=======================================>             (84 + 30) / 114][Stage 171:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.923503709 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380599414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===============================>                     (68 + 47) / 115][Stage 172:===================================>                 (77 + 38) / 115][Stage 172:=============================================>      (100 + 15) / 115][Stage 172:==================================================>  (110 + 5) / 115]                                                                                [Stage 173:===================================>                 (77 + 39) / 116][Stage 173:==========================================>          (94 + 22) / 116][Stage 173:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.66932466 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=114", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=114,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400050627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:============================>                        (64 + 57) / 121][Stage 174:====================================>                (84 + 37) / 121][Stage 174:===========================================>         (99 + 22) / 121][Stage 174:===================================================> (118 + 3) / 121]                                                                                [Stage 175:==========================>                          (61 + 61) / 122][Stage 175:============================>                        (65 + 57) / 122][Stage 175:=====================================>               (86 + 36) / 122][Stage 175:============================================>       (105 + 17) / 122][Stage 175:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.275528853 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363738811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (73 + 45) / 118][Stage 176:===================================>                 (79 + 39) / 118][Stage 176:=======================================>             (88 + 30) / 118][Stage 176:=============================================>      (104 + 14) / 118][Stage 176:====================================================>(117 + 1) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:==================================>                  (77 + 42) / 119][Stage 177:======================================>              (86 + 33) / 119][Stage 177:============================================>       (101 + 18) / 119][Stage 177:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.203480541 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364972977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (73 + 45) / 118][Stage 178:=================================>                   (74 + 44) / 118][Stage 178:===================================>                 (79 + 39) / 118][Stage 178:===========================================>         (96 + 22) / 118][Stage 178:===============================================>    (108 + 10) / 118][Stage 178:====================================================>(116 + 2) / 118]                                                                                [Stage 179:================================>                    (73 + 46) / 119][Stage 179:=================================>                   (75 + 44) / 119][Stage 179:=====================================>               (84 + 35) / 119][Stage 179:========================================>            (91 + 28) / 119][Stage 179:============================================>        (99 + 20) / 119][Stage 179:==================================================>  (114 + 5) / 119][Stage 179:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.594342196 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382786122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:===============================>                     (68 + 45) / 113][Stage 180:====================================>                (77 + 36) / 113][Stage 180:===========================================>         (93 + 20) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:===========================>                         (59 + 55) / 114][Stage 181:===============================>                     (68 + 46) / 114][Stage 181:======================================>              (83 + 31) / 114][Stage 181:=============================================>       (98 + 16) / 114][Stage 181:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.321490776 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398526956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:=================================>                   (74 + 44) / 118][Stage 182:===================================>                 (80 + 38) / 118][Stage 182:=========================================>           (93 + 25) / 118][Stage 182:=============================================>      (103 + 15) / 118][Stage 182:===================================================> (114 + 4) / 118]                                                                                [Stage 183:================================>                    (74 + 45) / 119][Stage 183:==================================>                  (77 + 42) / 119][Stage 183:=====================================>               (84 + 35) / 119][Stage 183:=========================================>           (93 + 26) / 119][Stage 183:============================================>       (101 + 18) / 119][Stage 183:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.704086409 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384285087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=================================>                   (73 + 42) / 115][Stage 184:=======================================>             (86 + 29) / 115][Stage 184:=============================================>      (100 + 15) / 115][Stage 184:===================================================> (111 + 4) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:====================================>                (80 + 36) / 116][Stage 185:==========================================>          (93 + 23) / 116][Stage 185:===============================================>    (106 + 10) / 116][Stage 185:==================================================>  (110 + 6) / 116][Stage 185:====================================================>(114 + 2) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.575832225 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356936935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:===================================>                 (78 + 40) / 118][Stage 186:======================================>              (86 + 32) / 118][Stage 186:===============================================>    (107 + 11) / 118][Stage 186:====================================================>(117 + 1) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:==================================>                  (77 + 42) / 119][Stage 187:======================================>              (87 + 32) / 119][Stage 187:==========================================>          (96 + 23) / 119][Stage 187:=================================================>   (112 + 7) / 119][Stage 187:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.351421061 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394684856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:============================>                        (60 + 53) / 113][Stage 188:==================================>                  (74 + 39) / 113][Stage 188:============================================>        (94 + 19) / 113][Stage 188:=================================================>   (106 + 7) / 113]                                                                                [Stage 189:============================>                        (62 + 52) / 114][Stage 189:==================================>                  (75 + 39) / 114][Stage 189:========================================>            (88 + 26) / 114][Stage 189:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.034966395 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365296493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (72 + 46) / 118][Stage 190:===================================>                 (79 + 39) / 118][Stage 190:======================================>              (85 + 33) / 118][Stage 190:============================================>       (102 + 16) / 118][Stage 190:====================================================>(116 + 2) / 118]                                                                                [Stage 191:================================>                    (73 + 46) / 119][Stage 191:=================================>                   (76 + 43) / 119][Stage 191:====================================>                (81 + 38) / 119][Stage 191:===========================================>         (97 + 22) / 119][Stage 191:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.117112144 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357201994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:==================================>                  (76 + 42) / 118][Stage 192:========================================>            (91 + 27) / 118][Stage 192:=============================================>      (104 + 14) / 118][Stage 192:====================================================>(117 + 1) / 118]                                                                                [Stage 193:================================>                    (73 + 46) / 119][Stage 193:==================================>                  (77 + 42) / 119][Stage 193:=========================================>           (93 + 26) / 119][Stage 193:=============================================>      (105 + 14) / 119][Stage 193:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.035670747 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382579336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==================================>                  (75 + 40) / 115][Stage 194:==========================================>          (93 + 22) / 115][Stage 194:==============================================>     (103 + 12) / 115][Stage 194:====================================================>(113 + 2) / 115]                                                                                [Stage 195:=====================================>               (82 + 34) / 116][Stage 195:===========================================>         (95 + 21) / 116][Stage 195:==================================================>  (110 + 6) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.034303735 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386255052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:======================================>              (83 + 32) / 115][Stage 196:========================================>            (88 + 27) / 115][Stage 196:=============================================>      (101 + 14) / 115][Stage 196:==================================================>  (109 + 6) / 115]                                                                                [Stage 197:=====================================>               (83 + 33) / 116][Stage 197:========================================>            (88 + 28) / 116][Stage 197:===========================================>         (96 + 20) / 116][Stage 197:==================================================>  (110 + 6) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.160114953 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428198813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 60) / 120][Stage 198:=============================>                       (67 + 53) / 120][Stage 198:====================================>                (82 + 38) / 120][Stage 198:===========================================>         (99 + 21) / 120]                                                                                [Stage 199:===========================>                         (63 + 58) / 121][Stage 199:=================================>                   (77 + 44) / 121][Stage 199:=======================================>             (90 + 31) / 121][Stage 199:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.847615729 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351532245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===================================>                 (75 + 38) / 113][Stage 200:=======================================>             (84 + 29) / 113][Stage 200:==============================================>      (99 + 14) / 113][Stage 200:===============================================>    (103 + 10) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:===================================>                 (76 + 38) / 114][Stage 201:=======================================>             (86 + 28) / 114][Stage 201:============================================>        (95 + 19) / 114][Stage 201:==============================================>     (103 + 11) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.988152978 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 03:25:21 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.12:52878) dropped. Could not find BlockManagerMaster.

real	9m56.031s
user	11m40.776s
sys	0m28.752s
