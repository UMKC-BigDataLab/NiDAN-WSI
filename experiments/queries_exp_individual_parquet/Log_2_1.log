Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/27 00:42:26 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 00:42:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 00:42:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 00:42:42 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/27 00:42:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 00:42:54 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170427004243-0116).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-core s 8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf s park.driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/slide2.prqt"
dataSource: String = /nidan/parquet/slide2.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0  and imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0  and imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0  and imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0  and imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001239962 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@4b4a3114

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.146166831 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.745099685 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (b ytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 125][Stage 1:===>                                                   (7 + 112) / 125][Stage 1:===>                                                   (8 + 112) / 125][Stage 1:====>                                                 (10 + 112) / 125][Stage 1:=====>                                                (13 + 112) / 125][Stage 1:======>                                               (14 + 111) / 125][Stage 1:======>                                               (15 + 110) / 125][Stage 1:===========>                                           (26 + 99) / 125][Stage 1:==============================>                        (69 + 56) / 125][Stage 1:==========================================>            (96 + 29) / 125][Stage 1:===================================================>   (118 + 7) / 125][Stage 1:=====================================================> (121 + 4) / 125][Stage 1:=====================================================> (122 + 3) / 125][Stage 1:======================================================>(123 + 2) / 125][Stage 1:======================================================>(124 + 1) / 125]                                                                                [Stage 2:>                                                      (0 + 112) / 126][Stage 2:>                                                      (1 + 112) / 126][Stage 2:==>                                                    (5 + 112) / 126][Stage 2:======>                                               (14 + 112) / 126][Stage 2:=============>                                         (31 + 95) / 126][Stage 2:=====================>                                 (49 + 77) / 126][Stage 2:===============================>                       (73 + 53) / 126][Stage 2:=========================================>             (94 + 32) / 126][Stage 2:===============================================>      (110 + 16) / 126][Stage 2:================================================>     (114 + 12) / 126][Stage 2:====================================================>  (120 + 6) / 126][Stage 2:=====================================================> (122 + 4) / 126][Stage 2:=====================================================> (123 + 3) / 126][Stage 2:======================================================>(124 + 2) / 126][Stage 2:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 13.961774037 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes,  index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:>                                                      (0 + 112) / 125][Stage 3:>                                                      (1 + 112) / 125][Stage 3:==>                                                    (5 + 112) / 125][Stage 3:====>                                                 (11 + 112) / 125][Stage 3:=============>                                         (30 + 95) / 125][Stage 3:=======================>                               (54 + 71) / 125][Stage 3:====================================>                  (82 + 43) / 125][Stage 3:==========================================>            (97 + 28) / 125][Stage 3:================================================>     (112 + 13) / 125][Stage 3:===================================================>   (117 + 8) / 125][Stage 3:=====================================================> (121 + 4) / 125][Stage 3:======================================================>(123 + 2) / 125][Stage 3:======================================================>(124 + 1) / 125]                                                                                [Stage 4:>                                                      (2 + 112) / 126][Stage 4:==>                                                    (6 + 112) / 126][Stage 4:===>                                                   (8 + 112) / 126][Stage 4:============>                                          (28 + 98) / 126][Stage 4:========================>                              (55 + 71) / 126][Stage 4:=================================>                     (76 + 50) / 126][Stage 4:==========================================>            (97 + 29) / 126][Stage 4:=============================================>        (107 + 19) / 126][Stage 4:=================================================>    (115 + 11) / 126][Stage 4:====================================================>  (121 + 5) / 126][Stage 4:=====================================================> (123 + 3) / 126][Stage 4:======================================================>(124 + 2) / 126][Stage 4:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 8.755548576 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:>                                                      (0 + 112) / 125][Stage 5:>                                                      (2 + 112) / 125][Stage 5:==>                                                    (6 + 112) / 125][Stage 5:=====>                                                (13 + 112) / 125][Stage 5:==============>                                        (33 + 92) / 125][Stage 5:======================>                                (52 + 73) / 125][Stage 5:=================================>                     (75 + 50) / 125][Stage 5:===========================================>           (99 + 26) / 125][Stage 5:=============================================>        (106 + 19) / 125][Stage 5:================================================>     (113 + 12) / 125][Stage 5:=====================================================> (121 + 4) / 125][Stage 5:=====================================================> (122 + 3) / 125][Stage 5:======================================================>(123 + 2) / 125][Stage 5:======================================================>(124 + 1) / 125]                                                                                [Stage 6:>                                                      (2 + 112) / 126][Stage 6:====>                                                 (11 + 112) / 126][Stage 6:=========>                                            (22 + 104) / 126][Stage 6:=================>                                     (40 + 86) / 126][Stage 6:========================>                              (56 + 70) / 126][Stage 6:==================================>                    (80 + 46) / 126][Stage 6:==========================================>            (97 + 29) / 126][Stage 6:===============================================>      (110 + 16) / 126][Stage 6:===================================================>   (118 + 8) / 126][Stage 6:=====================================================> (122 + 4) / 126][Stage 6:=====================================================> (123 + 3) / 126][Stage 6:======================================================>(124 + 2) / 126][Stage 6:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 8.787229126 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:>                                                      (0 + 112) / 125][Stage 7:=>                                                     (4 + 112) / 125][Stage 7:====>                                                 (11 + 112) / 125][Stage 7:==============>                                        (32 + 93) / 125][Stage 7:==========================>                            (61 + 64) / 125][Stage 7:====================================>                  (82 + 43) / 125][Stage 7:============================================>         (103 + 22) / 125][Stage 7:==============================================>       (108 + 17) / 125][Stage 7:=================================================>    (115 + 10) / 125][Stage 7:=====================================================> (121 + 4) / 125][Stage 7:=====================================================> (122 + 3) / 125][Stage 7:======================================================>(124 + 1) / 125]                                                                                [Stage 8:>                                                      (2 + 112) / 126][Stage 8:======>                                               (14 + 112) / 126][Stage 8:===========>                                           (27 + 99) / 126][Stage 8:===========================>                           (62 + 64) / 126][Stage 8:====================================>                  (83 + 43) / 126][Stage 8:=========================================>             (96 + 30) / 126][Stage 8:=============================================>        (106 + 20) / 126][Stage 8:===============================================>      (111 + 15) / 126][Stage 8:===================================================>   (117 + 9) / 126][Stage 8:=====================================================> (123 + 3) / 126][Stage 8:======================================================>(124 + 2) / 126]                                                                                Time elapsed: 7.695636584 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:>                                                      (1 + 112) / 125][Stage 9:=>                                                     (4 + 112) / 125][Stage 9:=====>                                                (13 + 112) / 125][Stage 9:============>                                          (29 + 96) / 125][Stage 9:=======================>                               (54 + 71) / 125][Stage 9:=================================>                     (77 + 48) / 125][Stage 9:=======================================>               (89 + 36) / 125][Stage 9:===========================================>          (101 + 24) / 125][Stage 9:===============================================>      (111 + 14) / 125][Stage 9:===================================================>   (116 + 9) / 125][Stage 9:====================================================>  (120 + 5) / 125][Stage 9:=====================================================> (122 + 3) / 125][Stage 9:======================================================>(123 + 2) / 125][Stage 9:======================================================>(124 + 1) / 125]                                                                                [Stage 10:>                                                     (0 + 112) / 126][Stage 10:===>                                                  (8 + 112) / 126][Stage 10:======>                                              (15 + 111) / 126][Stage 10:===============>                                      (37 + 89) / 126][Stage 10:===========================>                          (64 + 62) / 126][Stage 10:=====================================>                (88 + 38) / 126][Stage 10:==========================================>          (101 + 25) / 126][Stage 10:=============================================>       (107 + 19) / 126][Stage 10:=============================================>       (109 + 17) / 126][Stage 10:===============================================>     (114 + 12) / 126][Stage 10:===================================================>  (121 + 5) / 126][Stage 10:=====================================================>(124 + 2) / 126][Stage 10:=====================================================>(125 + 1) / 126]                                                                                Time elapsed: 8.335345627 seconds

scala> 

scala> 

scala> :quit
17/04/27 00:44:06 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.18:35302) dropped. RpcEnv already stopped.
17/04/27 00:44:09 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
11.2 G  /nidan/parquet/slide1.prqt
14.9 G  /nidan/parquet/slide2.prqt
