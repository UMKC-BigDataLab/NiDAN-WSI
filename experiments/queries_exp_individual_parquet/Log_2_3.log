Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/27 00:45:59 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 00:46:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 00:46:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 00:46:13 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/27 00:46:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 00:46:26 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170427004615-0118).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-core s 8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf s park.driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/slide2.prqt"
dataSource: String = /nidan/parquet/slide2.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0  and imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0  and imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0  and imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0  and imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001249222 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@664217a8

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.13213984 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.74184834 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (b ytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 125][Stage 1:==>                                                    (5 + 112) / 125][Stage 1:==>                                                    (6 + 112) / 125][Stage 1:===>                                                   (8 + 112) / 125][Stage 1:=====>                                                (13 + 112) / 125][Stage 1:======>                                               (14 + 111) / 125][Stage 1:======>                                               (15 + 110) / 125][Stage 1:=========>                                            (23 + 102) / 125][Stage 1:==========================>                            (61 + 64) / 125][Stage 1:======================================>                (88 + 37) / 125][Stage 1:================================================>     (113 + 12) / 125][Stage 1:====================================================>  (119 + 6) / 125][Stage 1:====================================================>  (120 + 5) / 125][Stage 1:=====================================================> (121 + 4) / 125][Stage 1:======================================================>(123 + 2) / 125][Stage 1:======================================================>(124 + 1) / 125]                                                                                [Stage 2:>                                                      (0 + 112) / 126][Stage 2:>                                                      (1 + 112) / 126][Stage 2:===>                                                   (7 + 112) / 126][Stage 2:======>                                               (15 + 111) / 126][Stage 2:===========>                                           (27 + 99) / 126][Stage 2:=====================>                                 (50 + 76) / 126][Stage 2:==================================>                    (78 + 48) / 126][Stage 2:=========================================>             (96 + 30) / 126][Stage 2:==============================================>       (108 + 18) / 126][Stage 2:================================================>     (113 + 13) / 126][Stage 2:====================================================>  (120 + 6) / 126][Stage 2:====================================================>  (121 + 5) / 126][Stage 2:=====================================================> (122 + 4) / 126][Stage 2:=====================================================> (123 + 3) / 126][Stage 2:======================================================>(124 + 2) / 126][Stage 2:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 14.337015994 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes,  index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:>                                                      (0 + 112) / 125][Stage 3:>                                                      (2 + 112) / 125][Stage 3:===>                                                   (7 + 112) / 125][Stage 3:======>                                               (15 + 110) / 125][Stage 3:==============>                                        (34 + 91) / 125][Stage 3:========================>                              (56 + 69) / 125][Stage 3:=================================>                     (76 + 49) / 125][Stage 3:===========================================>           (99 + 26) / 125][Stage 3:===============================================>      (111 + 14) / 125][Stage 3:===================================================>   (116 + 9) / 125][Stage 3:====================================================>  (120 + 5) / 125][Stage 3:======================================================>(123 + 2) / 125][Stage 3:======================================================>(124 + 1) / 125]                                                                                [Stage 4:>                                                      (1 + 112) / 126][Stage 4:=>                                                     (3 + 112) / 126][Stage 4:==>                                                    (5 + 112) / 126][Stage 4:======>                                               (16 + 110) / 126][Stage 4:==================>                                    (42 + 84) / 126][Stage 4:==================================>                    (78 + 48) / 126][Stage 4:===========================================>          (102 + 24) / 126][Stage 4:================================================>     (113 + 13) / 126][Stage 4:===================================================>   (117 + 9) / 126][Stage 4:====================================================>  (121 + 5) / 126][Stage 4:=====================================================> (123 + 3) / 126][Stage 4:======================================================>(124 + 2) / 126]                                                                                Time elapsed: 8.031838113 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:>                                                      (0 + 112) / 125][Stage 5:>                                                      (2 + 112) / 125][Stage 5:==>                                                    (6 + 112) / 125][Stage 5:=======>                                              (17 + 108) / 125][Stage 5:==========>                                           (24 + 101) / 125][Stage 5:=========================>                             (57 + 68) / 125][Stage 5:=======================================>               (89 + 36) / 125][Stage 5:==============================================>       (107 + 18) / 125][Stage 5:=================================================>    (115 + 10) / 125][Stage 5:===================================================>   (118 + 7) / 125][Stage 5:====================================================>  (119 + 6) / 125][Stage 5:=====================================================> (122 + 3) / 125][Stage 5:======================================================>(123 + 2) / 125][Stage 5:======================================================>(124 + 1) / 125]                                                                                [Stage 6:>                                                      (1 + 112) / 126][Stage 6:===>                                                   (7 + 112) / 126][Stage 6:========>                                             (19 + 107) / 126][Stage 6:===================>                                   (44 + 82) / 126][Stage 6:==============================>                        (69 + 57) / 126][Stage 6:======================================>                (89 + 37) / 126][Stage 6:============================================>         (104 + 22) / 126][Stage 6:================================================>     (114 + 12) / 126][Stage 6:====================================================>  (121 + 5) / 126][Stage 6:=====================================================> (123 + 3) / 126][Stage 6:======================================================>(124 + 2) / 126][Stage 6:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 8.535293814 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:>                                                      (0 + 112) / 125][Stage 7:===>                                                   (9 + 112) / 125][Stage 7:========>                                             (19 + 106) / 125][Stage 7:=================>                                     (39 + 86) / 125][Stage 7:========================>                              (56 + 69) / 125][Stage 7:====================================>                  (82 + 43) / 125][Stage 7:===========================================>          (101 + 24) / 125][Stage 7:===============================================>      (109 + 16) / 125][Stage 7:=================================================>    (114 + 11) / 125][Stage 7:====================================================>  (119 + 6) / 125][Stage 7:=====================================================> (122 + 3) / 125][Stage 7:======================================================>(123 + 2) / 125][Stage 7:======================================================>(124 + 1) / 125]                                                                                [Stage 8:>                                                      (1 + 112) / 126][Stage 8:===>                                                   (7 + 112) / 126][Stage 8:=====>                                                (13 + 112) / 126][Stage 8:=============>                                         (30 + 96) / 126][Stage 8:========================>                              (55 + 71) / 126][Stage 8:===================================>                   (82 + 44) / 126][Stage 8:==========================================>           (100 + 26) / 126][Stage 8:===============================================>      (110 + 16) / 126][Stage 8:===================================================>   (117 + 9) / 126][Stage 8:====================================================>  (121 + 5) / 126][Stage 8:=====================================================> (122 + 4) / 126][Stage 8:=====================================================> (123 + 3) / 126][Stage 8:======================================================>(124 + 2) / 126][Stage 8:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 8.529626555 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:>                                                      (0 + 112) / 125][Stage 9:===>                                                   (8 + 112) / 125][Stage 9:=========>                                            (21 + 104) / 125][Stage 9:==================>                                    (41 + 84) / 125][Stage 9:============================>                          (64 + 61) / 125][Stage 9:======================================>                (87 + 38) / 125][Stage 9:===========================================>          (100 + 25) / 125][Stage 9:============================================>         (104 + 21) / 125][Stage 9:=================================================>    (114 + 11) / 125][Stage 9:====================================================>  (119 + 6) / 125][Stage 9:======================================================>(123 + 2) / 125][Stage 9:======================================================>(124 + 1) / 125]                                                                                [Stage 10:>                                                     (2 + 112) / 126][Stage 10:===>                                                  (7 + 112) / 126][Stage 10:=========>                                           (23 + 103) / 126][Stage 10:==================>                                   (43 + 83) / 126][Stage 10:=============================>                        (68 + 58) / 126][Stage 10:=======================================>              (92 + 34) / 126][Stage 10:==========================================>          (101 + 25) / 126][Stage 10:==============================================>      (110 + 16) / 126][Stage 10:================================================>    (115 + 11) / 126][Stage 10:===================================================>  (119 + 7) / 126][Stage 10:====================================================> (122 + 4) / 126][Stage 10:====================================================> (123 + 3) / 126][Stage 10:=====================================================>(124 + 2) / 126][Stage 10:=====================================================>(125 + 1) / 126]                                                                                Time elapsed: 8.236705896 seconds

scala> 

scala> 

scala> :quit
17/04/27 00:47:37 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.10:57172) dropped. RpcEnv already stopped.
17/04/27 00:47:37 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.10:57172) dropped. RpcEnv already stopped.
17/04/27 00:47:40 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
11.2 G  /nidan/parquet/slide1.prqt
14.9 G  /nidan/parquet/slide2.prqt
