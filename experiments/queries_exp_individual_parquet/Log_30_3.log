Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/27 10:31:22 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 10:31:36 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 10:31:36 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 10:31:37 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/27 10:31:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 10:31:53 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170427103139-0162).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-core s 8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf s park.driver.maxResultSize=2g

scala> 

scala> 

scala> 

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> 

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> 

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> 

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> 

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> 

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> val dataSource = "/nidan/parquet/slide30.prqt"
dataSource: String = /nidan/parquet/slide30.prqt

scala> 

scala> 

scala> 

scala> def show_timing[T](proc: => T): T = {
     | 
     |     val start=System.nanoTime()
     | 
     |     val res = proc
     | 
     |     val end = System.nanoTime()
     | 
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     | 
     |     res
     | 
     | }
show_timing: [T](proc: => T)T

scala> 

scala> 

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     | 
     |     val bytes = in._1
     | 
     |     val output = in._3
     | 
     |     
     | 
     |     val writer = new FileOutputStream(output)
     | 
     |     writer.write(bytes)
     | 
     |     writer.close
     | 
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> 

scala> 

scala> val queries = List(
     | 
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0  and imageId = '30.svs'",1),
     | 
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0  and imageId = '30.svs'",2),
     | 
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0  and imageId = '30.svs'",4),
     | 
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0  and imageId = '30.svs'",8)
     | 
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '30.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '30.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '30.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '30.svs',8))

scala> 

scala> 

scala> 

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001164121 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@4af5c14c

scala> 

scala> val pf = show_timing{sqlContext.read.parquet(dataSource).createOrReplaceTempView("data")}
Time elapsed: 8.756850068 seconds
pf: Unit = ()

scala> 

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (b ytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 104) / 125][Stage 1:===>                                                   (7 + 104) / 125][Stage 1:===>                                                   (8 + 104) / 125][Stage 1:====>                                                 (11 + 104) / 125][Stage 1:=====>                                                (13 + 104) / 125][Stage 1:======>                                               (15 + 104) / 125][Stage 1:======>                                               (16 + 104) / 125][Stage 1:==============>                                        (34 + 91) / 125][Stage 1:=====================================>                 (86 + 39) / 125][Stage 1:================================================>     (112 + 13) / 125][Stage 1:===================================================>   (117 + 8) / 125][Stage 1:===================================================>   (118 + 7) / 125][Stage 1:====================================================>  (120 + 5) / 125][Stage 1:=====================================================> (122 + 3) / 125][Stage 1:======================================================>(123 + 2) / 125]                                                                                [Stage 2:>                                                      (0 + 104) / 126][Stage 2:>                                                      (2 + 104) / 126][Stage 2:==>                                                    (6 + 104) / 126][Stage 2:======>                                               (15 + 104) / 126][Stage 2:============>                                          (29 + 97) / 126][Stage 2:======================>                                (51 + 75) / 126][Stage 2:================================>                      (74 + 52) / 126][Stage 2:====================================>                  (83 + 43) / 126][Stage 2:=========================================>             (95 + 31) / 126][Stage 2:============================================>         (103 + 23) / 126][Stage 2:==============================================>       (108 + 18) / 126][Stage 2:=================================================>    (116 + 10) / 126][Stage 2:===================================================>   (119 + 7) / 126][Stage 2:====================================================>  (120 + 6) / 126][Stage 2:=====================================================> (122 + 4) / 126][Stage 2:=====================================================> (123 + 3) / 126][Stage 2:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 16.440228734 seconds
res0: Int = 0

scala> 

scala> 

scala> 

scala> for (query <- queries){
     | 
     | println(s">> Running query: ${query._1}")
     | 
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes,  index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | 
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '30.svs'
[Stage 3:>                                                      (0 + 104) / 125][Stage 3:=>                                                     (3 + 104) / 125][Stage 3:===>                                                   (7 + 104) / 125][Stage 3:=======>                                              (17 + 104) / 125][Stage 3:==========>                                           (25 + 100) / 125][Stage 3:========================>                              (55 + 70) / 125][Stage 3:=============================>                         (68 + 57) / 125][Stage 3:=====================================>                 (85 + 40) / 125][Stage 3:=========================================>             (95 + 30) / 125][Stage 3:===========================================>          (101 + 24) / 125][Stage 3:==============================================>       (108 + 17) / 125][Stage 3:===================================================>   (116 + 9) / 125][Stage 3:=====================================================> (121 + 4) / 125][Stage 3:======================================================>(123 + 2) / 125]                                                                                [Stage 4:>                                                      (1 + 104) / 126][Stage 4:=>                                                     (3 + 104) / 126][Stage 4:====>                                                 (11 + 104) / 126][Stage 4:===========>                                          (26 + 100) / 126][Stage 4:==================>                                    (42 + 84) / 126][Stage 4:========================>                              (55 + 71) / 126][Stage 4:==============================>                        (69 + 57) / 126][Stage 4:==================================>                    (78 + 48) / 126][Stage 4:===========================================>          (102 + 24) / 126][Stage 4:===============================================>      (110 + 16) / 126][Stage 4:================================================>     (113 + 13) / 126][Stage 4:===================================================>   (119 + 7) / 126][Stage 4:=====================================================> (122 + 4) / 126][Stage 4:=====================================================> (123 + 3) / 126][Stage 4:======================================================>(124 + 2) / 126][Stage 4:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 9.4208748 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '30.svs'
[Stage 5:>                                                      (0 + 104) / 125][Stage 5:=>                                                     (3 + 104) / 125][Stage 5:===>                                                   (7 + 104) / 125][Stage 5:======>                                               (15 + 105) / 125][Stage 5:=============>                                         (30 + 95) / 125][Stage 5:======================>                                (50 + 75) / 125][Stage 5:================================>                      (74 + 51) / 125][Stage 5:=======================================>               (90 + 35) / 125][Stage 5:===========================================>          (100 + 25) / 125][Stage 5:==============================================>       (108 + 17) / 125][Stage 5:================================================>     (112 + 13) / 125][Stage 5:====================================================>  (120 + 5) / 125][Stage 5:=====================================================> (122 + 3) / 125][Stage 5:======================================================>(123 + 2) / 125][Stage 5:======================================================>(124 + 1) / 125]                                                                                [Stage 6:>                                                      (2 + 104) / 126][Stage 6:===>                                                   (8 + 104) / 126][Stage 6:==========>                                           (24 + 102) / 126][Stage 6:================>                                      (38 + 88) / 126][Stage 6:========================>                              (56 + 70) / 126][Stage 6:==============================>                        (69 + 57) / 126][Stage 6:====================================>                  (84 + 42) / 126][Stage 6:=========================================>             (95 + 31) / 126][Stage 6:===========================================>          (102 + 24) / 126][Stage 6:=============================================>        (107 + 19) / 126][Stage 6:====================================================>  (120 + 6) / 126][Stage 6:=====================================================> (123 + 3) / 126][Stage 6:======================================================>(124 + 2) / 126][Stage 6:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 8.769457062 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '30.svs'
[Stage 7:>                                                      (0 + 104) / 125][Stage 7:>                                                      (1 + 104) / 125][Stage 7:==>                                                    (5 + 104) / 125][Stage 7:=========>                                            (22 + 103) / 125][Stage 7:==============>                                        (34 + 91) / 125][Stage 7:==========================>                            (60 + 65) / 125][Stage 7:===============================>                       (71 + 54) / 125][Stage 7:======================================>                (87 + 38) / 125][Stage 7:=========================================>             (95 + 30) / 125][Stage 7:============================================>         (104 + 21) / 125][Stage 7:===============================================>      (110 + 15) / 125][Stage 7:===================================================>   (116 + 9) / 125][Stage 7:=====================================================> (121 + 4) / 125][Stage 7:=====================================================> (122 + 3) / 125][Stage 7:======================================================>(123 + 2) / 125][Stage 7:======================================================>(124 + 1) / 125]                                                                                [Stage 8:>                                                      (2 + 104) / 126][Stage 8:======>                                               (15 + 104) / 126][Stage 8:==============>                                        (33 + 93) / 126][Stage 8:=======================>                               (54 + 72) / 126][Stage 8:=============================>                         (68 + 58) / 126][Stage 8:===================================>                   (81 + 45) / 126][Stage 8:=====================================>                 (87 + 39) / 126][Stage 8:=========================================>             (95 + 31) / 126][Stage 8:=============================================>        (105 + 21) / 126][Stage 8:================================================>     (113 + 13) / 126][Stage 8:===================================================>   (119 + 7) / 126][Stage 8:=====================================================> (122 + 4) / 126][Stage 8:=====================================================> (123 + 3) / 126][Stage 8:======================================================>(124 + 2) / 126][Stage 8:======================================================>(125 + 1) / 126]                                                                                Time elapsed: 9.378610437 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '30.svs'
[Stage 9:>                                                      (0 + 104) / 125][Stage 9:>                                                      (1 + 104) / 125][Stage 9:===>                                                   (9 + 104) / 125][Stage 9:==========>                                           (25 + 100) / 125][Stage 9:================>                                      (38 + 87) / 125][Stage 9:=========================>                             (59 + 66) / 125][Stage 9:===============================>                       (71 + 54) / 125][Stage 9:======================================>                (88 + 37) / 125][Stage 9:=========================================>             (94 + 31) / 125][Stage 9:===========================================>           (99 + 26) / 125][Stage 9:==============================================>       (108 + 17) / 125][Stage 9:===================================================>   (118 + 7) / 125][Stage 9:====================================================>  (120 + 5) / 125][Stage 9:=====================================================> (122 + 3) / 125][Stage 9:======================================================>(123 + 2) / 125]                                                                                [Stage 10:=>                                                    (3 + 104) / 126][Stage 10:===>                                                  (8 + 104) / 126][Stage 10:==========>                                          (24 + 102) / 126][Stage 10:===============>                                      (37 + 89) / 126][Stage 10:=========================>                            (59 + 67) / 126][Stage 10:=================================>                    (78 + 48) / 126][Stage 10:=====================================>                (87 + 39) / 126][Stage 10:=======================================>              (93 + 33) / 126][Stage 10:==========================================>          (101 + 25) / 126][Stage 10:=============================================>       (107 + 19) / 126][Stage 10:==============================================>      (110 + 16) / 126][Stage 10:==================================================>   (118 + 8) / 126][Stage 10:===================================================>  (119 + 7) / 126][Stage 10:===================================================>  (120 + 6) / 126][Stage 10:====================================================> (122 + 4) / 126][Stage 10:=====================================================>(124 + 2) / 126][Stage 10:=====================================================>(125 + 1) / 126]                                                                                Time elapsed: 11.032298882 seconds

scala> 

scala> 

scala> 

scala> 

scala> 

scala> :quit
