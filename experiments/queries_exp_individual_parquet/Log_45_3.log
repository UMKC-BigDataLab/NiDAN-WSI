Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/27 10:56:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 10:57:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 10:57:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 10:57:07 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/27 10:57:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/27 10:57:25 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170427105709-0168).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-core s 8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf s park.driver.maxResultSize=2g

scala> 

scala> 

scala> 

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> 

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> 

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> 

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> 

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> 

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> val dataSource = "/nidan/parquet/slide45.prqt"
dataSource: String = /nidan/parquet/slide45.prqt

scala> 

scala> 

scala> 

scala> def show_timing[T](proc: => T): T = {
     | 
     |     val start=System.nanoTime()
     | 
     |     val res = proc
     | 
     |     val end = System.nanoTime()
     | 
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     | 
     |     res
     | 
     | }
show_timing: [T](proc: => T)T

scala> 

scala> 

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     | 
     |     val bytes = in._1
     | 
     |     val output = in._3
     | 
     |     
     | 
     |     val writer = new FileOutputStream(output)
     | 
     |     writer.write(bytes)
     | 
     |     writer.close
     | 
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> 

scala> 

scala> val queries = List(
     | 
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0  and imageId = '45.svs'",1),
     | 
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0  and imageId = '45.svs'",2),
     | 
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0  and imageId = '45.svs'",4),
     | 
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0  and imageId = '45.svs'",8)
     | 
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '45.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '45.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '45.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '45.svs',8))

scala> 

scala> 

scala> 

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001288822 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@664217a8

scala> 

scala> val pf = show_timing{sqlContext.read.parquet(dataSource).createOrReplaceTempView("data")}
Time elapsed: 9.592929053 seconds
pf: Unit = ()

scala> 

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (b ytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 104) / 107][Stage 1:===>                                                   (7 + 100) / 107][Stage 1:====>                                                   (8 + 99) / 107][Stage 1:====>                                                   (9 + 98) / 107][Stage 1:=====>                                                 (10 + 97) / 107][Stage 1:=====>                                                 (11 + 96) / 107][Stage 1:======================>                                (43 + 64) / 107][Stage 1:==================================>                    (67 + 40) / 107][Stage 1:=================================================>     (96 + 11) / 107][Stage 1:=====================================================> (104 + 3) / 107][Stage 1:======================================================>(106 + 1) / 107]                                                                                [Stage 2:=>                                                     (2 + 104) / 108][Stage 2:========>                                              (16 + 92) / 108][Stage 2:===============>                                       (30 + 78) / 108][Stage 2:========================>                              (49 + 59) / 108][Stage 2:=================================>                     (66 + 42) / 108][Stage 2:===========================================>           (85 + 23) / 108][Stage 2:=================================================>     (98 + 10) / 108][Stage 2:====================================================>  (103 + 5) / 108][Stage 2:====================================================>  (104 + 4) / 108][Stage 2:=====================================================> (105 + 3) / 108][Stage 2:=====================================================> (106 + 2) / 108][Stage 2:======================================================>(107 + 1) / 108]                                                                                Time elapsed: 12.357241442 seconds
res0: Int = 0

scala> 

scala> 

scala> 

scala> for (query <- queries){
     | 
     | println(s">> Running query: ${query._1}")
     | 
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes,  index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | 
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '45.svs'
[Stage 3:===>                                                   (6 + 101) / 107][Stage 3:===========>                                           (23 + 84) / 107][Stage 3:======================>                                (43 + 64) / 107][Stage 3:===============================>                       (61 + 46) / 107][Stage 3:=====================================>                 (73 + 34) / 107][Stage 3:============================================>          (87 + 20) / 107][Stage 3:===================================================>    (99 + 8) / 107][Stage 3:====================================================>  (103 + 4) / 107][Stage 3:=====================================================> (104 + 3) / 107][Stage 3:=====================================================> (105 + 2) / 107]                                                                                [Stage 4:==============>                                        (28 + 80) / 108][Stage 4:=======================>                               (46 + 62) / 108][Stage 4:=============================>                         (58 + 50) / 108][Stage 4:=====================================>                 (73 + 35) / 108][Stage 4:=========================================>             (82 + 26) / 108][Stage 4:===================================================>    (99 + 9) / 108][Stage 4:====================================================>  (104 + 4) / 108][Stage 4:=====================================================> (105 + 3) / 108][Stage 4:======================================================>(107 + 1) / 108]                                                                                Time elapsed: 6.004213341 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '45.svs'
[Stage 5:===>                                                   (7 + 100) / 107][Stage 5:===================>                                   (37 + 70) / 107][Stage 5:=========================>                             (49 + 58) / 107][Stage 5:==============================>                        (59 + 48) / 107][Stage 5:=======================================>               (77 + 30) / 107][Stage 5:================================================>      (94 + 13) / 107][Stage 5:===================================================>   (101 + 6) / 107][Stage 5:====================================================>  (103 + 4) / 107][Stage 5:=====================================================> (105 + 2) / 107][Stage 5:======================================================>(106 + 1) / 107]                                                                                [Stage 6:=================>                                     (35 + 73) / 108][Stage 6:==========================>                            (52 + 56) / 108][Stage 6:================================>                      (64 + 44) / 108][Stage 6:==========================================>            (83 + 25) / 108][Stage 6:===============================================>       (93 + 15) / 108][Stage 6:===================================================>   (101 + 7) / 108][Stage 6:====================================================>  (104 + 4) / 108][Stage 6:=====================================================> (106 + 2) / 108][Stage 6:======================================================>(107 + 1) / 108]                                                                                Time elapsed: 6.368758094 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '45.svs'
[Stage 7:=========>                                             (18 + 89) / 107][Stage 7:==================>                                    (36 + 71) / 107][Stage 7:===========================>                           (54 + 53) / 107][Stage 7:==================================>                    (67 + 40) / 107][Stage 7:=========================================>             (80 + 27) / 107][Stage 7:==============================================>        (91 + 16) / 107][Stage 7:===================================================>    (99 + 8) / 107][Stage 7:====================================================>  (103 + 4) / 107][Stage 7:=====================================================> (105 + 2) / 107][Stage 7:======================================================>(106 + 1) / 107]                                                                                [Stage 8:==========>                                            (21 + 87) / 108][Stage 8:===================>                                   (38 + 70) / 108][Stage 8:========================>                              (49 + 59) / 108][Stage 8:================================>                      (64 + 44) / 108][Stage 8:========================================>              (80 + 28) / 108][Stage 8:===============================================>       (93 + 15) / 108][Stage 8:===================================================>   (101 + 7) / 108][Stage 8:====================================================>  (103 + 5) / 108][Stage 8:=====================================================> (105 + 3) / 108][Stage 8:======================================================>(107 + 1) / 108]                                                                                Time elapsed: 5.904686315 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '45.svs'
[Stage 9:>                                                        (0 + 0) / 107][Stage 9:======>                                                (12 + 95) / 107][Stage 9:================>                                      (33 + 74) / 107][Stage 9:==========================>                            (52 + 55) / 107][Stage 9:=================================>                     (66 + 41) / 107][Stage 9:==========================================>            (82 + 25) / 107][Stage 9:===============================================>       (93 + 14) / 107][Stage 9:===================================================>    (99 + 8) / 107][Stage 9:=====================================================> (104 + 3) / 107][Stage 9:=====================================================> (105 + 2) / 107][Stage 9:======================================================>(106 + 1) / 107]                                                                                [Stage 10:================>                                     (32 + 76) / 108][Stage 10:======================>                               (45 + 63) / 108][Stage 10:============================>                         (57 + 51) / 108][Stage 10:===================================>                  (71 + 37) / 108][Stage 10:==========================================>           (84 + 24) / 108][Stage 10:================================================>     (97 + 11) / 108][Stage 10:====================================================> (104 + 4) / 108][Stage 10:====================================================> (105 + 3) / 108][Stage 10:=====================================================>(106 + 2) / 108]                                                                                Time elapsed: 6.256911632 seconds

scala> 

scala> 

scala> 

scala> 

scala> 

scala> :quit
