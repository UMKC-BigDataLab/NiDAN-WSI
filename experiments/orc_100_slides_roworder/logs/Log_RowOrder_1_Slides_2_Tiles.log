Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/29 19:17:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:17:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:17:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:17:57 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/29 19:17:59 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:18:10 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170529191759-0672).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/10000 00000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, Strin g)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.H iveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 4.348539642 seconds

scala> val queries = List(("SELECT imageBytes FROM data  WHERE partitionZIndex>=100 AND partitionZIndex<=107",  8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:============>                                          (27 + 88) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:=========================================>             (87 + 28) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:============================>                          (61 + 55) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 14.179135905 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 225  OR  partitionIndex = 240  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 240 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.862758944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 2:========================>                              (51 + 62) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:==============================>                        (62 + 51) / 113][Stage 2:===============================>                       (64 + 49) / 113][Stage 2:==================================>                    (70 + 43) / 113][Stage 2:===========================================>           (90 + 23) / 113][Stage 2:==================================================>    (104 + 9) / 113][Stage 2:=====================================================> (110 + 3) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:============================>                          (59 + 55) / 114][Stage 3:=============================>                         (61 + 53) / 114][Stage 3:================================>                      (68 + 46) / 114][Stage 3:==================================>                    (72 + 42) / 114][Stage 3:=======================================>               (82 + 32) / 114][Stage 3:==============================================>        (97 + 17) / 114][Stage 3:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.887681592 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 4  OR  partitionIndex = 51 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 51 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.659351884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (54 + 59) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:==============================>                        (62 + 51) / 113][Stage 4:==================================>                    (71 + 42) / 113][Stage 4:======================================>                (80 + 33) / 113][Stage 4:=============================================>         (93 + 20) / 113][Stage 4:===================================================>   (106 + 7) / 113]                                                                                [Stage 5:============================>                          (60 + 54) / 114][Stage 5:=============================>                         (62 + 52) / 114][Stage 5:================================>                      (67 + 47) / 114][Stage 5:=====================================>                 (78 + 36) / 114][Stage 5:=========================================>             (86 + 28) / 114][Stage 5:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.100465224 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 143  OR  partitionIndex = 158  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 158 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.612794712 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (59 + 54) / 113][Stage 6:=================================>                     (68 + 45) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:==============================================>        (96 + 17) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:=================================>                     (70 + 44) / 114][Stage 7:=======================================>               (81 + 33) / 114][Stage 7:============================================>          (92 + 22) / 114][Stage 7:=================================================>    (104 + 10) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.899457352 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 238  OR  partitionIndex = 239  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 238  OR  partitionIndex = 239 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.603806376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (59 + 54) / 113][Stage 8:=============================>                         (60 + 53) / 113][Stage 8:================================>                      (66 + 47) / 113][Stage 8:=====================================>                 (77 + 36) / 113][Stage 8:===========================================>           (90 + 23) / 113][Stage 8:================================================>     (101 + 12) / 113]                                                                                [Stage 9:============================>                          (60 + 54) / 114][Stage 9:==============================>                        (64 + 50) / 114][Stage 9:======================================>                (79 + 35) / 114][Stage 9:=========================================>             (87 + 27) / 114][Stage 9:===============================================>      (100 + 14) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.909013614 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 65  OR  partitionIndex = 80 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 80 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.586230677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (59 + 54) / 113][Stage 10:===============================>                      (65 + 48) / 113][Stage 10:=======================================>              (83 + 30) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:====================================================> (109 + 4) / 113]                                                                                [Stage 11:=============================>                        (62 + 52) / 114][Stage 11:===============================>                      (67 + 47) / 114][Stage 11:=======================================>              (83 + 31) / 114][Stage 11:==========================================>           (90 + 24) / 114][Stage 11:==============================================>      (100 + 14) / 114][Stage 11:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.78034712 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 137  OR  partitionIndex = 152  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 152 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.555644853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:=============================>                        (62 + 51) / 113][Stage 12:=======================================>              (82 + 31) / 113][Stage 12:==============================================>      (100 + 13) / 113][Stage 12:===================================================>  (107 + 6) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:==============================>                       (64 + 50) / 114][Stage 13:==================================>                   (73 + 41) / 114][Stage 13:==========================================>           (89 + 25) / 114][Stage 13:=================================================>    (105 + 9) / 114][Stage 13:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.668077492 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 126  OR  partitionIndex = 127  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.531057704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:================================>                     (68 + 45) / 113][Stage 14:=========================================>            (87 + 26) / 113][Stage 14:===============================================>      (99 + 14) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:===============================>                      (66 + 48) / 114][Stage 15:=====================================>                (79 + 35) / 114][Stage 15:============================================>         (93 + 21) / 114][Stage 15:================================================>    (104 + 10) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.722823355 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 32  OR  partitionIndex = 33 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.542012939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:==============================>                       (64 + 49) / 113][Stage 16:==========================================>           (89 + 24) / 113][Stage 16:===============================================>     (102 + 11) / 113][Stage 16:===================================================>  (108 + 5) / 113]                                                                                [Stage 17:=============================>                        (63 + 51) / 114][Stage 17:================================>                     (69 + 45) / 114][Stage 17:=========================================>            (88 + 26) / 114][Stage 17:===============================================>     (102 + 12) / 114][Stage 17:====================================================> (110 + 4) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.791467598 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 242  OR  partitionIndex = 243  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 242  OR  partitionIndex = 243 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.646356208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 18:============================>                         (59 + 54) / 113][Stage 18:=============================>                        (62 + 51) / 113][Stage 18:===================================>                  (74 + 39) / 113][Stage 18:==========================================>           (89 + 24) / 113][Stage 18:====================================================> (109 + 4) / 113]                                                                                [Stage 19:============================>                         (61 + 53) / 114][Stage 19:=================================>                    (70 + 44) / 114][Stage 19:=========================================>            (87 + 27) / 114][Stage 19:=================================================>    (105 + 9) / 114][Stage 19:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.345389718 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 84  OR  partitionIndex = 85 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 85 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.502939755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:==============================>                       (63 + 50) / 113][Stage 20:====================================>                 (76 + 37) / 113][Stage 20:=============================================>        (95 + 18) / 113][Stage 20:==================================================>   (106 + 7) / 113]                                                                                [Stage 21:============================>                         (61 + 53) / 114][Stage 21:=================================>                    (71 + 43) / 114][Stage 21:=========================================>            (88 + 26) / 114][Stage 21:==================================================>   (107 + 7) / 114][Stage 21:====================================================> (110 + 4) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.72251584 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 14  OR  partitionIndex = 15 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.496633365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (60 + 53) / 113][Stage 22:==============================>                       (64 + 49) / 113][Stage 22:========================================>             (84 + 29) / 113][Stage 22:================================================>    (103 + 10) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:=============================>                        (63 + 51) / 114][Stage 23:====================================>                 (76 + 38) / 114][Stage 23:=============================================>        (95 + 19) / 114][Stage 23:==================================================>   (106 + 8) / 114][Stage 23:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.69019588 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 191  OR  partitionIndex = 200  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 200 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.491179572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:==============================>                       (63 + 50) / 113][Stage 24:====================================>                 (77 + 36) / 113][Stage 24:==============================================>      (100 + 13) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:=============================>                        (63 + 51) / 114][Stage 25:====================================>                 (77 + 37) / 114][Stage 25:=============================================>        (97 + 17) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.123674632 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 127  OR  partitionIndex = 128  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 128 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.522375399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:==============================>                       (63 + 50) / 113][Stage 26:================================>                     (69 + 44) / 113][Stage 26:==========================================>           (89 + 24) / 113][Stage 26:==================================================>   (105 + 8) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:================================>                     (69 + 45) / 114][Stage 27:=========================================>            (88 + 26) / 114][Stage 27:================================================>    (104 + 10) / 114][Stage 27:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.361341581 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 233  OR  partitionIndex = 248  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 248 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.4813623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:=============================>                        (62 + 51) / 113][Stage 28:=================================>                    (71 + 42) / 113][Stage 28:===========================================>          (92 + 21) / 113][Stage 28:===============================================>     (101 + 12) / 113][Stage 28:====================================================> (109 + 4) / 113]                                                                                [Stage 29:============================>                         (61 + 53) / 114][Stage 29:================================>                     (69 + 45) / 114][Stage 29:============================================>         (93 + 21) / 114][Stage 29:=====================================================>(112 + 2) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.400305269 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 48  OR  partitionIndex = 49 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 49 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.493583409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (60 + 53) / 113][Stage 30:===============================>                      (65 + 48) / 113][Stage 30:===========================================>          (91 + 22) / 113][Stage 30:==================================================>   (105 + 8) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:===============================>                      (66 + 48) / 114][Stage 31:==========================================>           (90 + 24) / 114][Stage 31:=================================================>    (105 + 9) / 114][Stage 31:====================================================> (110 + 4) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.39473879 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 39  OR  partitionIndex = 54 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 54 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.479414132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:=============================>                        (61 + 52) / 113][Stage 32:================================>                     (68 + 45) / 113][Stage 32:=======================================>              (82 + 31) / 113][Stage 32:===============================================>      (99 + 14) / 113][Stage 32:====================================================> (110 + 3) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:==============================>                       (64 + 50) / 114][Stage 33:=======================================>              (83 + 31) / 114][Stage 33:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.151290297 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 102  OR  partitionIndex = 103  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.505812321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:=============================>                        (62 + 51) / 113][Stage 34:=====================================>                (78 + 35) / 113][Stage 34:==============================================>      (100 + 13) / 113][Stage 34:====================================================> (110 + 3) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:=============================>                        (63 + 51) / 114][Stage 35:====================================>                 (77 + 37) / 114][Stage 35:==================================================>   (106 + 8) / 114][Stage 35:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.487317726 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 132  OR  partitionIndex = 179  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 179 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.513531491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (60 + 53) / 113][Stage 36:=================================>                    (70 + 43) / 113][Stage 36:=========================================>            (87 + 26) / 113][Stage 36:===============================================>     (101 + 12) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:=============================>                        (63 + 51) / 114][Stage 37:==================================>                   (72 + 42) / 114][Stage 37:=============================================>        (96 + 18) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.277519707 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 139  OR  partitionIndex = 154  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 154 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.469335863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:=============================>                        (62 + 51) / 113][Stage 38:====================================>                 (77 + 36) / 113][Stage 38:==============================================>       (98 + 15) / 113][Stage 38:==================================================>   (106 + 7) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:=============================>                        (62 + 52) / 114][Stage 39:=========================================>            (87 + 27) / 114][Stage 39:============================================>         (94 + 20) / 114][Stage 39:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.424363152 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 166  OR  partitionIndex = 181  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 181 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.452842917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:==============================>                       (63 + 50) / 113][Stage 40:=====================================>                (79 + 34) / 113][Stage 40:================================================>    (103 + 10) / 113]                                                                                [Stage 41:============================>                         (61 + 53) / 114][Stage 41:==================================>                   (72 + 42) / 114][Stage 41:=========================================>            (87 + 27) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.084993104 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 165  OR  partitionIndex = 180  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 180 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.469567287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:===============================>                      (65 + 48) / 113][Stage 42:========================================>             (84 + 29) / 113][Stage 42:===============================================>     (101 + 12) / 113][Stage 42:=====================================================>(111 + 2) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:=============================>                        (63 + 51) / 114][Stage 43:=====================================>                (80 + 34) / 114][Stage 43:=============================================>        (96 + 18) / 114][Stage 43:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.228094547 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 226  OR  partitionIndex = 241  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 241 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.44120821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (60 + 53) / 113][Stage 44:=================================>                    (70 + 43) / 113][Stage 44:==========================================>           (88 + 25) / 113][Stage 44:=================================================>    (104 + 9) / 113]                                                                                [Stage 45:=============================>                        (62 + 52) / 114][Stage 45:================================>                     (69 + 45) / 114][Stage 45:===========================================>          (91 + 23) / 114][Stage 45:==================================================>   (106 + 8) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.168652576 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 124  OR  partitionIndex = 125  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.464340814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:============================>                         (60 + 53) / 113][Stage 46:=====================================>                (79 + 34) / 113][Stage 46:=============================================>        (95 + 18) / 113][Stage 46:====================================================> (110 + 3) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:==============================>                       (65 + 49) / 114][Stage 47:======================================>               (82 + 32) / 114][Stage 47:==============================================>       (98 + 16) / 114][Stage 47:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.079478512 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 68  OR  partitionIndex = 115 " , 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 115 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.553629834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:================================>                     (68 + 45) / 113][Stage 48:=======================================>              (82 + 31) / 113][Stage 48:==============================================>       (97 + 16) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:=============================>                        (62 + 52) / 114][Stage 49:====================================>                 (77 + 37) / 114][Stage 49:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.116486868 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 103  OR  partitionIndex = 118  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 118 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.443038369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:===============================>                      (65 + 48) / 113][Stage 50:====================================>                 (77 + 36) / 113][Stage 50:==============================================>       (98 + 15) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:=============================>                        (62 + 52) / 114][Stage 51:==================================>                   (73 + 41) / 114][Stage 51:=============================================>        (95 + 19) / 114][Stage 51:=====================================================>(112 + 2) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.35646632 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 94  OR  partitionIndex = 95 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.431322881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:==============================>                       (63 + 50) / 113][Stage 52:==================================>                   (73 + 40) / 113][Stage 52:============================================>         (94 + 19) / 113][Stage 52:===================================================>  (107 + 6) / 113][Stage 52:=====================================================>(112 + 1) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:================================>                     (69 + 45) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:===============================================>     (103 + 11) / 114][Stage 53:=====================================================>(112 + 2) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.539348076 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 236  OR  partitionIndex = 237  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 237 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.44620266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:==============================>                       (64 + 49) / 113][Stage 54:==================================>                   (73 + 40) / 113][Stage 54:============================================>         (94 + 19) / 113][Stage 54:====================================================> (110 + 3) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:================================>                     (69 + 45) / 114][Stage 55:==========================================>           (90 + 24) / 114][Stage 55:================================================>    (104 + 10) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.127433787 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 2  OR  partitionIndex = 3 ", 2 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.429256154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:==============================>                       (64 + 49) / 113][Stage 56:====================================>                 (77 + 36) / 113][Stage 56:==============================================>       (97 + 16) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:==============================>                       (65 + 49) / 114][Stage 57:=====================================>                (79 + 35) / 114][Stage 57:==============================================>      (101 + 13) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.515703891 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 194  OR  partitionIndex = 209  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 209 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.444855169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 58:=============================>                        (61 + 52) / 113][Stage 58:==================================>                   (73 + 40) / 113][Stage 58:==========================================>           (89 + 24) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:=============================>                        (62 + 52) / 114][Stage 59:===================================>                  (75 + 39) / 114][Stage 59:==============================================>       (98 + 16) / 114][Stage 59:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.006221811 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 155  OR  partitionIndex = 168  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 168 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.431711807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:================================>                     (68 + 45) / 113][Stage 60:=======================================>              (83 + 30) / 113][Stage 60:=============================================>        (96 + 17) / 113][Stage 60:====================================================> (109 + 4) / 113]                                                                                [Stage 61:=============================>                        (62 + 52) / 114][Stage 61:================================>                     (68 + 46) / 114][Stage 61:==========================================>           (89 + 25) / 114][Stage 61:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.234264238 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 170  OR  partitionIndex = 185  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 185 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.422362569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:===============================>                      (66 + 47) / 113][Stage 62:=======================================>              (83 + 30) / 113][Stage 62:===============================================>      (99 + 14) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:===============================>                      (67 + 47) / 114][Stage 63:========================================>             (86 + 28) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.465898812 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 104  OR  partitionIndex = 105  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.440100456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (59 + 54) / 113][Stage 64:=================================>                    (70 + 43) / 113][Stage 64:============================================>         (93 + 20) / 113][Stage 64:====================================================> (109 + 4) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:=================================>                    (71 + 43) / 114][Stage 65:==========================================>           (89 + 25) / 114][Stage 65:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.124281874 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 91  OR  partitionIndex = 104 " , 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 104 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.442177209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (60 + 53) / 113][Stage 66:=================================>                    (70 + 43) / 113][Stage 66:===========================================>          (91 + 22) / 113][Stage 66:==================================================>   (105 + 8) / 113]                                                                                [Stage 67:============================>                         (61 + 53) / 114][Stage 67:================================>                     (68 + 46) / 114][Stage 67:=======================================>              (83 + 31) / 114][Stage 67:================================================>    (104 + 10) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.096859865 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 8  OR  partitionIndex = 119 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 119 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.421745678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:============================>                         (60 + 53) / 113][Stage 68:===================================>                  (74 + 39) / 113][Stage 68:============================================>         (94 + 19) / 113][Stage 68:====================================================> (110 + 3) / 113]                                                                                [Stage 69:=============================>                        (62 + 52) / 114][Stage 69:==================================>                   (73 + 41) / 114][Stage 69:=============================================>        (95 + 19) / 114][Stage 69:===================================================>  (108 + 6) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.340086092 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 105  OR  partitionIndex = 120  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 120 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.514865747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:===============================>                      (66 + 47) / 113][Stage 70:===========================================>          (90 + 23) / 113][Stage 70:=================================================>    (104 + 9) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:=================================>                    (70 + 44) / 114][Stage 71:======================================>               (82 + 32) / 114][Stage 71:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.025722433 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 132  OR  partitionIndex = 133  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.413990214 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:===============================>                      (66 + 47) / 113][Stage 72:=======================================>              (83 + 30) / 113][Stage 72:===================================================>  (107 + 6) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:==============================>                       (64 + 50) / 114][Stage 73:====================================>                 (76 + 38) / 114][Stage 73:=============================================>        (95 + 19) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.211480464 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 170  OR  partitionIndex = 171  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 171 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.414050696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:===============================>                      (65 + 48) / 113][Stage 74:======================================>               (81 + 32) / 113][Stage 74:==============================================>      (100 + 13) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:===============================>                      (67 + 47) / 114][Stage 75:==========================================>           (89 + 25) / 114][Stage 75:=================================================>    (105 + 9) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.087127062 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 227  OR  partitionIndex = 242  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 242 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.41358752 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:=================================>                    (71 + 42) / 113][Stage 76:==========================================>           (89 + 24) / 113][Stage 76:=================================================>    (104 + 9) / 113]                                                                                [Stage 77:============================>                         (61 + 53) / 114][Stage 77:================================>                     (69 + 45) / 114][Stage 77:=============================================>        (95 + 19) / 114][Stage 77:====================================================> (110 + 4) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.118550383 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 58  OR  partitionIndex = 59 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 59 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.424921653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (60 + 53) / 113][Stage 78:================================>                     (69 + 44) / 113][Stage 78:===========================================>          (91 + 22) / 113][Stage 78:==================================================>   (106 + 7) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===============================>                      (67 + 47) / 114][Stage 79:=======================================>              (83 + 31) / 114][Stage 79:==================================================>   (106 + 8) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.152956093 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 166  OR  partitionIndex = 167  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 167 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.410696695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:=============================>                        (62 + 51) / 113][Stage 80:==================================>                   (73 + 40) / 113][Stage 80:================================================>    (103 + 10) / 113][Stage 80:====================================================> (110 + 3) / 113]                                                                                [Stage 81:=============================>                        (63 + 51) / 114][Stage 81:===================================>                  (74 + 40) / 114][Stage 81:===========================================>          (91 + 23) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.043521466 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 183  OR  partitionIndex = 192  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 192 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.409474463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:================================>                     (67 + 46) / 113][Stage 82:=========================================>            (87 + 26) / 113][Stage 82:====================================================> (109 + 4) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:============================>                         (61 + 53) / 114][Stage 83:===============================>                      (67 + 47) / 114][Stage 83:========================================>             (86 + 28) / 114][Stage 83:===============================================>     (103 + 11) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.091735557 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 66  OR  partitionIndex = 67 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.400781681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 84:>                                                       (0 + 0) / 113][Stage 84:============================>                         (59 + 54) / 113][Stage 84:==============================>                       (63 + 50) / 113][Stage 84:======================================>               (81 + 32) / 113][Stage 84:===============================================>      (99 + 14) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:============================>                         (60 + 54) / 114][Stage 85:===============================>                      (66 + 48) / 114][Stage 85:========================================>             (85 + 29) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.240400829 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 207  OR  partitionIndex = 222  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 222 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.402560135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:=============================>                        (61 + 52) / 113][Stage 86:=====================================>                (79 + 34) / 113][Stage 86:===============================================>     (102 + 11) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:================================>                     (68 + 46) / 114][Stage 87:=======================================>              (84 + 30) / 114][Stage 87:==============================================>      (101 + 13) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.02364599 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 34  OR  partitionIndex = 35 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.421442478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:==============================>                       (63 + 50) / 113][Stage 88:=====================================>                (78 + 35) / 113][Stage 88:===============================================>     (102 + 11) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:=================================>                    (70 + 44) / 114][Stage 89:=========================================>            (88 + 26) / 114][Stage 89:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.027841105 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 244  OR  partitionIndex = 245  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 244  OR  partitionIndex = 245 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.400132068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:===============================>                      (66 + 47) / 113][Stage 90:=======================================>              (83 + 30) / 113][Stage 90:==============================================>       (97 + 16) / 113]                                                                                [Stage 91:============================>                         (61 + 53) / 114][Stage 91:==============================>                       (65 + 49) / 114][Stage 91:=========================================>            (88 + 26) / 114][Stage 91:================================================>    (104 + 10) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.018927976 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 205  OR  partitionIndex = 220  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 220 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.425510824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 92:>                                                       (0 + 0) / 113][Stage 92:============================>                         (59 + 54) / 113][Stage 92:=================================>                    (70 + 43) / 113][Stage 92:==========================================>           (88 + 25) / 113][Stage 92:=================================================>    (104 + 9) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:============================>                         (60 + 54) / 114][Stage 93:============================>                         (61 + 53) / 114][Stage 93:==================================>                   (72 + 42) / 114][Stage 93:==============================================>       (99 + 15) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.019154228 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 202  OR  partitionIndex = 217  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 217 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.413597636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:===============================>                      (66 + 47) / 113][Stage 94:========================================>             (84 + 29) / 113][Stage 94:===============================================>     (101 + 12) / 113][Stage 94:====================================================> (109 + 4) / 113]                                                                                [Stage 95:============================>                         (60 + 54) / 114][Stage 95:==============================>                       (64 + 50) / 114][Stage 95:=================================>                    (70 + 44) / 114][Stage 95:=============================================>        (97 + 17) / 114][Stage 95:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.102647113 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 9  OR  partitionIndex = 24 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 24 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.400756731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (60 + 53) / 113][Stage 96:================================>                     (68 + 45) / 113][Stage 96:============================================>         (93 + 20) / 113][Stage 96:====================================================> (109 + 4) / 113]                                                                                [Stage 97:============================>                         (60 + 54) / 114][Stage 97:===============================>                      (66 + 48) / 114][Stage 97:=====================================>                (79 + 35) / 114][Stage 97:==============================================>       (98 + 16) / 114][Stage 97:===================================================>  (108 + 6) / 114][Stage 97:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.29673664 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 70  OR  partitionIndex = 85 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 85 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.393779682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:================================>                     (67 + 46) / 113][Stage 98:==========================================>           (89 + 24) / 113][Stage 98:====================================================> (110 + 3) / 113]                                                                                [Stage 99:=============================>                        (62 + 52) / 114][Stage 99:=================================>                    (70 + 44) / 114][Stage 99:===========================================>          (91 + 23) / 114][Stage 99:==================================================>   (107 + 7) / 114][Stage 99:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.191337032 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 96  OR  partitionIndex = 97 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.40673137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:=============================>                       (63 + 50) / 113][Stage 100:====================================>                (78 + 35) / 113][Stage 100:=============================================>       (98 + 15) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:==============================>                      (65 + 49) / 114][Stage 101:=======================================>             (84 + 30) / 114][Stage 101:=============================================>       (98 + 16) / 114][Stage 101:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.133263888 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 140  OR  partitionIndex = 141  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.39028106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 102:============================>                        (60 + 53) / 113][Stage 102:===============================>                     (67 + 46) / 113][Stage 102:=====================================>               (79 + 34) / 113][Stage 102:=================================================>   (106 + 7) / 113]                                                                                [Stage 103:============================>                        (62 + 52) / 114][Stage 103:====================================>                (79 + 35) / 114][Stage 103:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.840630435 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 60  OR  partitionIndex = 61 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.387975232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 104:=============================>                       (62 + 51) / 113][Stage 104:================================>                    (70 + 43) / 113][Stage 104:========================================>            (86 + 27) / 113][Stage 104:==================================================>  (108 + 5) / 113]                                                                                [Stage 105:=============================>                       (63 + 51) / 114][Stage 105:===================================>                 (76 + 38) / 114][Stage 105:===========================================>         (93 + 21) / 114][Stage 105:===================================================> (111 + 3) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.183829065 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 141  OR  partitionIndex = 156  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 156 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384249309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:==============================>                      (64 + 49) / 113][Stage 106:===================================>                 (76 + 37) / 113][Stage 106:==============================================>     (100 + 13) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:============================>                        (62 + 52) / 114][Stage 107:==============================>                      (66 + 48) / 114][Stage 107:==========================================>          (91 + 23) / 114][Stage 107:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.094204929 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 42  OR  partitionIndex = 57 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 57 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.402998653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:============================>                        (61 + 52) / 113][Stage 108:==================================>                  (73 + 40) / 113][Stage 108:=============================================>       (97 + 16) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:================================>                    (69 + 45) / 114][Stage 109:===================================>                 (76 + 38) / 114][Stage 109:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.902793414 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 161  OR  partitionIndex = 176  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 176 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.392479438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 110:============================>                        (61 + 52) / 113][Stage 110:=================================>                   (71 + 42) / 113][Stage 110:============================================>        (95 + 18) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:============================>                        (61 + 53) / 114][Stage 111:=================================>                   (72 + 42) / 114][Stage 111:=========================================>           (89 + 25) / 114][Stage 111:================================================>    (105 + 9) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.176351376 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 45  OR  partitionIndex = 60 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 60 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.381246026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:==============================>                      (64 + 49) / 113][Stage 112:==========================================>          (90 + 23) / 113][Stage 112:==================================================>  (108 + 5) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:===============================>                     (67 + 47) / 114][Stage 113:======================================>              (82 + 32) / 114][Stage 113:==============================================>     (101 + 13) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.909485151 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 136  OR  partitionIndex = 137  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.383384658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:==============================>                      (65 + 48) / 113][Stage 114:====================================>                (78 + 35) / 113][Stage 114:=================================================>   (105 + 8) / 113]                                                                                [Stage 115:============================>                        (62 + 52) / 114][Stage 115:=================================>                   (71 + 43) / 114][Stage 115:========================================>            (87 + 27) / 114][Stage 115:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.938621763 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 1  OR  partitionIndex = 16 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 16 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.398172739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 116:============================>                        (60 + 53) / 113][Stage 116:================================>                    (69 + 44) / 113][Stage 116:=======================================>             (85 + 28) / 113][Stage 116:=================================================>   (106 + 7) / 113]                                                                                [Stage 117:============================>                        (62 + 52) / 114][Stage 117:==================================>                  (75 + 39) / 114][Stage 117:===========================================>         (93 + 21) / 114][Stage 117:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.144726927 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 204  OR  partitionIndex = 205  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.389359017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:================================>                    (69 + 44) / 113][Stage 118:========================================>            (86 + 27) / 113][Stage 118:=================================================>   (105 + 8) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:===============================>                     (68 + 46) / 114][Stage 119:=======================================>             (84 + 30) / 114][Stage 119:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.031105408 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 154  OR  partitionIndex = 155  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.40131881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:===============================>                     (68 + 45) / 113][Stage 120:=============================================>       (97 + 16) / 113][Stage 120:=================================================>   (106 + 7) / 113]                                                                                [Stage 121:============================>                        (61 + 53) / 114][Stage 121:==============================>                      (66 + 48) / 114][Stage 121:========================================>            (88 + 26) / 114][Stage 121:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.071880972 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 16  OR  partitionIndex = 17 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 17 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.381695852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 122:============================>                        (60 + 53) / 113][Stage 122:===============================>                     (68 + 45) / 113][Stage 122:==========================================>          (91 + 22) / 113][Stage 122:==================================================>  (108 + 5) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:==============================>                      (66 + 48) / 114][Stage 123:=====================================>               (80 + 34) / 114][Stage 123:=============================================>       (97 + 17) / 114][Stage 123:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.340144085 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 203  OR  partitionIndex = 218  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 218 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.385374578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:===============================>                     (68 + 45) / 113][Stage 124:==========================================>          (91 + 22) / 113][Stage 124:==================================================>  (107 + 6) / 113]                                                                                [Stage 125:==============================>                      (65 + 49) / 114][Stage 125:=================================>                   (73 + 41) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.0522338 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 18  OR  partitionIndex = 19 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 19 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384939162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 126:============================>                        (61 + 52) / 113][Stage 126:===============================>                     (68 + 45) / 113][Stage 126:=========================================>           (89 + 24) / 113][Stage 126:===================================================> (109 + 4) / 113]                                                                                [Stage 127:=============================>                       (63 + 51) / 114][Stage 127:====================================>                (78 + 36) / 114][Stage 127:==============================================>     (101 + 13) / 114][Stage 127:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.094858638 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 0  OR  partitionIndex = 1 ", 2 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.38322313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:=============================>                       (62 + 51) / 113][Stage 128:====================================>                (77 + 36) / 113][Stage 128:===========================================>         (92 + 21) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:============================>                        (62 + 52) / 114][Stage 129:=======================================>             (86 + 28) / 114][Stage 129:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.989091484 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 174  OR  partitionIndex = 175  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 175 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.389420267 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (60 + 53) / 113][Stage 130:=================================>                   (71 + 42) / 113][Stage 130:=========================================>           (88 + 25) / 113][Stage 130:==================================================>  (107 + 6) / 113]                                                                                [Stage 131:============================>                        (62 + 52) / 114][Stage 131:====================================>                (79 + 35) / 114][Stage 131:===========================================>         (93 + 21) / 114][Stage 131:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.932273168 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 14  OR  partitionIndex = 29 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 29 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.379703728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:=============================>                       (62 + 51) / 113][Stage 132:=====================================>               (79 + 34) / 113][Stage 132:=============================================>       (98 + 15) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:============================>                        (62 + 52) / 114][Stage 133:===================================>                 (76 + 38) / 114][Stage 133:============================================>        (95 + 19) / 114][Stage 133:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.103117603 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 238  OR  partitionIndex = 253  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 238  OR  partitionIndex = 253 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.379235371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:============================>                        (60 + 53) / 113][Stage 134:===================================>                 (75 + 38) / 113][Stage 134:==========================================>          (90 + 23) / 113][Stage 134:===================================================> (109 + 4) / 113]                                                                                [Stage 135:============================>                        (61 + 53) / 114][Stage 135:==============================>                      (66 + 48) / 114][Stage 135:=========================================>           (90 + 24) / 114][Stage 135:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.042545804 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 34  OR  partitionIndex = 49 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 49 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.381495544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:=============================>                       (63 + 50) / 113][Stage 136:======================================>              (83 + 30) / 113][Stage 136:==============================================>     (102 + 11) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:============================>                        (62 + 52) / 114][Stage 137:==================================>                  (75 + 39) / 114][Stage 137:==============================================>      (99 + 15) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.11027058 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 7  OR  partitionIndex = 22 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 22 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.395918927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:=============================>                       (63 + 50) / 113][Stage 138:=================================>                   (72 + 41) / 113][Stage 138:========================================>            (86 + 27) / 113][Stage 138:==================================================>  (107 + 6) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:===============================>                     (68 + 46) / 114][Stage 139:=======================================>             (86 + 28) / 114][Stage 139:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.239580127 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 68  OR  partitionIndex = 69 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.385161132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:==============================>                      (64 + 49) / 113][Stage 140:=====================================>               (79 + 34) / 113][Stage 140:============================================>        (95 + 18) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:==============================>                      (65 + 49) / 114][Stage 141:=========================================>           (89 + 25) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.22765683 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 195  OR  partitionIndex = 210  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 210 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.465058069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:==============================>                      (66 + 47) / 113][Stage 142:====================================>                (78 + 35) / 113][Stage 142:=============================================>       (96 + 17) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:============================>                        (62 + 52) / 114][Stage 143:======================================>              (82 + 32) / 114][Stage 143:=================================================>   (106 + 8) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.007807657 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 197  OR  partitionIndex = 212  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 212 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384795517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 144:============================>                        (61 + 52) / 113][Stage 144:==================================>                  (73 + 40) / 113][Stage 144:===========================================>         (92 + 21) / 113][Stage 144:=================================================>   (106 + 7) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:=============================>                       (64 + 50) / 114][Stage 145:==================================>                  (75 + 39) / 114][Stage 145:=============================================>       (98 + 16) / 114][Stage 145:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.128824639 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 129  OR  partitionIndex = 144  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 144 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.383795782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:==============================>                      (65 + 48) / 113][Stage 146:======================================>              (83 + 30) / 113][Stage 146:==============================================>     (100 + 13) / 113][Stage 146:====================================================>(111 + 2) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:============================>                        (62 + 52) / 114][Stage 147:====================================>                (79 + 35) / 114][Stage 147:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.023264159 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 196  OR  partitionIndex = 197  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 197 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.383939704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 148:=============================>                       (62 + 51) / 113][Stage 148:=================================>                   (72 + 41) / 113][Stage 148:=============================================>       (96 + 17) / 113]                                                                                [Stage 149:============================>                        (61 + 53) / 114][Stage 149:=================================>                   (72 + 42) / 114][Stage 149:======================================>              (83 + 31) / 114][Stage 149:===================================================> (110 + 4) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.976318822 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 31  OR  partitionIndex = 44 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 44 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.380624219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:=============================>                       (62 + 51) / 113][Stage 150:====================================>                (78 + 35) / 113][Stage 150:============================================>        (95 + 18) / 113][Stage 150:==================================================>  (108 + 5) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:===============================>                     (67 + 47) / 114][Stage 151:========================================>            (87 + 27) / 114][Stage 151:=================================================>   (106 + 8) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.181411425 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 160  OR  partitionIndex = 161  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.390141222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:==============================>                      (64 + 49) / 113][Stage 152:=====================================>               (80 + 33) / 113][Stage 152:===================================================> (109 + 4) / 113]                                                                                [Stage 153:============================>                        (61 + 53) / 114][Stage 153:===============================>                     (68 + 46) / 114][Stage 153:=======================================>             (86 + 28) / 114][Stage 153:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.921679888 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 148  OR  partitionIndex = 149  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 149 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.380265803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 154:=============================>                       (62 + 51) / 113][Stage 154:================================>                    (69 + 44) / 113][Stage 154:=========================================>           (88 + 25) / 113][Stage 154:=================================================>   (105 + 8) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:==============================>                      (66 + 48) / 114][Stage 155:====================================>                (79 + 35) / 114][Stage 155:==========================================>          (91 + 23) / 114][Stage 155:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.226843108 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 239  OR  partitionIndex = 254  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 239  OR  partitionIndex = 254 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.391061621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:============================>                        (61 + 52) / 113][Stage 156:=================================>                   (71 + 42) / 113][Stage 156:===========================================>         (92 + 21) / 113][Stage 156:===================================================> (110 + 3) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:=============================>                       (64 + 50) / 114][Stage 157:====================================>                (78 + 36) / 114][Stage 157:==============================================>     (101 + 13) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.1629442 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 106  OR  partitionIndex = 107  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 107 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.380900484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:==============================>                      (66 + 47) / 113][Stage 158:========================================>            (86 + 27) / 113][Stage 158:=================================================>   (106 + 7) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:================================>                    (70 + 44) / 114][Stage 159:========================================>            (87 + 27) / 114][Stage 159:=================================================>   (106 + 8) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.065303086 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 87  OR  partitionIndex = 100 " , 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 100 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.385431928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:===============================>                     (67 + 46) / 113][Stage 160:========================================>            (87 + 26) / 113][Stage 160:===================================================> (109 + 4) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:===========================>                         (60 + 54) / 114][Stage 161:==============================>                      (66 + 48) / 114][Stage 161:======================================>              (82 + 32) / 114][Stage 161:===============================================>    (104 + 10) / 114][Stage 161:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.197809926 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 140  OR  partitionIndex = 187  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 187 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.392927219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:=================================>                   (72 + 41) / 113][Stage 162:===========================================>         (93 + 20) / 113]                                                                                [Stage 163:===========================>                         (60 + 54) / 114][Stage 163:================================>                    (70 + 44) / 114][Stage 163:=======================================>             (86 + 28) / 114][Stage 163:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.942722745 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 173  OR  partitionIndex = 188  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 188 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.375981589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:============================>                        (61 + 52) / 113][Stage 164:====================================>                (77 + 36) / 113][Stage 164:==============================================>      (99 + 14) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:===============================>                     (67 + 47) / 114][Stage 165:=========================================>           (89 + 25) / 114][Stage 165:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.138044374 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 98  OR  partitionIndex = 99 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.375597272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 166:=============================>                       (62 + 51) / 113][Stage 166:================================>                    (70 + 43) / 113][Stage 166:========================================>            (87 + 26) / 113][Stage 166:===============================================>    (103 + 10) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:=============================>                       (63 + 51) / 114][Stage 167:==================================>                  (74 + 40) / 114][Stage 167:=============================================>      (100 + 14) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.268363344 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 120  OR  partitionIndex = 121  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.38656121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (60 + 53) / 113][Stage 168:==================================>                  (73 + 40) / 113][Stage 168:========================================>            (86 + 27) / 113][Stage 168:===================================================> (109 + 4) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:=============================>                       (63 + 51) / 114][Stage 169:===================================>                 (76 + 38) / 114][Stage 169:=============================================>       (98 + 16) / 114][Stage 169:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.24031791 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 237  OR  partitionIndex = 252  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 237  OR  partitionIndex = 252 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.385038797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==============================>                      (66 + 47) / 113][Stage 170:=====================================>               (79 + 34) / 113][Stage 170:=============================================>       (98 + 15) / 113][Stage 170:====================================================>(111 + 2) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:==================================>                  (74 + 40) / 114][Stage 171:=============================================>       (98 + 16) / 114][Stage 171:===================================================> (110 + 4) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.169523107 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 150  OR  partitionIndex = 151  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.381544212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:=============================>                       (62 + 51) / 113][Stage 172:======================================>              (82 + 31) / 113][Stage 172:==============================================>     (102 + 11) / 113][Stage 172:====================================================>(111 + 2) / 113]                                                                                [Stage 173:===========================>                         (60 + 54) / 114][Stage 173:==============================>                      (66 + 48) / 114][Stage 173:=====================================>               (80 + 34) / 114][Stage 173:==============================================>     (102 + 12) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.061966231 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 162  OR  partitionIndex = 163  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.374369463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:===============================>                     (67 + 46) / 113][Stage 174:=======================================>             (85 + 28) / 113][Stage 174:================================================>    (104 + 9) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:==============================>                      (66 + 48) / 114][Stage 175:===================================>                 (77 + 37) / 114][Stage 175:==============================================>     (103 + 11) / 114][Stage 175:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.22047383 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 248  OR  partitionIndex = 249  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 248  OR  partitionIndex = 249 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.377175234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:==============================>                      (66 + 47) / 113][Stage 176:=====================================>               (79 + 34) / 113][Stage 176:==============================================>     (101 + 12) / 113][Stage 176:====================================================>(111 + 2) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:==============================>                      (65 + 49) / 114][Stage 177:======================================>              (82 + 32) / 114][Stage 177:=============================================>      (100 + 14) / 114][Stage 177:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.0310419 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 167  OR  partitionIndex = 182  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 182 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.378066271 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:====================================>                (77 + 36) / 113][Stage 178:============================================>        (95 + 18) / 113][Stage 178:==================================================>  (108 + 5) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:==============================>                      (66 + 48) / 114][Stage 179:=======================================>             (84 + 30) / 114][Stage 179:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.22703679 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 216  OR  partitionIndex = 217  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.468363073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:==============================>                      (66 + 47) / 113][Stage 180:=====================================>               (80 + 33) / 113][Stage 180:===============================================>    (103 + 10) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:==============================>                      (66 + 48) / 114][Stage 181:=====================================>               (81 + 33) / 114][Stage 181:==============================================>     (101 + 13) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.068108917 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 3  OR  partitionIndex = 18 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 18 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.431909921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:=============================>                       (62 + 51) / 113][Stage 182:=====================================>               (80 + 33) / 113][Stage 182:==============================================>     (100 + 13) / 113][Stage 182:===================================================> (110 + 3) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:==============================>                      (65 + 49) / 114][Stage 183:=====================================>               (81 + 33) / 114][Stage 183:==============================================>     (101 + 13) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.147373274 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 176  OR  partitionIndex = 177  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 177 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.422249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (59 + 54) / 113][Stage 184:==============================>                      (64 + 49) / 113][Stage 184:======================================>              (82 + 31) / 113][Stage 184:================================================>    (104 + 9) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:===========================>                         (60 + 54) / 114][Stage 185:================================>                    (70 + 44) / 114][Stage 185:=======================================>             (84 + 30) / 114][Stage 185:==============================================>     (103 + 11) / 114][Stage 185:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.02330578 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 210  OR  partitionIndex = 211  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.382717059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 186:============================>                        (60 + 53) / 113][Stage 186:==================================>                  (73 + 40) / 113][Stage 186:==========================================>          (90 + 23) / 113][Stage 186:===================================================> (109 + 4) / 113]                                                                                [Stage 187:=============================>                       (63 + 51) / 114][Stage 187:===================================>                 (77 + 37) / 114][Stage 187:==============================================>      (99 + 15) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.924930023 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 47  OR  partitionIndex = 62 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 62 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.374936992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:=============================>                       (62 + 51) / 113][Stage 188:===================================>                 (76 + 37) / 113][Stage 188:=============================================>       (97 + 16) / 113][Stage 188:===================================================> (110 + 3) / 113]                                                                                [Stage 189:===========================>                         (60 + 54) / 114][Stage 189:==============================>                      (65 + 49) / 114][Stage 189:===================================>                 (77 + 37) / 114][Stage 189:==============================================>     (101 + 13) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.989589759 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 222  OR  partitionIndex = 223  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 222  OR  partitionIndex = 223 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.382903821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:==============================>                      (66 + 47) / 113][Stage 190:======================================>              (82 + 31) / 113][Stage 190:==============================================>      (99 + 14) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:===============================>                     (67 + 47) / 114][Stage 191:=======================================>             (85 + 29) / 114][Stage 191:==============================================>     (103 + 11) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.046467945 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 172  OR  partitionIndex = 173  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 173 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.375160394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:==============================>                      (65 + 48) / 113][Stage 192:=======================================>             (84 + 29) / 113][Stage 192:=================================================>   (105 + 8) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:===============================>                     (68 + 46) / 114][Stage 193:=======================================>             (86 + 28) / 114][Stage 193:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.995545999 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 252  OR  partitionIndex = 253  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 252  OR  partitionIndex = 253 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.398589262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:=================================>                   (72 + 41) / 113][Stage 194:=========================================>           (89 + 24) / 113][Stage 194:==================================================>  (108 + 5) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:================================>                    (69 + 45) / 114][Stage 195:=====================================>               (80 + 34) / 114][Stage 195:=================================================>   (107 + 7) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.160943857 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 38  OR  partitionIndex = 39 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.404431601 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:================================>                    (69 + 44) / 113][Stage 196:========================================>            (86 + 27) / 113][Stage 196:=================================================>   (105 + 8) / 113]                                                                                [Stage 197:=============================>                       (64 + 50) / 114][Stage 197:==================================>                  (75 + 39) / 114][Stage 197:==========================================>          (91 + 23) / 114][Stage 197:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.96328255 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 5  OR  partitionIndex = 20 ",  2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 20 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.390888516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (59 + 54) / 113][Stage 198:==============================>                      (65 + 48) / 113][Stage 198:=======================================>             (85 + 28) / 113][Stage 198:==============================================>     (102 + 11) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:===============================>                     (67 + 47) / 114][Stage 199:=======================================>             (86 + 28) / 114][Stage 199:=================================================>   (106 + 8) / 114][Stage 199:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.177952336 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 178  OR  partitionIndex = 179  ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 179 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.386526335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 200:============================>                        (61 + 52) / 113][Stage 200:==================================>                  (74 + 39) / 113][Stage 200:=========================================>           (89 + 24) / 113][Stage 200:===================================================> (110 + 3) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:============================>                        (61 + 53) / 114][Stage 201:================================>                    (69 + 45) / 114][Stage 201:=======================================>             (84 + 30) / 114][Stage 201:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.095064035 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/29 19:27:37 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:56978) dropped. RpcEnv already stopped.
17/05/29 19:27:37 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:56978) dropped. RpcEnv already stopped.

real	9m58.910s
user	11m53.048s
sys	0m39.512s
