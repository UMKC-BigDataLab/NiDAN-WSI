Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/29 19:07:46 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:08:00 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:08:00 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:08:01 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/29 19:08:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:08:13 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170529190803-0671).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/10000 00000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, Strin g)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.H iveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@49bf5ec8

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 4.309735502 seconds

scala> val queries = List(("SELECT imageBytes FROM data  WHERE partitionZIndex>=100 AND partitionZIndex<=107",  8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===>                                                   (8 + 107) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=========================>                             (53 + 63) / 116][Stage 1:=============================>                         (62 + 54) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 13.275243233 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 63 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.763373537 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 2:===================>                                   (41 + 72) / 113][Stage 2:==========================>                            (54 + 59) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:===============================>                       (65 + 48) / 113][Stage 2:===================================>                   (72 + 41) / 113][Stage 2:=====================================>                 (78 + 35) / 113][Stage 2:===========================================>           (90 + 23) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:=============================>                         (62 + 52) / 114][Stage 3:================================>                      (67 + 47) / 114][Stage 3:========================================>              (83 + 31) / 114][Stage 3:=================================================>    (104 + 10) / 114][Stage 3:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.650778365 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 143 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.682781088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:=================================>                     (68 + 45) / 113][Stage 4:=========================================>             (86 + 27) / 113][Stage 4:===============================================>       (97 + 16) / 113][Stage 4:================================================>     (101 + 12) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:============================>                          (59 + 55) / 114][Stage 5:=================================>                     (69 + 45) / 114][Stage 5:========================================>              (84 + 30) / 114][Stage 5:============================================>          (92 + 22) / 114][Stage 5:=================================================>    (104 + 10) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.082142142 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.675757443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (59 + 54) / 113][Stage 6:==============================>                        (63 + 50) / 113][Stage 6:=======================================>               (82 + 31) / 113][Stage 6:===============================================>      (100 + 13) / 113][Stage 6:====================================================>  (108 + 5) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:==============================>                        (64 + 50) / 114][Stage 7:=================================>                     (70 + 44) / 114][Stage 7:==========================================>            (88 + 26) / 114][Stage 7:================================================>     (102 + 12) / 114][Stage 7:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.098689377 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 94 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.606127175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (58 + 55) / 113][Stage 8:===============================>                       (64 + 49) / 113][Stage 8:===================================>                   (73 + 40) / 113][Stage 8:=========================================>             (85 + 28) / 113][Stage 8:==============================================>        (95 + 18) / 113][Stage 8:====================================================>  (107 + 6) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:============================>                          (59 + 55) / 114][Stage 9:===============================>                       (66 + 48) / 114][Stage 9:==================================>                    (71 + 43) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:===============================================>      (100 + 14) / 114][Stage 9:====================================================>  (109 + 5) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.049799634 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 6 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.621925413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (59 + 54) / 113][Stage 10:===============================>                      (65 + 48) / 113][Stage 10:====================================>                 (77 + 36) / 113][Stage 10:==============================================>       (97 + 16) / 113][Stage 10:==================================================>   (105 + 8) / 113]                                                                                [Stage 11:============================>                         (60 + 54) / 114][Stage 11:==============================>                       (65 + 49) / 114][Stage 11:======================================>               (82 + 32) / 114][Stage 11:==============================================>      (100 + 14) / 114][Stage 11:====================================================> (111 + 3) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.643696864 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.615840345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:============================>                         (60 + 53) / 113][Stage 12:===============================>                      (66 + 47) / 113][Stage 12:======================================>               (81 + 32) / 113][Stage 12:==============================================>       (97 + 16) / 113][Stage 12:====================================================> (109 + 4) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:=============================>                        (63 + 51) / 114][Stage 13:====================================>                 (77 + 37) / 114][Stage 13:==============================================>       (99 + 15) / 114][Stage 13:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.454262813 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 71 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.559328315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 14:============================>                         (59 + 54) / 113][Stage 14:=============================>                        (61 + 52) / 113][Stage 14:===================================>                  (74 + 39) / 113][Stage 14:==========================================>           (89 + 24) / 113][Stage 14:=================================================>    (104 + 9) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:============================>                         (61 + 53) / 114][Stage 15:================================>                     (68 + 46) / 114][Stage 15:======================================>               (81 + 33) / 114][Stage 15:============================================>         (93 + 21) / 114][Stage 15:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.657996454 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 174 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.53874013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:==============================>                       (63 + 50) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:===============================================>      (99 + 14) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:==================================>                   (73 + 41) / 114][Stage 17:============================================>         (94 + 20) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.640667396 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.548720377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (59 + 54) / 113][Stage 18:================================>                     (69 + 44) / 113][Stage 18:=======================================>              (82 + 31) / 113][Stage 18:==============================================>       (97 + 16) / 113][Stage 18:=====================================================>(111 + 2) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:==============================>                       (64 + 50) / 114][Stage 19:==================================>                   (73 + 41) / 114][Stage 19:===========================================>          (92 + 22) / 114][Stage 19:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.609748819 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 210 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.526231013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:================================>                     (68 + 45) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:===================================================>  (108 + 5) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:==============================>                       (65 + 49) / 114][Stage 21:====================================>                 (78 + 36) / 114][Stage 21:==============================================>       (98 + 16) / 114][Stage 21:===================================================>  (109 + 5) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.584506053 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 226 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.504631348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (60 + 53) / 113][Stage 22:================================>                     (68 + 45) / 113][Stage 22:========================================>             (85 + 28) / 113][Stage 22:====================================================> (109 + 4) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:============================>                         (61 + 53) / 114][Stage 23:====================================>                 (77 + 37) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:================================================>    (104 + 10) / 114][Stage 23:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.394055038 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 27 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.597481609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (60 + 53) / 113][Stage 24:================================>                     (67 + 46) / 113][Stage 24:=======================================>              (82 + 31) / 113][Stage 24:===============================================>     (101 + 12) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:===============================>                      (66 + 48) / 114][Stage 25:===================================>                  (75 + 39) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.249742491 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 79 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.489428995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:==============================>                       (63 + 50) / 113][Stage 26:===================================>                  (75 + 38) / 113][Stage 26:==============================================>      (100 + 13) / 113][Stage 26:===================================================>  (107 + 6) / 113][Stage 26:====================================================> (109 + 4) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:==============================>                       (65 + 49) / 114][Stage 27:====================================>                 (77 + 37) / 114][Stage 27:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.418714267 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.485898523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:=============================>                        (62 + 51) / 113][Stage 28:===============================>                      (65 + 48) / 113][Stage 28:========================================>             (85 + 28) / 113][Stage 28:================================================>    (103 + 10) / 113][Stage 28:====================================================> (110 + 3) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:===============================>                      (67 + 47) / 114][Stage 29:==========================================>           (89 + 25) / 114][Stage 29:==================================================>   (106 + 8) / 114][Stage 29:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.445001741 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 103 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.49578357 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (60 + 53) / 113][Stage 30:==================================>                   (72 + 41) / 113][Stage 30:========================================>             (85 + 28) / 113][Stage 30:===============================================>     (101 + 12) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:=============================>                        (63 + 51) / 114][Stage 31:=====================================>                (80 + 34) / 114][Stage 31:===============================================>     (102 + 12) / 114][Stage 31:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.292437165 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 90 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.482941811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:===============================>                      (66 + 47) / 113][Stage 32:====================================>                 (77 + 36) / 113][Stage 32:===============================================>     (101 + 12) / 113][Stage 32:====================================================> (110 + 3) / 113]                                                                                [Stage 33:=============================>                        (62 + 52) / 114][Stage 33:====================================>                 (76 + 38) / 114][Stage 33:==========================================>           (89 + 25) / 114][Stage 33:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.235976243 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.510353692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:===============================>                      (65 + 48) / 113][Stage 34:====================================>                 (76 + 37) / 113][Stage 34:===============================================>     (102 + 11) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:==============================>                       (64 + 50) / 114][Stage 35:===================================>                  (74 + 40) / 114][Stage 35:===========================================>          (92 + 22) / 114][Stage 35:==================================================>   (106 + 8) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.246694999 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 178 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.549199496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (60 + 53) / 113][Stage 36:===============================>                      (65 + 48) / 113][Stage 36:==========================================>           (88 + 25) / 113][Stage 36:================================================>    (103 + 10) / 113][Stage 36:===================================================>  (108 + 5) / 113]                                                                                [Stage 37:=============================>                        (63 + 51) / 114][Stage 37:====================================>                 (76 + 38) / 114][Stage 37:==========================================>           (90 + 24) / 114][Stage 37:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.173257122 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 86 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.492941342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 38:=============================>                        (61 + 52) / 113][Stage 38:=================================>                    (71 + 42) / 113][Stage 38:=============================================>        (95 + 18) / 113][Stage 38:==================================================>   (105 + 8) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:===============================>                      (67 + 47) / 114][Stage 39:=====================================>                (80 + 34) / 114][Stage 39:==============================================>       (99 + 15) / 114][Stage 39:=================================================>    (105 + 9) / 114][Stage 39:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.434565083 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 190 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.462695189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:=============================>                        (62 + 51) / 113][Stage 40:==================================>                   (73 + 40) / 113][Stage 40:=============================================>        (95 + 18) / 113][Stage 40:=====================================================>(111 + 2) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:================================>                     (68 + 46) / 114][Stage 41:========================================>             (85 + 29) / 114][Stage 41:==============================================>      (101 + 13) / 114]                                                                                Time elapsed: 2.883859837 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 236 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.481979602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 42:>                                                       (0 + 0) / 113][Stage 42:============================>                         (59 + 54) / 113][Stage 42:===============================>                      (66 + 47) / 113][Stage 42:=======================================>              (83 + 30) / 113][Stage 42:==============================================>       (97 + 16) / 113][Stage 42:===================================================>  (108 + 5) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:==============================>                       (65 + 49) / 114][Stage 43:=====================================>                (80 + 34) / 114][Stage 43:==============================================>      (100 + 14) / 114][Stage 43:====================================================> (111 + 3) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.461780407 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 185 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.443038141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (60 + 53) / 113][Stage 44:===============================>                      (65 + 48) / 113][Stage 44:=====================================>                (79 + 34) / 113][Stage 44:==============================================>      (100 + 13) / 113][Stage 44:====================================================> (110 + 3) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:============================>                         (60 + 54) / 114][Stage 45:===============================>                      (67 + 47) / 114][Stage 45:====================================>                 (77 + 37) / 114][Stage 45:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.203039064 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 155 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.455384824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:================================>                     (69 + 44) / 113][Stage 46:======================================>               (81 + 32) / 113][Stage 46:===============================================>      (99 + 14) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:================================>                     (69 + 45) / 114][Stage 47:========================================>             (86 + 28) / 114][Stage 47:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.126568629 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 170 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.457577184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:============================>                         (60 + 53) / 113][Stage 48:==================================>                   (72 + 41) / 113][Stage 48:==============================================>       (97 + 16) / 113][Stage 48:====================================================> (110 + 3) / 113]                                                                                [Stage 49:============================>                         (61 + 53) / 114][Stage 49:=================================>                    (70 + 44) / 114][Stage 49:======================================>               (82 + 32) / 114][Stage 49:===============================================>     (102 + 12) / 114][Stage 49:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.177478705 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 106 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.433599141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 50:=============================>                        (61 + 52) / 113][Stage 50:=================================>                    (70 + 43) / 113][Stage 50:=============================================>        (95 + 18) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:============================>                         (61 + 53) / 114][Stage 51:===================================>                  (75 + 39) / 114][Stage 51:===========================================>          (92 + 22) / 114][Stage 51:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.019789749 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 62 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.427467031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:=============================>                        (62 + 51) / 113][Stage 52:====================================>                 (76 + 37) / 113][Stage 52:===============================================>      (99 + 14) / 113][Stage 52:====================================================> (110 + 3) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:=============================>                        (63 + 51) / 114][Stage 53:======================================>               (82 + 32) / 114][Stage 53:===============================================>     (102 + 12) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.008716196 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 171 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.428773511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:==============================>                       (63 + 50) / 113][Stage 54:==================================>                   (73 + 40) / 113][Stage 54:============================================>         (94 + 19) / 113][Stage 54:===================================================>  (108 + 5) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:=============================>                        (62 + 52) / 114][Stage 55:===================================>                  (74 + 40) / 114][Stage 55:=============================================>        (97 + 17) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.300959097 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 128 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.431376368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:================================>                     (67 + 46) / 113][Stage 56:====================================>                 (76 + 37) / 113][Stage 56:=============================================>        (95 + 18) / 113][Stage 56:====================================================> (110 + 3) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:================================>                     (69 + 45) / 114][Stage 57:==========================================>           (89 + 25) / 114][Stage 57:================================================>    (104 + 10) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.211171601 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.447282146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:==============================>                       (63 + 50) / 113][Stage 58:=================================>                    (71 + 42) / 113][Stage 58:===============================================>     (101 + 12) / 113][Stage 58:====================================================> (109 + 4) / 113]                                                                                [Stage 59:============================>                         (61 + 53) / 114][Stage 59:================================>                     (69 + 45) / 114][Stage 59:============================================>         (93 + 21) / 114][Stage 59:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.115590891 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 146 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.431823111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:==============================>                       (64 + 49) / 113][Stage 60:=======================================>              (82 + 31) / 113][Stage 60:===============================================>     (101 + 12) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:=============================>                        (62 + 52) / 114][Stage 61:====================================>                 (77 + 37) / 114][Stage 61:============================================>         (93 + 21) / 114][Stage 61:================================================>    (104 + 10) / 114][Stage 61:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.308997601 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.444186074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:=============================>                        (61 + 52) / 113][Stage 62:=================================>                    (71 + 42) / 113][Stage 62:=========================================>            (87 + 26) / 113][Stage 62:==================================================>   (106 + 7) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:================================>                     (69 + 45) / 114][Stage 63:=========================================>            (87 + 27) / 114][Stage 63:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.216844506 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 31 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.443930756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 64:>                                                       (0 + 0) / 113][Stage 64:============================>                         (59 + 54) / 113][Stage 64:================================>                     (68 + 45) / 113][Stage 64:=====================================>                (79 + 34) / 113][Stage 64:===============================================>     (102 + 11) / 113][Stage 64:=====================================================>(111 + 2) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:=============================>                        (63 + 51) / 114][Stage 65:======================================>               (82 + 32) / 114][Stage 65:===============================================>     (102 + 12) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.983954935 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.427289261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (60 + 53) / 113][Stage 66:=================================>                    (71 + 42) / 113][Stage 66:=========================================>            (87 + 26) / 113][Stage 66:===================================================>  (108 + 5) / 113]                                                                                [Stage 67:============================>                         (60 + 54) / 114][Stage 67:=================================>                    (71 + 43) / 114][Stage 67:=========================================>            (87 + 27) / 114][Stage 67:=================================================>    (105 + 9) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.065066429 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 93 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.418950015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:============================>                         (60 + 53) / 113][Stage 68:==================================>                   (72 + 41) / 113][Stage 68:=============================================>        (96 + 17) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:============================>                         (61 + 53) / 114][Stage 69:===============================>                      (67 + 47) / 114][Stage 69:======================================>               (82 + 32) / 114][Stage 69:================================================>    (104 + 10) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.030466809 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.410561249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:==============================>                       (63 + 50) / 113][Stage 70:==================================>                   (73 + 40) / 113][Stage 70:===========================================>          (90 + 23) / 113][Stage 70:====================================================> (110 + 3) / 113]                                                                                [Stage 71:============================>                         (61 + 53) / 114][Stage 71:===============================>                      (66 + 48) / 114][Stage 71:=========================================>            (88 + 26) / 114][Stage 71:===============================================>     (102 + 12) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.288755527 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 205 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.412411047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:================================>                     (68 + 45) / 113][Stage 72:======================================>               (81 + 32) / 113][Stage 72:==============================================>      (100 + 13) / 113][Stage 72:====================================================> (109 + 4) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:==============================>                       (64 + 50) / 114][Stage 73:====================================>                 (77 + 37) / 114][Stage 73:==============================================>      (100 + 14) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.106600441 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 186 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.406736297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:==============================>                       (63 + 50) / 113][Stage 74:=====================================>                (78 + 35) / 113][Stage 74:=============================================>        (96 + 17) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:==============================>                       (64 + 50) / 114][Stage 75:=================================>                    (71 + 43) / 114][Stage 75:===========================================>          (91 + 23) / 114][Stage 75:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.17686671 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 239 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 239 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.418735281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:================================>                     (68 + 45) / 113][Stage 76:==========================================>           (89 + 24) / 113][Stage 76:====================================================> (109 + 4) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:===========================>                          (59 + 55) / 114][Stage 77:================================>                     (68 + 46) / 114][Stage 77:========================================>             (86 + 28) / 114][Stage 77:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.020588325 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 33 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.425713952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:================================>                     (67 + 46) / 113][Stage 78:=======================================>              (82 + 31) / 113][Stage 78:================================================>    (103 + 10) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===============================>                      (67 + 47) / 114][Stage 79:========================================>             (85 + 29) / 114][Stage 79:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.098994963 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 238 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 238 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.409652817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:=================================>                    (70 + 43) / 113][Stage 80:=======================================>              (83 + 30) / 113][Stage 80:===================================================>  (108 + 5) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:===================================>                  (74 + 40) / 114][Stage 81:==========================================>           (90 + 24) / 114][Stage 81:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.025337778 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.413551773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:==============================>                       (63 + 50) / 113][Stage 82:====================================>                 (76 + 37) / 113][Stage 82:============================================>         (94 + 19) / 113][Stage 82:===================================================>  (108 + 5) / 113][Stage 82:=====================================================>(111 + 2) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:================================>                     (68 + 46) / 114][Stage 83:=======================================>              (84 + 30) / 114][Stage 83:===============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.082171688 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 59 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.418171688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:=============================>                        (62 + 51) / 113][Stage 84:=======================================>              (83 + 30) / 113][Stage 84:=================================================>    (104 + 9) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:==============================>                       (65 + 49) / 114][Stage 85:=================================>                    (71 + 43) / 114][Stage 85:=============================================>        (96 + 18) / 114][Stage 85:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.107985262 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 140 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.422204763 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:==============================>                       (63 + 50) / 113][Stage 86:====================================>                 (76 + 37) / 113][Stage 86:==============================================>      (100 + 13) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:==============================>                       (64 + 50) / 114][Stage 87:======================================>               (81 + 33) / 114][Stage 87:=============================================>        (97 + 17) / 114][Stage 87:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.024104191 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 243 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 243 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.423680802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:================================>                     (68 + 45) / 113][Stage 88:======================================>               (81 + 32) / 113][Stage 88:==============================================>       (98 + 15) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:=============================>                        (62 + 52) / 114][Stage 89:==================================>                   (73 + 41) / 114][Stage 89:===========================================>          (92 + 22) / 114][Stage 89:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.008591683 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 191 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.413738858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (60 + 53) / 113][Stage 90:================================>                     (69 + 44) / 113][Stage 90:==========================================>           (88 + 25) / 113][Stage 90:===================================================>  (108 + 5) / 113]                                                                                [Stage 91:=============================>                        (63 + 51) / 114][Stage 91:===================================>                  (74 + 40) / 114][Stage 91:=============================================>        (96 + 18) / 114][Stage 91:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.91020167 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.407388128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:================================>                     (68 + 45) / 113][Stage 92:===========================================>          (91 + 22) / 113][Stage 92:==================================================>   (105 + 8) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:============================>                         (60 + 54) / 114][Stage 93:==============================>                       (65 + 49) / 114][Stage 93:=====================================>                (79 + 35) / 114][Stage 93:===============================================>     (102 + 12) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.133064388 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 149 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.411319244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:=============================>                        (62 + 51) / 113][Stage 94:======================================>               (81 + 32) / 113][Stage 94:==============================================>       (97 + 16) / 113][Stage 94:===================================================>  (107 + 6) / 113]                                                                                [Stage 95:============================>                         (61 + 53) / 114][Stage 95:================================>                     (69 + 45) / 114][Stage 95:==========================================>           (90 + 24) / 114][Stage 95:==============================================>      (101 + 13) / 114]                                                                                Time elapsed: 3.136837793 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 195 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.40069156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:=================================>                    (70 + 43) / 113][Stage 96:============================================>         (93 + 20) / 113][Stage 96:==================================================>   (106 + 7) / 113]                                                                                [Stage 97:=============================>                        (62 + 52) / 114][Stage 97:===================================>                  (75 + 39) / 114][Stage 97:=============================================>        (97 + 17) / 114][Stage 97:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.015024934 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 142 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.411378867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:================================>                     (67 + 46) / 113][Stage 98:=========================================>            (87 + 26) / 113][Stage 98:===============================================>     (102 + 11) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:==============================>                       (64 + 50) / 114][Stage 99:====================================>                 (78 + 36) / 114][Stage 99:===============================================>     (103 + 11) / 114][Stage 99:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.284907669 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 209 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.420026457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:============================>                        (61 + 52) / 113][Stage 100:================================>                    (69 + 44) / 113][Stage 100:============================================>        (94 + 19) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:============================>                        (62 + 52) / 114][Stage 101:=================================>                   (71 + 43) / 114][Stage 101:=========================================>           (90 + 24) / 114][Stage 101:===============================================>    (104 + 10) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.307484508 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.395973311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:==============================>                      (66 + 47) / 113][Stage 102:====================================>                (78 + 35) / 113][Stage 102:==============================================>     (101 + 12) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:===============================>                     (67 + 47) / 114][Stage 103:======================================>              (82 + 32) / 114][Stage 103:==============================================>     (103 + 11) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.167112434 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.381671672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 104:============================>                        (60 + 53) / 113][Stage 104:================================>                    (70 + 43) / 113][Stage 104:========================================>            (86 + 27) / 113][Stage 104:=================================================>   (105 + 8) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:===========================>                         (60 + 54) / 114][Stage 105:==============================>                      (66 + 48) / 114][Stage 105:=======================================>             (84 + 30) / 114][Stage 105:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.999960275 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 72 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.403336844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:================================>                    (69 + 44) / 113][Stage 106:=========================================>           (88 + 25) / 113][Stage 106:==============================================>     (102 + 11) / 113]                                                                                [Stage 107:===========================>                         (60 + 54) / 114][Stage 107:=================================>                   (73 + 41) / 114][Stage 107:========================================>            (87 + 27) / 114][Stage 107:=============================================>      (100 + 14) / 114][Stage 107:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.067844132 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.387052728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:==============================>                      (66 + 47) / 113][Stage 108:========================================>            (86 + 27) / 113][Stage 108:===================================================> (109 + 4) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:=============================>                       (63 + 51) / 114][Stage 109:=================================>                   (73 + 41) / 114][Stage 109:=============================================>       (97 + 17) / 114][Stage 109:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.151053988 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 132 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384080493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:=============================>                       (63 + 50) / 113][Stage 110:=====================================>               (79 + 34) / 113][Stage 110:==================================================>  (107 + 6) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:=============================>                       (63 + 51) / 114][Stage 111:==================================>                  (75 + 39) / 114][Stage 111:===========================================>         (93 + 21) / 114][Stage 111:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.093337557 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 83 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.388801048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:==============================>                      (64 + 49) / 113][Stage 112:=====================================>               (79 + 34) / 113][Stage 112:==============================================>     (101 + 12) / 113][Stage 112:===================================================> (109 + 4) / 113]                                                                                [Stage 113:============================>                        (62 + 52) / 114][Stage 113:=================================>                   (72 + 42) / 114][Stage 113:========================================>            (88 + 26) / 114][Stage 113:=================================================>   (106 + 8) / 114][Stage 113:=====================================================(114 + 0) / 114]                                                                                Time elapsed: 3.167595706 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 52 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.382816617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (60 + 53) / 113][Stage 114:==================================>                  (73 + 40) / 113][Stage 114:==========================================>          (91 + 22) / 113][Stage 114:=================================================>   (106 + 7) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:==============================>                      (66 + 48) / 114][Stage 115:====================================>                (79 + 35) / 114][Stage 115:=============================================>       (98 + 16) / 114][Stage 115:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.22326276 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.387028092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:==============================>                      (65 + 48) / 113][Stage 116:====================================>                (77 + 36) / 113][Stage 116:==============================================>     (101 + 12) / 113][Stage 116:====================================================>(111 + 2) / 113]                                                                                [Stage 117:===========================>                         (60 + 54) / 114][Stage 117:==============================>                      (65 + 49) / 114][Stage 117:=====================================>               (81 + 33) / 114][Stage 117:===============================================>    (104 + 10) / 114][Stage 117:===================================================> (110 + 4) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.23970427 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 0 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.405409809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:===============================>                     (68 + 45) / 113][Stage 118:======================================>              (82 + 31) / 113][Stage 118:==================================================>  (107 + 6) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:================================>                    (70 + 44) / 114][Stage 119:=========================================>           (89 + 25) / 114][Stage 119:================================================>    (105 + 9) / 114][Stage 119:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.036995635 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 82 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.400074537 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:=============================>                       (62 + 51) / 113][Stage 120:===================================>                 (75 + 38) / 113][Stage 120:=============================================>       (96 + 17) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:============================>                        (62 + 52) / 114][Stage 121:===============================>                     (68 + 46) / 114][Stage 121:=======================================>             (85 + 29) / 114][Stage 121:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.879847578 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.38409262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:==============================>                      (66 + 47) / 113][Stage 122:======================================>              (83 + 30) / 113][Stage 122:=================================================>   (105 + 8) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:=================================>                   (71 + 43) / 114][Stage 123:========================================>            (87 + 27) / 114][Stage 123:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.866885545 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 218 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.576180242 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:==============================>                      (64 + 49) / 113][Stage 124:======================================>              (83 + 30) / 113][Stage 124:==============================================>     (100 + 13) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:==============================>                      (66 + 48) / 114][Stage 125:======================================>              (82 + 32) / 114][Stage 125:==============================================>     (101 + 13) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.100955419 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 147 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.458499463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:==============================>                      (64 + 49) / 113][Stage 126:====================================>                (78 + 35) / 113][Stage 126:=============================================>       (97 + 16) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:==============================>                      (66 + 48) / 114][Stage 127:=======================================>             (84 + 30) / 114][Stage 127:================================================>    (105 + 9) / 114][Stage 127:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.053776153 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 53 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.474392923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:=============================>                       (62 + 51) / 113][Stage 128:==================================>                  (74 + 39) / 113][Stage 128:=============================================>       (97 + 16) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:=============================>                       (64 + 50) / 114][Stage 129:==================================>                  (75 + 39) / 114][Stage 129:==========================================>          (92 + 22) / 114][Stage 129:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.036969405 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 252 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 252 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.433504199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (61 + 52) / 113][Stage 130:================================>                    (70 + 43) / 113][Stage 130:========================================>            (87 + 26) / 113][Stage 130:=================================================>   (106 + 7) / 113]                                                                                [Stage 131:============================>                        (62 + 52) / 114][Stage 131:==================================>                  (74 + 40) / 114][Stage 131:=============================================>       (97 + 17) / 114][Stage 131:=================================================>   (106 + 8) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.16899646 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 111 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.431908083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:==============================>                      (65 + 48) / 113][Stage 132:=====================================>               (79 + 34) / 113][Stage 132:============================================>        (95 + 18) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:================================>                    (69 + 45) / 114][Stage 133:======================================>              (83 + 31) / 114][Stage 133:==============================================>     (103 + 11) / 114][Stage 133:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.193460857 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 40 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.439215775 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:=============================>                       (62 + 51) / 113][Stage 134:====================================>                (78 + 35) / 113][Stage 134:==============================================>      (99 + 14) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:=============================>                       (64 + 50) / 114][Stage 135:=======================================>             (86 + 28) / 114][Stage 135:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.992263236 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 251 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 251 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.437108398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:===============================>                     (67 + 46) / 113][Stage 136:=====================================>               (81 + 32) / 113][Stage 136:===============================================>    (103 + 10) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:==================================>                  (74 + 40) / 114][Stage 137:============================================>        (95 + 19) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.220281423 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.435578482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:===============================>                     (68 + 45) / 113][Stage 138:========================================>            (86 + 27) / 113][Stage 138:===================================================> (109 + 4) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:===============================>                     (68 + 46) / 114][Stage 139:=========================================>           (90 + 24) / 114][Stage 139:=============================================>      (100 + 14) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.073407589 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 219 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.420883123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:==============================>                      (64 + 49) / 113][Stage 140:====================================>                (78 + 35) / 113][Stage 140:=================================================>   (105 + 8) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:==============================>                      (66 + 48) / 114][Stage 141:=====================================>               (81 + 33) / 114][Stage 141:=============================================>       (97 + 17) / 114]                                                                                Time elapsed: 2.922649337 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 247 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 247 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.424934699 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (60 + 53) / 113][Stage 142:==============================>                      (65 + 48) / 113][Stage 142:====================================>                (78 + 35) / 113][Stage 142:==============================================>     (102 + 11) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:===============================>                     (68 + 46) / 114][Stage 143:=======================================>             (85 + 29) / 114][Stage 143:==================================================>  (108 + 6) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.266274474 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 152 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.423185462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 144:=============================>                       (62 + 51) / 113][Stage 144:=================================>                   (71 + 42) / 113][Stage 144:==========================================>          (91 + 22) / 113][Stage 144:==================================================>  (107 + 6) / 113]                                                                                [Stage 145:============================>                        (62 + 52) / 114][Stage 145:=================================>                   (73 + 41) / 114][Stage 145:==============================================>     (101 + 13) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.921789618 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 110 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.43441095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:=============================>                       (63 + 50) / 113][Stage 146:======================================>              (82 + 31) / 113][Stage 146:================================================>    (104 + 9) / 113][Stage 146:===================================================> (110 + 3) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:===============================>                     (67 + 47) / 114][Stage 147:=======================================>             (85 + 29) / 114][Stage 147:==============================================>      (99 + 15) / 114]                                                                                Time elapsed: 3.005400238 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 18 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.424194945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:==============================>                      (66 + 47) / 113][Stage 148:======================================>              (83 + 30) / 113][Stage 148:=================================================>   (105 + 8) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:==============================>                      (66 + 48) / 114][Stage 149:======================================>              (83 + 31) / 114][Stage 149:==============================================>     (103 + 11) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.04175936 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 1 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.424430085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:==============================>                      (64 + 49) / 113][Stage 150:======================================>              (82 + 31) / 113][Stage 150:==============================================>     (102 + 11) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:============================>                        (61 + 53) / 114][Stage 151:=====================================>               (81 + 33) / 114][Stage 151:=============================================>      (100 + 14) / 114][Stage 151:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.167218627 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 2 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.431507877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:==============================>                      (66 + 47) / 113][Stage 152:======================================>              (82 + 31) / 113][Stage 152:==================================================>  (108 + 5) / 113]                                                                                [Stage 153:===========================>                         (60 + 54) / 114][Stage 153:=============================>                       (64 + 50) / 114][Stage 153:=====================================>               (80 + 34) / 114][Stage 153:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.020008469 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 13 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.442450465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (59 + 54) / 113][Stage 154:=============================>                       (63 + 50) / 113][Stage 154:=====================================>               (81 + 32) / 113][Stage 154:=============================================>       (97 + 16) / 113][Stage 154:===================================================> (110 + 3) / 113]                                                                                [Stage 155:=============================>                       (63 + 51) / 114][Stage 155:==================================>                  (74 + 40) / 114][Stage 155:=======================================>             (86 + 28) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.123816924 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 51 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.422377212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:=============================>                       (63 + 50) / 113][Stage 156:===================================>                 (75 + 38) / 113][Stage 156:=============================================>       (96 + 17) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:=============================>                       (64 + 50) / 114][Stage 157:===================================>                 (77 + 37) / 114][Stage 157:=============================================>      (100 + 14) / 114]                                                                                Time elapsed: 2.949904219 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 246 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 246 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.435426457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:=================================>                   (71 + 42) / 113][Stage 158:=========================================>           (89 + 24) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:============================>                        (62 + 52) / 114][Stage 159:================================>                    (69 + 45) / 114][Stage 159:============================================>        (95 + 19) / 114][Stage 159:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.990329256 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 112 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.439398493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 160:============================>                        (60 + 53) / 113][Stage 160:===============================>                     (67 + 46) / 113][Stage 160:==========================================>          (91 + 22) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:============================>                        (62 + 52) / 114][Stage 161:=================================>                   (73 + 41) / 114][Stage 161:=============================================>       (97 + 17) / 114][Stage 161:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.991689645 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 98 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.437658797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:=============================>                       (62 + 51) / 113][Stage 162:====================================>                (77 + 36) / 113][Stage 162:=============================================>       (97 + 16) / 113][Stage 162:====================================================>(111 + 2) / 113]                                                                                [Stage 163:===========================>                         (60 + 54) / 114][Stage 163:================================>                    (69 + 45) / 114][Stage 163:========================================>            (87 + 27) / 114][Stage 163:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.058849747 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 137 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.418018503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:===============================>                     (68 + 45) / 113][Stage 164:==========================================>          (90 + 23) / 113][Stage 164:===================================================> (109 + 4) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:================================>                    (69 + 45) / 114][Stage 165:=========================================>           (89 + 25) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.839847018 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 43 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.435033503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:==============================>                      (66 + 47) / 113][Stage 166:=====================================>               (80 + 33) / 113][Stage 166:=================================================>   (106 + 7) / 113]                                                                                [Stage 167:==============================>                      (65 + 49) / 114][Stage 167:=================================>                   (71 + 43) / 114][Stage 167:=============================================>       (97 + 17) / 114][Stage 167:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.856996465 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 113 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.406063641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:=============================>                       (62 + 51) / 113][Stage 168:=====================================>               (79 + 34) / 113][Stage 168:==============================================>     (102 + 11) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:============================>                        (62 + 52) / 114][Stage 169:=================================>                   (72 + 42) / 114][Stage 169:===========================================>         (94 + 20) / 114][Stage 169:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.971743088 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 35 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.405752803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==============================>                      (64 + 49) / 113][Stage 170:=====================================>               (79 + 34) / 113][Stage 170:=============================================>       (98 + 15) / 113]                                                                                [Stage 171:============================>                        (61 + 53) / 114][Stage 171:=================================>                   (71 + 43) / 114][Stage 171:=========================================>           (89 + 25) / 114][Stage 171:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.916287327 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 68 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.383842992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:==============================>                      (64 + 49) / 113][Stage 172:========================================>            (86 + 27) / 113][Stage 172:=================================================>   (106 + 7) / 113][Stage 172:===================================================> (110 + 3) / 113]                                                                                [Stage 173:=============================>                       (63 + 51) / 114][Stage 173:=================================>                   (72 + 42) / 114][Stage 173:=============================================>       (98 + 16) / 114][Stage 173:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.155543293 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.381552376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:==============================>                      (64 + 49) / 113][Stage 174:=====================================>               (80 + 33) / 113][Stage 174:==============================================>     (100 + 13) / 113][Stage 174:====================================================>(111 + 2) / 113]                                                                                [Stage 175:============================>                        (62 + 52) / 114][Stage 175:=================================>                   (73 + 41) / 114][Stage 175:==========================================>          (91 + 23) / 114][Stage 175:=================================================>   (107 + 7) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.248150066 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.388616008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:==============================>                      (66 + 47) / 113][Stage 176:=======================================>             (85 + 28) / 113][Stage 176:==============================================>     (102 + 11) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:===============================>                     (67 + 47) / 114][Stage 177:==================================>                  (74 + 40) / 114][Stage 177:=============================================>       (97 + 17) / 114][Stage 177:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.157200311 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 22 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.389699588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 178:============================>                        (61 + 52) / 113][Stage 178:===================================>                 (75 + 38) / 113][Stage 178:===========================================>         (93 + 20) / 113][Stage 178:==================================================>  (107 + 6) / 113]                                                                                [Stage 179:============================>                        (61 + 53) / 114][Stage 179:================================>                    (70 + 44) / 114][Stage 179:==========================================>          (91 + 23) / 114][Stage 179:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.972408374 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 229 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.396471501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:=============================>                       (63 + 50) / 113][Stage 180:=====================================>               (81 + 32) / 113][Stage 180:=================================================>   (105 + 8) / 113]                                                                                [Stage 181:============================>                        (62 + 52) / 114][Stage 181:=================================>                   (73 + 41) / 114][Stage 181:==========================================>          (91 + 23) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.809592967 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 196 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.423328048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:================================>                    (70 + 43) / 113][Stage 182:======================================>              (83 + 30) / 113][Stage 182:==============================================>     (100 + 13) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:===============================>                     (68 + 46) / 114][Stage 183:=======================================>             (86 + 28) / 114][Stage 183:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.989380911 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 39 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.402004217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (60 + 53) / 113][Stage 184:==================================>                  (74 + 39) / 113][Stage 184:=============================================>       (96 + 17) / 113][Stage 184:===================================================> (109 + 4) / 113]                                                                                [Stage 185:=============================>                       (63 + 51) / 114][Stage 185:===================================>                 (76 + 38) / 114][Stage 185:=============================================>      (100 + 14) / 114][Stage 185:====================================================>(112 + 2) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.15732939 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 11 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.37662239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 186:============================>                        (61 + 52) / 113][Stage 186:===============================>                     (68 + 45) / 113][Stage 186:========================================>            (86 + 27) / 113][Stage 186:=================================================>   (105 + 8) / 113]                                                                                [Stage 187:=============================>                       (63 + 51) / 114][Stage 187:===================================>                 (76 + 38) / 114][Stage 187:===========================================>         (94 + 20) / 114][Stage 187:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.054674148 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 182 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.379338888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:==============================>                      (64 + 49) / 113][Stage 188:===================================>                 (76 + 37) / 113][Stage 188:==============================================>     (100 + 13) / 113][Stage 188:===================================================> (110 + 3) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:============================>                        (61 + 53) / 114][Stage 189:===============================>                     (67 + 47) / 114][Stage 189:=======================================>             (85 + 29) / 114][Stage 189:=================================================>   (106 + 8) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.235031193 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 241 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 241 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.41000155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:===============================>                     (67 + 46) / 113][Stage 190:=======================================>             (85 + 28) / 113][Stage 190:================================================>    (104 + 9) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:================================>                    (70 + 44) / 114][Stage 191:=======================================>             (86 + 28) / 114][Stage 191:==============================================>     (103 + 11) / 114][Stage 191:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.170925743 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 167 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.37951077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:================================>                    (69 + 44) / 113][Stage 192:==========================================>          (90 + 23) / 113][Stage 192:==================================================>  (107 + 6) / 113]                                                                                [Stage 193:============================>                        (62 + 52) / 114][Stage 193:=================================>                   (72 + 42) / 114][Stage 193:========================================>            (88 + 26) / 114][Stage 193:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.838793604 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 176 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.398981286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (61 + 52) / 113][Stage 194:=================================>                   (71 + 42) / 113][Stage 194:========================================>            (87 + 26) / 113][Stage 194:=================================================>   (106 + 7) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:===============================>                     (67 + 47) / 114][Stage 195:======================================>              (83 + 31) / 114][Stage 195:==============================================>     (101 + 13) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.238147899 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 240 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 240 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.390689198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 196:============================>                        (60 + 53) / 113][Stage 196:=================================>                   (72 + 41) / 113][Stage 196:==========================================>          (91 + 22) / 113][Stage 196:==================================================>  (108 + 5) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:===========================>                         (60 + 54) / 114][Stage 197:==============================>                      (66 + 48) / 114][Stage 197:=======================================>             (84 + 30) / 114][Stage 197:==============================================>     (101 + 13) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.147822401 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 131 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.392885056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (61 + 52) / 113][Stage 198:=================================>                   (71 + 42) / 113][Stage 198:============================================>        (95 + 18) / 113][Stage 198:==================================================>  (108 + 5) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:===============================>                     (68 + 46) / 114][Stage 199:=======================================>             (84 + 30) / 114][Stage 199:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.994245319 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 122 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.389778642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (59 + 54) / 113][Stage 200:==============================>                      (64 + 49) / 113][Stage 200:====================================>                (77 + 36) / 113][Stage 200:=============================================>       (96 + 17) / 113][Stage 200:====================================================>(111 + 2) / 113]                                                                                [Stage 201:===========================>                         (60 + 54) / 114][Stage 201:===============================>                     (67 + 47) / 114][Stage 201:=======================================>             (84 + 30) / 114][Stage 201:==============================================>     (102 + 12) / 114][Stage 201:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.028875606 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m54.943s
user	11m36.136s
sys	0m30.432s
