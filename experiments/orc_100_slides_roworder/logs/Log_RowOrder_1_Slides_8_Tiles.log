Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/29 19:37:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:38:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:38:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:38:07 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/29 19:38:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:38:20 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170529193809-0674).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.321023905 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=====================>                                 (45 + 70) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:=====================================================> (111 + 4) / 115]                                                                                [Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=========================================>             (88 + 28) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 13.20576459 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIn dex = 178  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.801191881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (39 + 74) / 113][Stage 2:==========================>                            (54 + 59) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:===============================>                       (65 + 48) / 113][Stage 2:===================================>                   (72 + 41) / 113][Stage 2:=========================================>             (85 + 28) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:==============================>                        (63 + 51) / 114][Stage 3:=================================>                     (69 + 45) / 114][Stage 3:========================================>              (84 + 30) / 114][Stage 3:=============================================>         (95 + 19) / 114][Stage 3:====================================================>  (108 + 6) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.562522556 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 18  OR  partitionIndex = 19  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 48   OR  partitionIndex = 49 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 18  OR  partitionIndex = 19  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 48  OR  partitionIndex = 49 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.637577706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (50 + 63) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:=============================>                         (61 + 52) / 113][Stage 4:================================>                      (67 + 46) / 113][Stage 4:===================================>                   (73 + 40) / 113][Stage 4:========================================>              (84 + 29) / 113][Stage 4:===================================================>   (106 + 7) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:============================>                          (60 + 54) / 114][Stage 5:=================================>                     (70 + 44) / 114][Stage 5:====================================>                  (76 + 38) / 114][Stage 5:============================================>          (92 + 22) / 114][Stage 5:===============================================>      (100 + 14) / 114][Stage 5:====================================================>  (109 + 5) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.080754678 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 154  OR   partitionIndex = 155  OR  partitionIndex = 168  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIn dex = 184  OR  partitionIndex = 185 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 168  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 184  OR  partitionIndex = 185 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.60317873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:============================>                          (58 + 55) / 113][Stage 6:==============================>                        (63 + 50) / 113][Stage 6:==================================>                    (70 + 43) / 113][Stage 6:======================================>                (80 + 33) / 113][Stage 6:============================================>          (92 + 21) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:==============================>                        (63 + 51) / 114][Stage 7:================================>                      (68 + 46) / 114][Stage 7:========================================>              (83 + 31) / 114][Stage 7:==============================================>        (97 + 17) / 114][Stage 7:===================================================>   (107 + 7) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.590016181 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIn dex = 246  OR  partitionIndex = 247 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 246  OR  partitionIndex = 247 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.616559514 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (59 + 54) / 113][Stage 8:=============================>                         (61 + 52) / 113][Stage 8:==================================>                    (71 + 42) / 113][Stage 8:===========================================>           (89 + 24) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:====================================================>  (108 + 5) / 113]                                                                                [Stage 9:=============================>                         (61 + 53) / 114][Stage 9:===============================>                       (66 + 48) / 114][Stage 9:=========================================>             (85 + 29) / 114][Stage 9:===============================================>      (101 + 13) / 114][Stage 9:===================================================>   (106 + 8) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.136192469 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22   OR  partitionIndex = 23 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 23 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569604813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:============================>                         (59 + 54) / 113][Stage 10:==============================>                       (63 + 50) / 113][Stage 10:==================================>                   (72 + 41) / 113][Stage 10:===========================================>          (90 + 23) / 113][Stage 10:===================================================>  (107 + 6) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:============================>                         (60 + 54) / 114][Stage 11:==============================>                       (65 + 49) / 114][Stage 11:====================================>                 (78 + 36) / 114][Stage 11:=============================================>        (95 + 19) / 114][Stage 11:===============================================>     (102 + 12) / 114][Stage 11:===================================================>  (109 + 5) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.681699568 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 70  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 99  OR  partitionIndex =  114  OR  partitionIndex = 115 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 99  OR  partitionIndex = 114  OR  partitionIndex = 115 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550184092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:============================>                         (59 + 54) / 113][Stage 12:=============================>                        (61 + 52) / 113][Stage 12:=================================>                    (71 + 42) / 113][Stage 12:==========================================>           (89 + 24) / 113][Stage 12:================================================>    (103 + 10) / 113][Stage 12:===================================================>  (107 + 6) / 113]                                                                                [Stage 13:============================>                         (61 + 53) / 114][Stage 13:==============================>                       (64 + 50) / 114][Stage 13:=======================================>              (83 + 31) / 114][Stage 13:============================================>         (94 + 20) / 114][Stage 13:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 6.077794958 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 28  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 28  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.5552048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (57 + 56) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:===============================>                      (66 + 47) / 113][Stage 14:======================================>               (80 + 33) / 113][Stage 14:===============================================>     (102 + 11) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:==============================>                       (64 + 50) / 114][Stage 15:====================================>                 (77 + 37) / 114][Stage 15:===========================================>          (91 + 23) / 114][Stage 15:==============================================>      (101 + 13) / 114][Stage 15:=================================================>    (105 + 9) / 114][Stage 15:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.506158945 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 224  OR  partitionIndex = 225  OR   partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 240  OR  partitionIndex = 241  OR  partitionIn dex = 242  OR  partitionIndex = 243 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 224  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 240  OR  partitionIndex = 241  OR  partitionIndex = 242  OR  partitionIndex = 243 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513754303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:================================>                     (67 + 46) / 113][Stage 16:=====================================>                (79 + 34) / 113][Stage 16:=============================================>        (96 + 17) / 113][Stage 16:================================================>    (103 + 10) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:===============================>                      (67 + 47) / 114][Stage 17:========================================>             (86 + 28) / 114][Stage 17:==============================================>       (99 + 15) / 114][Stage 17:===================================================>  (108 + 6) / 114][Stage 17:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.846764542 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 148  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIn dex = 178  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 148  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.533030529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:============================>                         (59 + 54) / 113][Stage 18:============================>                         (60 + 53) / 113][Stage 18:==================================>                   (72 + 41) / 113][Stage 18:===========================================>          (91 + 22) / 113][Stage 18:==================================================>   (105 + 8) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:=============================>                        (63 + 51) / 114][Stage 19:=================================>                    (71 + 43) / 114][Stage 19:==========================================>           (89 + 25) / 114][Stage 19:==================================================>   (106 + 8) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.203813717 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 175  OR   partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 200  OR  partitionIn dex = 201  OR  partitionIndex = 216 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 216 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499882407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:=============================>                        (61 + 52) / 113][Stage 20:===================================>                  (74 + 39) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:===================================================>  (107 + 6) / 113]                                                                                [Stage 21:============================>                         (61 + 53) / 114][Stage 21:===============================>                      (67 + 47) / 114][Stage 21:======================================>               (81 + 33) / 114][Stage 21:==============================================>      (101 + 13) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.853791548 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 48  OR  partitionIndex = 49  OR  partitionIndex = 50   OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 48  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500789587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:=================================>                    (71 + 42) / 113][Stage 22:==========================================>           (88 + 25) / 113][Stage 22:===================================================>  (108 + 5) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:==============================>                       (65 + 49) / 114][Stage 23:======================================>               (81 + 33) / 114][Stage 23:=============================================>        (97 + 17) / 114][Stage 23:===================================================>  (109 + 5) / 114][Stage 23:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.405602282 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 20  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50   OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 20  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491239676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:================================>                     (68 + 45) / 113][Stage 24:=========================================>            (87 + 26) / 113][Stage 24:==================================================>   (106 + 7) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:================================>                     (68 + 46) / 114][Stage 25:=========================================>            (87 + 27) / 114][Stage 25:===============================================>     (102 + 12) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.379674273 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 83  OR  pa rtitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex =  112  OR  partitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 83  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 112  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474845986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:=============================>                        (61 + 52) / 113][Stage 26:===================================>                  (75 + 38) / 113][Stage 26:==========================================>           (89 + 24) / 113][Stage 26:================================================>    (103 + 10) / 113][Stage 26:====================================================> (109 + 4) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:==============================>                       (64 + 50) / 114][Stage 27:====================================>                 (78 + 36) / 114][Stage 27:============================================>         (94 + 20) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.108123585 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  pa rtitionIndex = 47  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex =  63  OR  partitionIndex = 72 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 72 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508231691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:================================>                     (68 + 45) / 113][Stage 28:=======================================>              (83 + 30) / 113][Stage 28:================================================>    (103 + 10) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (61 + 53) / 114][Stage 29:=================================>                    (71 + 43) / 114][Stage 29:=============================================>        (95 + 19) / 114][Stage 29:===================================================>  (109 + 5) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.617790408 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 41  OR  pa rtitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 56  OR  partitionIndex = 57  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 41  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 56  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478966777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:==============================>                       (64 + 49) / 113][Stage 30:=====================================>                (78 + 35) / 113][Stage 30:==============================================>       (97 + 16) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:==============================>                       (65 + 49) / 114][Stage 31:========================================>             (86 + 28) / 114][Stage 31:===============================================>     (103 + 11) / 114][Stage 31:=====================================================>(112 + 2) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.979316677 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 139  OR   partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 168  OR  partitionIndex = 169  OR  partitionIn dex = 184  OR  partitionIndex = 185 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 139  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 168  OR  partitionIndex = 169  OR  partitionIndex = 184  OR  partitionIndex = 185 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.557889431 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:============================>                         (60 + 53) / 113][Stage 32:================================>                     (69 + 44) / 113][Stage 32:========================================>             (84 + 29) / 113][Stage 32:===================================================>  (107 + 6) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:================================>                     (69 + 45) / 114][Stage 33:====================================>                 (78 + 36) / 114][Stage 33:===========================================>          (92 + 22) / 114][Stage 33:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.658143856 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 47  OR  pa rtitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 72  OR  partitionIndex =  73  OR  partitionIndex = 88 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 88 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490500307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:==============================>                       (63 + 50) / 113][Stage 34:===================================>                  (75 + 38) / 113][Stage 34:===============================================>      (99 + 14) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:==============================>                       (64 + 50) / 114][Stage 35:=======================================>              (83 + 31) / 114][Stage 35:=============================================>        (96 + 18) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.721944266 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 200  OR   partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 203  OR  partitionIndex = 216  OR  partitionIn dex = 217  OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 203  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487830336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (60 + 53) / 113][Stage 36:===============================>                      (65 + 48) / 113][Stage 36:========================================>             (85 + 28) / 113][Stage 36:===================================================>  (108 + 5) / 113]                                                                                [Stage 37:============================>                         (61 + 53) / 114][Stage 37:==============================>                       (65 + 49) / 114][Stage 37:=====================================>                (80 + 34) / 114][Stage 37:==============================================>      (100 + 14) / 114][Stage 37:===================================================>  (108 + 6) / 114][Stage 37:====================================================> (111 + 3) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.97171106 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIn dex = 122  OR  partitionIndex = 123 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472423563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:============================>                         (60 + 53) / 113][Stage 38:================================>                     (69 + 44) / 113][Stage 38:===========================================>          (90 + 23) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:===============================>                      (67 + 47) / 114][Stage 39:=====================================>                (80 + 34) / 114][Stage 39:============================================>         (93 + 21) / 114][Stage 39:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.595740433 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 168  OR   partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 184  OR  partitionIn dex = 185  OR  partitionIndex = 186 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 168  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468742494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:==============================>                       (63 + 50) / 113][Stage 40:=================================>                    (70 + 43) / 113][Stage 40:=========================================>            (87 + 26) / 113][Stage 40:===================================================>  (107 + 6) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:==============================>                       (65 + 49) / 114][Stage 41:=====================================>                (79 + 35) / 114][Stage 41:=============================================>        (97 + 17) / 114][Stage 41:====================================================> (110 + 4) / 114][Stage 41:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.758542137 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIn dex = 222  OR  partitionIndex = 223 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 222  OR  partitionIndex = 223 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455296135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=============================>                        (62 + 51) / 113][Stage 42:=================================>                    (70 + 43) / 113][Stage 42:===========================================>          (90 + 23) / 113][Stage 42:==================================================>   (105 + 8) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:==============================>                       (64 + 50) / 114][Stage 43:==================================>                   (73 + 41) / 114][Stage 43:==========================================>           (90 + 24) / 114][Stage 43:===================================================>  (109 + 5) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.55580013 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 134  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 163  OR  partitionIn dex = 178  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 163  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440460058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:================================>                     (69 + 44) / 113][Stage 44:========================================>             (84 + 29) / 113][Stage 44:===============================================>     (102 + 11) / 113][Stage 44:=====================================================>(111 + 2) / 113]                                                                                [Stage 45:============================>                         (61 + 53) / 114][Stage 45:==================================>                   (72 + 42) / 114][Stage 45:========================================>             (85 + 29) / 114][Stage 45:===============================================>     (103 + 11) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 6.293727987 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex =  82  OR  partitionIndex = 83 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 83 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456932354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (60 + 53) / 113][Stage 46:=================================>                    (70 + 43) / 113][Stage 46:===========================================>          (90 + 23) / 113][Stage 46:==================================================>   (105 + 8) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:==============================>                       (65 + 49) / 114][Stage 47:=====================================>                (80 + 34) / 114][Stage 47:================================================>    (104 + 10) / 114][Stage 47:===================================================>  (109 + 5) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.735240124 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 52  OR  partitionIndex = 53  OR  partitionIndex =  54  OR  partitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 52  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474932064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:==============================>                       (64 + 49) / 113][Stage 48:================================>                     (68 + 45) / 113][Stage 48:========================================>             (84 + 29) / 113][Stage 48:=================================================>    (104 + 9) / 113][Stage 48:====================================================> (109 + 4) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:=============================>                        (63 + 51) / 114][Stage 49:===================================>                  (75 + 39) / 114][Stage 49:==============================================>       (98 + 16) / 114][Stage 49:=====================================================>(112 + 2) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.45558504 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR   partitionIndex = 199  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 214  OR  partitionIn dex = 215  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 199  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43096617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:==============================>                       (63 + 50) / 113][Stage 50:====================================>                 (77 + 36) / 113][Stage 50:===============================================>      (99 + 14) / 113][Stage 50:===================================================>  (108 + 5) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:=============================>                        (63 + 51) / 114][Stage 51:====================================>                 (77 + 37) / 114][Stage 51:===============================================>     (103 + 11) / 114][Stage 51:====================================================> (110 + 4) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.639143624 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 55  OR  pa rtitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex =  80  OR  partitionIndex = 81 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428415899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=============================>                        (61 + 52) / 113][Stage 52:==================================>                   (73 + 40) / 113][Stage 52:=========================================>            (87 + 26) / 113][Stage 52:================================================>    (103 + 10) / 113][Stage 52:=====================================================>(112 + 1) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:================================>                     (69 + 45) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:===================================================>  (108 + 6) / 114][Stage 53:=====================================================>(112 + 2) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.831229088 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465026856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=============================>                        (61 + 52) / 113][Stage 54:================================>                     (67 + 46) / 113][Stage 54:========================================>             (84 + 29) / 113][Stage 54:==================================================>   (105 + 8) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:=================================>                    (70 + 44) / 114][Stage 55:==========================================>           (90 + 24) / 114][Stage 55:=================================================>    (105 + 9) / 114][Stage 55:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.412486187 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 197  OR   partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIn dex = 242  OR  partitionIndex = 243 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 242  OR  partitionIndex = 243 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427425325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:===============================>                      (66 + 47) / 113][Stage 56:=======================================>              (82 + 31) / 113][Stage 56:==================================================>   (106 + 7) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:=================================>                    (71 + 43) / 114][Stage 57:=====================================>                (80 + 34) / 114][Stage 57:==============================================>      (101 + 13) / 114][Stage 57:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.500001054 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 222  OR  partitionIn dex = 223  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 222  OR  partitionIndex = 223  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445436794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:===============================>                      (65 + 48) / 113][Stage 58:======================================>               (80 + 33) / 113][Stage 58:===============================================>      (99 + 14) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:===============================>                      (67 + 47) / 114][Stage 59:=====================================>                (80 + 34) / 114][Stage 59:===========================================>          (92 + 22) / 114][Stage 59:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.443716344 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 11 8  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 118  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43376579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:==============================>                       (63 + 50) / 113][Stage 60:===================================>                  (74 + 39) / 113][Stage 60:===============================================>      (99 + 14) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:============================>                         (60 + 54) / 114][Stage 61:=============================>                        (63 + 51) / 114][Stage 61:==================================>                   (73 + 41) / 114][Stage 61:============================================>         (93 + 21) / 114][Stage 61:===================================================>  (108 + 6) / 114][Stage 61:====================================================> (110 + 4) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.132739587 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  pa rtitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 64  OR  partitionIndex =  65  OR  partitionIndex = 80 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 80 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418913713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:==============================>                       (64 + 49) / 113][Stage 62:==================================>                   (72 + 41) / 113][Stage 62:=============================================>        (96 + 17) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:===============================>                      (67 + 47) / 114][Stage 63:========================================>             (85 + 29) / 114][Stage 63:==============================================>      (100 + 14) / 114][Stage 63:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.679315621 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 111  OR   partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIn dex = 128  OR  partitionIndex = 129 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 128  OR  partitionIndex = 129 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433155434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (59 + 54) / 113][Stage 64:===============================>                      (66 + 47) / 113][Stage 64:=====================================>                (78 + 35) / 113][Stage 64:================================================>    (103 + 10) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:==============================>                       (64 + 50) / 114][Stage 65:=================================>                    (71 + 43) / 114][Stage 65:==========================================>           (90 + 24) / 114][Stage 65:====================================================> (110 + 4) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.027360329 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 100  OR  p artitionIndex = 101  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 116  OR  partitionInd ex = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 116  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448752471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:===============================>                      (65 + 48) / 113][Stage 66:=====================================>                (79 + 34) / 113][Stage 66:==================================================>   (106 + 7) / 113]                                                                                [Stage 67:============================>                         (60 + 54) / 114][Stage 67:=================================>                    (71 + 43) / 114][Stage 67:=========================================>            (88 + 26) / 114][Stage 67:==================================================>   (106 + 8) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.152627708 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 104  OR  partitionIndex =  105  OR  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442171852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:==============================>                       (64 + 49) / 113][Stage 68:======================================>               (80 + 33) / 113][Stage 68:==============================================>      (100 + 13) / 113][Stage 68:====================================================> (110 + 3) / 113]                                                                                [Stage 69:============================>                         (61 + 53) / 114][Stage 69:=================================>                    (71 + 43) / 114][Stage 69:===========================================>          (91 + 23) / 114][Stage 69:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.60393627 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 83  OR  partitionIndex = 96  OR  partitionIndex =  97  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 83  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424493283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:=============================>                        (61 + 52) / 113][Stage 70:==================================>                   (73 + 40) / 113][Stage 70:========================================>             (84 + 29) / 113][Stage 70:===============================================>     (101 + 12) / 113][Stage 70:====================================================> (109 + 4) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:=============================>                        (63 + 51) / 114][Stage 71:=====================================>                (80 + 34) / 114][Stage 71:=============================================>        (96 + 18) / 114]                                                                                Time elapsed: 3.540895438 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIn dex = 208  OR  partitionIndex = 209 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 209 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431919383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:==============================>                       (64 + 49) / 113][Stage 72:==================================>                   (72 + 41) / 113][Stage 72:========================================>             (85 + 28) / 113][Stage 72:==================================================>   (106 + 7) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:===============================>                      (67 + 47) / 114][Stage 73:=========================================>            (87 + 27) / 114][Stage 73:=================================================>    (105 + 9) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.118002865 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 23  OR  partitionIndex = 36   OR  partitionIndex = 37 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 23  OR  partitionIndex = 36  OR  partitionIndex = 37 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413926736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=============================>                        (61 + 52) / 113][Stage 74:=====================================>                (78 + 35) / 113][Stage 74:==========================================>           (89 + 24) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:===============================>                      (67 + 47) / 114][Stage 75:=========================================>            (87 + 27) / 114][Stage 75:==============================================>       (98 + 16) / 114][Stage 75:===================================================>  (108 + 6) / 114][Stage 75:=====================================================>(112 + 2) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.770205944 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 14  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 43  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 43  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448129681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (60 + 53) / 113][Stage 76:===================================>                  (74 + 39) / 113][Stage 76:==============================================>       (98 + 15) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:================================>                     (68 + 46) / 114][Stage 77:=========================================>            (87 + 27) / 114][Stage 77:=============================================>        (96 + 18) / 114][Stage 77:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.102592936 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 33  OR  par titionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 48  OR  partitionIndex = 49  OR  partitionIndex = 5 0  OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 33  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 48  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432579906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:===============================>                      (66 + 47) / 113][Stage 78:=======================================>              (83 + 30) / 113][Stage 78:==============================================>       (97 + 16) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===============================>                      (66 + 48) / 114][Stage 79:========================================>             (85 + 29) / 114][Stage 79:=============================================>        (97 + 17) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.97378569 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 116  OR  partitionIndex = 117  OR  partitionIn dex = 118  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 116  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401934233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:================================>                     (68 + 45) / 113][Stage 80:====================================>                 (76 + 37) / 113][Stage 80:============================================>         (94 + 19) / 113][Stage 80:=====================================================>(111 + 2) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:==============================>                       (65 + 49) / 114][Stage 81:======================================>               (82 + 32) / 114][Stage 81:=============================================>        (97 + 17) / 114][Stage 81:==================================================>   (106 + 8) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.751662125 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 104  OR  p artitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 120  OR  partitionInd ex = 121  OR  partitionIndex = 122 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40721036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:============================>                         (60 + 53) / 113][Stage 82:=====================================>                (78 + 35) / 113][Stage 82:===========================================>          (92 + 21) / 113][Stage 82:===================================================>  (107 + 6) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:===================================>                  (74 + 40) / 114][Stage 83:===========================================>          (91 + 23) / 114][Stage 83:====================================================> (111 + 3) / 114][Stage 83:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.641242468 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIn dex = 150  OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409565955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (60 + 53) / 113][Stage 84:===============================>                      (65 + 48) / 113][Stage 84:========================================>             (84 + 29) / 113][Stage 84:=================================================>    (104 + 9) / 113]                                                                                [Stage 85:============================>                         (60 + 54) / 114][Stage 85:================================>                     (68 + 46) / 114][Stage 85:======================================>               (81 + 33) / 114][Stage 85:=================================================>    (105 + 9) / 114][Stage 85:====================================================> (111 + 3) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.919658921 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 27  OR  pa rtitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex =  56  OR  partitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 56  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414112942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:============================>                         (60 + 53) / 113][Stage 86:================================>                     (69 + 44) / 113][Stage 86:============================================>         (94 + 19) / 113][Stage 86:===================================================>  (107 + 6) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:=============================>                        (62 + 52) / 114][Stage 87:================================>                     (69 + 45) / 114][Stage 87:=========================================>            (87 + 27) / 114][Stage 87:====================================================> (110 + 4) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.809077701 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 56  OR  partitionIndex = 57  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 56  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415696039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:=================================>                    (70 + 43) / 113][Stage 88:======================================>               (81 + 32) / 113][Stage 88:===============================================>     (102 + 11) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:============================>                         (61 + 53) / 114][Stage 89:==============================>                       (64 + 50) / 114][Stage 89:=====================================>                (80 + 34) / 114][Stage 89:===============================================>     (102 + 12) / 114][Stage 89:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 4.069336587 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex =  62  OR  partitionIndex = 63 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413312068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:===============================>                      (65 + 48) / 113][Stage 90:====================================>                 (76 + 37) / 113][Stage 90:==========================================>           (89 + 24) / 113][Stage 90:====================================================> (109 + 4) / 113]                                                                                [Stage 91:============================>                         (61 + 53) / 114][Stage 91:====================================>                 (76 + 38) / 114][Stage 91:=============================================>        (95 + 19) / 114][Stage 91:=====================================================>(112 + 2) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.02303721 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIn dex = 250  OR  partitionIndex = 251 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 250  OR  partitionIndex = 251 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400661204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:=============================>                        (62 + 51) / 113][Stage 92:======================================>               (81 + 32) / 113][Stage 92:=============================================>        (96 + 17) / 113][Stage 92:====================================================> (109 + 4) / 113]                                                                                [Stage 93:==============================>                       (64 + 50) / 114][Stage 93:=================================>                    (71 + 43) / 114][Stage 93:==========================================>           (89 + 25) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.434080941 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 244  OR  partitionIndex = 245  OR  partitionIn dex = 246  OR  partitionIndex = 247 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 244  OR  partitionIndex = 245  OR  partitionIndex = 246  OR  partitionIndex = 247 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403471638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:=================================>                    (71 + 42) / 113][Stage 94:========================================>             (85 + 28) / 113][Stage 94:==================================================>   (106 + 7) / 113]                                                                                [Stage 95:============================>                         (60 + 54) / 114][Stage 95:================================>                     (68 + 46) / 114][Stage 95:=====================================>                (79 + 35) / 114][Stage 95:==============================================>       (98 + 16) / 114][Stage 95:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.433296872 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22   OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408880203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:============================>                         (60 + 53) / 113][Stage 96:==================================>                   (72 + 41) / 113][Stage 96:==============================================>       (97 + 16) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:============================>                         (60 + 54) / 114][Stage 97:================================>                     (68 + 46) / 114][Stage 97:=====================================>                (80 + 34) / 114][Stage 97:=============================================>        (97 + 17) / 114][Stage 97:===================================================>  (108 + 6) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.858861003 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 169  OR   partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIn dex = 186  OR  partitionIndex = 187 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398490074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:============================>                         (60 + 53) / 113][Stage 98:===================================>                  (74 + 39) / 113][Stage 98:===========================================>          (92 + 21) / 113][Stage 98:====================================================> (109 + 4) / 113]                                                                                [Stage 99:============================>                         (61 + 53) / 114][Stage 99:=================================>                    (70 + 44) / 114][Stage 99:========================================>             (85 + 29) / 114][Stage 99:=================================================>    (105 + 9) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.608463208 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 90  OR  pa rtitionIndex = 91  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex  = 120  OR  partitionIndex = 121 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 120  OR  partitionIndex = 121 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396521261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (60 + 53) / 113][Stage 100:===============================>                     (67 + 46) / 113][Stage 100:======================================>              (82 + 31) / 113][Stage 100:==============================================>     (102 + 11) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:============================>                        (62 + 52) / 114][Stage 101:===================================>                 (76 + 38) / 114][Stage 101:=============================================>       (97 + 17) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.679317902 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 228  OR   partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 244  OR  partitionIn dex = 245  OR  partitionIndex = 246 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 228  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 244  OR  partitionIndex = 245  OR  partitionIndex = 246 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400086292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:=============================>                       (63 + 50) / 113][Stage 102:==================================>                  (73 + 40) / 113][Stage 102:=============================================>       (96 + 17) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:============================>                        (61 + 53) / 114][Stage 103:=================================>                   (71 + 43) / 114][Stage 103:=========================================>           (90 + 24) / 114][Stage 103:===============================================>    (104 + 10) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.603380463 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 111  OR   partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 128  OR  partitionIn dex = 129  OR  partitionIndex = 144 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 144 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383864738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (59 + 54) / 113][Stage 104:================================>                    (70 + 43) / 113][Stage 104:==========================================>          (90 + 23) / 113][Stage 104:==================================================>  (107 + 6) / 113]                                                                                [Stage 105:============================>                        (61 + 53) / 114][Stage 105:================================>                    (70 + 44) / 114][Stage 105:==========================================>          (91 + 23) / 114][Stage 105:================================================>    (105 + 9) / 114][Stage 105:====================================================>(112 + 2) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.743814185 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 56  OR  partitionIndex = 57  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 56  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39068784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:=============================>                       (62 + 51) / 113][Stage 106:=================================>                   (71 + 42) / 113][Stage 106:==============================================>      (99 + 14) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:============================>                        (61 + 53) / 114][Stage 107:==============================>                      (66 + 48) / 114][Stage 107:=======================================>             (84 + 30) / 114][Stage 107:=============================================>      (100 + 14) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.634839237 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 224  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIn dex = 240  OR  partitionIndex = 241 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 224  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 240  OR  partitionIndex = 241 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404769082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:==============================>                      (64 + 49) / 113][Stage 108:=================================>                   (72 + 41) / 113][Stage 108:===========================================>         (93 + 20) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:=============================>                       (64 + 50) / 114][Stage 109:===================================>                 (77 + 37) / 114][Stage 109:=============================================>       (98 + 16) / 114][Stage 109:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.250841007 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 26  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex =  56  OR  partitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 26  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 56  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392279538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:===============================>                     (67 + 46) / 113][Stage 110:=====================================>               (79 + 34) / 113][Stage 110:============================================>        (95 + 18) / 113][Stage 110:===================================================> (110 + 3) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:==============================>                      (65 + 49) / 114][Stage 111:====================================>                (78 + 36) / 114][Stage 111:=========================================>           (90 + 24) / 114][Stage 111:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.01435699 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 147  OR  partitionIndex = 160  OR  partitionIn dex = 161  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 147  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389222948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:=============================>                       (62 + 51) / 113][Stage 112:==================================>                  (74 + 39) / 113][Stage 112:==========================================>          (91 + 22) / 113][Stage 112:===================================================> (110 + 3) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:==============================>                      (65 + 49) / 114][Stage 113:===================================>                 (77 + 37) / 114][Stage 113:=============================================>       (97 + 17) / 114][Stage 113:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.504511647 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 10  OR  par titionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 2 7  OR  partitionIndex = 40 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 27  OR  partitionIndex = 40 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39237228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (61 + 52) / 113][Stage 114:===================================>                 (75 + 38) / 113][Stage 114:============================================>        (94 + 19) / 113][Stage 114:==================================================>  (107 + 6) / 113][Stage 114:===================================================> (110 + 3) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:=============================>                       (63 + 51) / 114][Stage 115:===================================>                 (77 + 37) / 114][Stage 115:==============================================>      (99 + 15) / 114][Stage 115:==================================================>  (108 + 6) / 114][Stage 115:====================================================>(112 + 2) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.873684001 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 19  OR  partitionIndex = 32   OR  partitionIndex = 33 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 19  OR  partitionIndex = 32  OR  partitionIndex = 33 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386689377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:============================>                        (60 + 53) / 113][Stage 116:=================================>                   (72 + 41) / 113][Stage 116:=============================================>       (96 + 17) / 113][Stage 116:==================================================>  (107 + 6) / 113]                                                                                [Stage 117:=============================>                       (63 + 51) / 114][Stage 117:==============================>                      (66 + 48) / 114][Stage 117:=======================================>             (84 + 30) / 114][Stage 117:=================================================>   (107 + 7) / 114][Stage 117:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.083211501 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  pa rtitionIndex = 108  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionInde x = 124  OR  partitionIndex = 125 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 108  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 124  OR  partitionIndex = 125 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401645137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:=============================>                       (63 + 50) / 113][Stage 118:====================================>                (78 + 35) / 113][Stage 118:=============================================>       (96 + 17) / 113][Stage 118:===================================================> (109 + 4) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:=================================>                   (73 + 41) / 114][Stage 119:==========================================>          (91 + 23) / 114][Stage 119:=================================================>   (106 + 8) / 114][Stage 119:====================================================>(112 + 2) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.197174321 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 192  OR   partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIn dex = 209  OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 209  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400712721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:============================>                        (61 + 52) / 113][Stage 120:=================================>                   (71 + 42) / 113][Stage 120:===========================================>         (92 + 21) / 113][Stage 120:==================================================>  (108 + 5) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:============================>                        (61 + 53) / 114][Stage 121:===================================>                 (77 + 37) / 114][Stage 121:===========================================>         (94 + 20) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.200167086 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 38  OR  pa rtitionIndex = 39  OR  partitionIndex = 52  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex =  55  OR  partitionIndex = 64 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 52  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 64 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381421715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:============================>                        (60 + 53) / 113][Stage 122:==============================>                      (65 + 48) / 113][Stage 122:=======================================>             (85 + 28) / 113][Stage 122:=================================================>   (106 + 7) / 113]                                                                                [Stage 123:============================>                        (61 + 53) / 114][Stage 123:================================>                    (69 + 45) / 114][Stage 123:=======================================>             (84 + 30) / 114][Stage 123:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.728178589 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 203  OR  partitionIn dex = 216  OR  partitionIndex = 217 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 203  OR  partitionIndex = 216  OR  partitionIndex = 217 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386574582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:==============================>                      (66 + 47) / 113][Stage 124:======================================>              (83 + 30) / 113][Stage 124:==================================================>  (107 + 6) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:=============================>                       (64 + 50) / 114][Stage 125:=====================================>               (80 + 34) / 114][Stage 125:==============================================>      (99 + 15) / 114][Stage 125:==================================================>  (108 + 6) / 114][Stage 125:====================================================>(112 + 2) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.759582974 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 167  OR   partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 192  OR  partitionIn dex = 193  OR  partitionIndex = 208 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 208 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384395369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:================================>                    (69 + 44) / 113][Stage 126:=====================================>               (80 + 33) / 113][Stage 126:==============================================>     (100 + 13) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:===============================>                     (67 + 47) / 114][Stage 127:=======================================>             (84 + 30) / 114][Stage 127:=================================================>   (107 + 7) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.379862042 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 105  OR  p artitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionInd ex = 122  OR  partitionIndex = 123 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382800914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:==============================>                      (64 + 49) / 113][Stage 128:===================================>                 (76 + 37) / 113][Stage 128:===========================================>         (92 + 21) / 113][Stage 128:=================================================>   (106 + 7) / 113]                                                                                [Stage 129:============================>                        (61 + 53) / 114][Stage 129:=================================>                   (72 + 42) / 114][Stage 129:=========================================>           (90 + 24) / 114][Stage 129:===================================================> (110 + 4) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.623328887 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 176  OR  partitionIndex = 177  OR  partitionIn dex = 178  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 176  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381602538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:============================>                        (61 + 52) / 113][Stage 130:=================================>                   (72 + 41) / 113][Stage 130:===========================================>         (92 + 21) / 113][Stage 130:===================================================> (109 + 4) / 113]                                                                                [Stage 131:==============================>                      (66 + 48) / 114][Stage 131:=================================>                   (73 + 41) / 114][Stage 131:=============================================>       (97 + 17) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.398768369 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 128  OR   partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIn dex = 145  OR  partitionIndex = 146 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383332795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:===============================>                     (67 + 46) / 113][Stage 132:=======================================>             (85 + 28) / 113][Stage 132:==============================================>     (102 + 11) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:==============================>                      (66 + 48) / 114][Stage 133:=======================================>             (86 + 28) / 114][Stage 133:============================================>        (96 + 18) / 114][Stage 133:====================================================>(112 + 2) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.582647758 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 199  OR   partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 228  OR  partitionIndex = 229  OR  partitionIn dex = 244  OR  partitionIndex = 245 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 199  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 228  OR  partitionIndex = 229  OR  partitionIndex = 244  OR  partitionIndex = 245 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384688992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (61 + 52) / 113][Stage 134:==================================>                  (74 + 39) / 113][Stage 134:=============================================>       (97 + 16) / 113][Stage 134:===================================================> (109 + 4) / 113]                                                                                [Stage 135:=============================>                       (64 + 50) / 114][Stage 135:===================================>                 (76 + 38) / 114][Stage 135:===========================================>         (94 + 20) / 114][Stage 135:==================================================>  (108 + 6) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.546340987 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141  OR   partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIn dex = 186  OR  partitionIndex = 187 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 186  OR  partitionIndex = 187 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384044035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (60 + 53) / 113][Stage 136:===============================>                     (68 + 45) / 113][Stage 136:===========================================>         (93 + 20) / 113][Stage 136:===============================================>    (103 + 10) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:================================>                    (70 + 44) / 114][Stage 137:========================================>            (88 + 26) / 114][Stage 137:=================================================>   (106 + 8) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.521411044 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 26  OR  pa rtitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 42  OR  partitionIndex =  56  OR  partitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 26  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 42  OR  partitionIndex = 56  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397770819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:==============================>                      (64 + 49) / 113][Stage 138:=====================================>               (81 + 32) / 113][Stage 138:=============================================>       (98 + 15) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:================================>                    (69 + 45) / 114][Stage 139:=======================================>             (84 + 30) / 114][Stage 139:==============================================>     (102 + 12) / 114][Stage 139:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.919593972 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 18  OR  par titionIndex = 19  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 34  OR  partitionIndex = 4 8  OR  partitionIndex = 49 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 18  OR  partitionIndex = 19  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 34  OR  partitionIndex = 48  OR  partitionIndex = 49 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385606533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:============================>                        (60 + 53) / 113][Stage 140:====================================>                (77 + 36) / 113][Stage 140:===========================================>         (93 + 20) / 113][Stage 140:===================================================> (110 + 3) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:============================>                        (62 + 52) / 114][Stage 141:===================================>                 (76 + 38) / 114][Stage 141:===========================================>         (93 + 21) / 114][Stage 141:===================================================> (111 + 3) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.693621357 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex =  41  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383983159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:==============================>                      (64 + 49) / 113][Stage 142:=====================================>               (81 + 32) / 113][Stage 142:==================================================>  (108 + 5) / 113]                                                                                [Stage 143:============================>                        (62 + 52) / 114][Stage 143:==================================>                  (75 + 39) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:===============================================>    (104 + 10) / 114][Stage 143:===================================================> (111 + 3) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.306009369 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 111  OR   partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIn dex = 144  OR  partitionIndex = 145 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 144  OR  partitionIndex = 145 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392186957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:============================>                        (61 + 52) / 113][Stage 144:=================================>                   (71 + 42) / 113][Stage 144:==========================================>          (90 + 23) / 113][Stage 144:====================================================>(111 + 2) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:==============================>                      (66 + 48) / 114][Stage 145:====================================>                (79 + 35) / 114][Stage 145:==============================================>      (99 + 15) / 114][Stage 145:==================================================>  (108 + 6) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.454189368 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 167  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIn dex = 183  OR  partitionIndex = 192 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 192 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395687609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:=============================>                       (62 + 51) / 113][Stage 146:===================================>                 (75 + 38) / 113][Stage 146:=============================================>       (96 + 17) / 113][Stage 146:===================================================> (110 + 3) / 113]                                                                                [Stage 147:==============================>                      (65 + 49) / 114][Stage 147:=================================>                   (73 + 41) / 114][Stage 147:=============================================>      (100 + 14) / 114][Stage 147:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.335393058 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 143  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIn dex = 158  OR  partitionIndex = 159 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 143  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 158  OR  partitionIndex = 159 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379612273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:============================>                        (60 + 53) / 113][Stage 148:===================================>                 (75 + 38) / 113][Stage 148:=========================================>           (88 + 25) / 113][Stage 148:================================================>    (104 + 9) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:===============================>                     (68 + 46) / 114][Stage 149:====================================>                (78 + 36) / 114][Stage 149:==============================================>     (103 + 11) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.532006356 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 139  OR   partitionIndex = 153  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 168  OR  partitionIn dex = 169  OR  partitionIndex = 184 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 139  OR  partitionIndex = 153  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 168  OR  partitionIndex = 169  OR  partitionIndex = 184 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383589444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (61 + 52) / 113][Stage 150:==================================>                  (74 + 39) / 113][Stage 150:============================================>        (95 + 18) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:===============================>                     (67 + 47) / 114][Stage 151:======================================>              (83 + 31) / 114][Stage 151:==============================================>     (101 + 13) / 114][Stage 151:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.969282666 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 175  OR   partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIn dex = 200  OR  partitionIndex = 201 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 200  OR  partitionIndex = 201 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393976138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:============================>                        (60 + 53) / 113][Stage 152:==============================>                      (66 + 47) / 113][Stage 152:=======================================>             (85 + 28) / 113][Stage 152:==================================================>  (108 + 5) / 113]                                                                                [Stage 153:============================>                        (62 + 52) / 114][Stage 153:================================>                    (69 + 45) / 114][Stage 153:===========================================>         (94 + 20) / 114][Stage 153:==================================================>  (108 + 6) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.580055446 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIn dex = 154  OR  partitionIndex = 155 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 154  OR  partitionIndex = 155 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467913279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:============================>                        (61 + 52) / 113][Stage 154:================================>                    (70 + 43) / 113][Stage 154:=========================================>           (88 + 25) / 113][Stage 154:=================================================>   (105 + 8) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:===========================>                         (60 + 54) / 114][Stage 155:==============================>                      (65 + 49) / 114][Stage 155:====================================>                (78 + 36) / 114][Stage 155:==============================================>     (103 + 11) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.390566046 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 231  OR  partitionIn dex = 246  OR  partitionIndex = 247 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 231  OR  partitionIndex = 246  OR  partitionIndex = 247 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374013173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:==============================>                      (64 + 49) / 113][Stage 156:====================================>                (78 + 35) / 113][Stage 156:=============================================>       (96 + 17) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:================================>                    (69 + 45) / 114][Stage 157:======================================>              (83 + 31) / 114][Stage 157:============================================>        (96 + 18) / 114][Stage 157:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.424643604 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 22  OR  par titionIndex = 23  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 38  OR  partitionIndex = 5 2  OR  partitionIndex = 53 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 22  OR  partitionIndex = 23  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 38  OR  partitionIndex = 52  OR  partitionIndex = 53 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381467854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:==============================>                      (64 + 49) / 113][Stage 158:=====================================>               (80 + 33) / 113][Stage 158:==============================================>     (102 + 11) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:=============================>                       (63 + 51) / 114][Stage 159:=================================>                   (72 + 42) / 114][Stage 159:========================================>            (88 + 26) / 114][Stage 159:==================================================>  (108 + 6) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.671123522 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 147  OR  partitionIn dex = 160  OR  partitionIndex = 161 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 147  OR  partitionIndex = 160  OR  partitionIndex = 161 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384398587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:=============================>                       (62 + 51) / 113][Stage 160:=====================================>               (80 + 33) / 113][Stage 160:===========================================>         (92 + 21) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:===========================>                         (60 + 54) / 114][Stage 161:================================>                    (69 + 45) / 114][Stage 161:===========================================>         (93 + 21) / 114][Stage 161:===============================================>    (104 + 10) / 114][Stage 161:===================================================> (111 + 3) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.792265717 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 176  OR  partitionIndex = 177  OR  partitionIn dex = 178  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 176  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390879751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:============================>                        (60 + 53) / 113][Stage 162:===================================>                 (75 + 38) / 113][Stage 162:==============================================>      (99 + 14) / 113]                                                                                [Stage 163:===========================>                         (60 + 54) / 114][Stage 163:================================>                    (70 + 44) / 114][Stage 163:=======================================>             (86 + 28) / 114][Stage 163:==============================================>      (99 + 15) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.411637988 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 62  OR  pa rtitionIndex = 63  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex =  88  OR  partitionIndex = 89 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 88  OR  partitionIndex = 89 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377675007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:==============================>                      (64 + 49) / 113][Stage 164:======================================>              (83 + 30) / 113][Stage 164:================================================>    (104 + 9) / 113]                                                                                [Stage 165:============================>                        (61 + 53) / 114][Stage 165:================================>                    (70 + 44) / 114][Stage 165:=====================================>               (80 + 34) / 114][Stage 165:==============================================>     (103 + 11) / 114][Stage 165:====================================================>(112 + 2) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.505455446 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 75  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex =  91  OR  partitionIndex = 104 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 104 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375048635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:=============================>                       (63 + 50) / 113][Stage 166:=====================================>               (80 + 33) / 113][Stage 166:=============================================>       (96 + 17) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:==============================>                      (65 + 49) / 114][Stage 167:===================================>                 (76 + 38) / 114][Stage 167:============================================>        (95 + 19) / 114][Stage 167:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.52250381 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 47  OR  pa rtitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex =  88  OR  partitionIndex = 89 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 88  OR  partitionIndex = 89 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400301729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (60 + 53) / 113][Stage 168:===============================>                     (68 + 45) / 113][Stage 168:=======================================>             (84 + 29) / 113][Stage 168:=================================================>   (106 + 7) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:==============================>                      (66 + 48) / 114][Stage 169:======================================>              (83 + 31) / 114][Stage 169:==============================================>     (103 + 11) / 114][Stage 169:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.396867755 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 66  OR  pa rtitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex =  83  OR  partitionIndex = 96 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 83  OR  partitionIndex = 96 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401191367 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:============================>                        (61 + 52) / 113][Stage 170:===============================>                     (67 + 46) / 113][Stage 170:=====================================>               (80 + 33) / 113][Stage 170:================================================>    (104 + 9) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:=============================>                       (63 + 51) / 114][Stage 171:=================================>                   (71 + 43) / 114][Stage 171:============================================>        (95 + 19) / 114][Stage 171:===================================================> (110 + 4) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.621323085 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 147  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIn dex = 176  OR  partitionIndex = 177 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 147  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 176  OR  partitionIndex = 177 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380241904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:================================>                    (70 + 43) / 113][Stage 172:=========================================>           (88 + 25) / 113][Stage 172:=================================================>   (105 + 8) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:===========================>                         (60 + 54) / 114][Stage 173:=============================>                       (64 + 50) / 114][Stage 173:======================================>              (82 + 32) / 114][Stage 173:=============================================>       (98 + 16) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.947891044 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  part itionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18   OR  partitionIndex = 19 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 19 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374297782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:============================>                        (60 + 53) / 113][Stage 174:==============================>                      (66 + 47) / 113][Stage 174:=====================================>               (79 + 34) / 113][Stage 174:===============================================>    (103 + 10) / 113]                                                                                [Stage 175:=============================>                       (63 + 51) / 114][Stage 175:==================================>                  (75 + 39) / 114][Stage 175:===========================================>         (93 + 21) / 114][Stage 175:=================================================>   (106 + 8) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.386266367 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex =  60  OR  partitionIndex = 61 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 60  OR  partitionIndex = 61 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38294032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:============================>                        (60 + 53) / 113][Stage 176:================================>                    (70 + 43) / 113][Stage 176:=======================================>             (85 + 28) / 113][Stage 176:==================================================>  (107 + 6) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:=============================>                       (64 + 50) / 114][Stage 177:=====================================>               (81 + 33) / 114][Stage 177:==============================================>     (101 + 13) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.605926198 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 228  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 244  OR  partitionIndex = 245 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 228  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 244  OR  partitionIndex = 245 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376820497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:===============================>                     (67 + 46) / 113][Stage 178:====================================>                (78 + 35) / 113][Stage 178:==========================================>          (90 + 23) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:============================>                        (61 + 53) / 114][Stage 179:=================================>                   (73 + 41) / 114][Stage 179:===========================================>         (94 + 20) / 114][Stage 179:==================================================>  (108 + 6) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.568320167 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIn dex = 178  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377354617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:==============================>                      (65 + 48) / 113][Stage 180:====================================>                (78 + 35) / 113][Stage 180:================================================>    (104 + 9) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:============================>                        (62 + 52) / 114][Stage 181:================================>                    (69 + 45) / 114][Stage 181:=========================================>           (89 + 25) / 114][Stage 181:==============================================>     (102 + 12) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.017773283 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIn dex = 182  OR  partitionIndex = 183 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423009757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:============================>                        (61 + 52) / 113][Stage 182:====================================>                (77 + 36) / 113][Stage 182:===============================================>    (103 + 10) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:=============================>                       (64 + 50) / 114][Stage 183:=================================>                   (73 + 41) / 114][Stage 183:=========================================>           (90 + 24) / 114][Stage 183:==============================================>     (101 + 13) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.899618948 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIn dex = 222  OR  partitionIndex = 251 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 222  OR  partitionIndex = 251 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418922928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (61 + 52) / 113][Stage 184:==================================>                  (74 + 39) / 113][Stage 184:=============================================>       (97 + 16) / 113][Stage 184:===================================================> (110 + 3) / 113]                                                                                [Stage 185:===========================>                         (60 + 54) / 114][Stage 185:============================>                        (62 + 52) / 114][Stage 185:=======================================>             (84 + 30) / 114][Stage 185:==============================================>     (102 + 12) / 114][Stage 185:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.24311702 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 233  OR   partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 248  OR  partitionIndex = 249  OR  partitionIn dex = 250  OR  partitionIndex = 251 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 248  OR  partitionIndex = 249  OR  partitionIndex = 250  OR  partitionIndex = 251 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381739448 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:===============================>                     (67 + 46) / 113][Stage 186:======================================>              (83 + 30) / 113][Stage 186:==============================================>     (102 + 11) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:============================>                        (61 + 53) / 114][Stage 187:================================>                    (69 + 45) / 114][Stage 187:====================================>                (78 + 36) / 114][Stage 187:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.224379877 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 207  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 222  OR  partitionIndex = 223  OR  partitionIn dex = 236  OR  partitionIndex = 237 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 222  OR  partitionIndex = 223  OR  partitionIndex = 236  OR  partitionIndex = 237 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389430129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:============================>                        (60 + 53) / 113][Stage 188:=================================>                   (72 + 41) / 113][Stage 188:=========================================>           (89 + 24) / 113][Stage 188:==================================================>  (107 + 6) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:=============================>                       (63 + 51) / 114][Stage 189:===================================>                 (77 + 37) / 114][Stage 189:============================================>        (96 + 18) / 114][Stage 189:=================================================>   (107 + 7) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.654716626 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 50   OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 50  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382545308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:==============================>                      (64 + 49) / 113][Stage 190:====================================>                (77 + 36) / 113][Stage 190:==============================================>     (101 + 12) / 113][Stage 190:===================================================> (110 + 3) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:================================>                    (69 + 45) / 114][Stage 191:=====================================>               (81 + 33) / 114][Stage 191:==========================================>          (91 + 23) / 114][Stage 191:===================================================> (110 + 4) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.051265185 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 199  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIn dex = 242  OR  partitionIndex = 243 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 199  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 242  OR  partitionIndex = 243 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377244204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=============================>                       (63 + 50) / 113][Stage 192:================================>                    (69 + 44) / 113][Stage 192:==========================================>          (91 + 22) / 113][Stage 192:==================================================>  (107 + 6) / 113]                                                                                [Stage 193:============================>                        (61 + 53) / 114][Stage 193:================================>                    (70 + 44) / 114][Stage 193:==========================================>          (92 + 22) / 114][Stage 193:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.376201404 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 109  OR   partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIn dex = 126  OR  partitionIndex = 127 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395961055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:===============================>                     (67 + 46) / 113][Stage 194:======================================>              (82 + 31) / 113][Stage 194:=============================================>       (97 + 16) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:================================>                    (69 + 45) / 114][Stage 195:========================================>            (87 + 27) / 114][Stage 195:================================================>    (105 + 9) / 114][Stage 195:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.781621523 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 143  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIn dex = 186  OR  partitionIndex = 187 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 143  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 186  OR  partitionIndex = 187 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414545047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:==============================>                      (64 + 49) / 113][Stage 196:====================================>                (78 + 35) / 113][Stage 196:==============================================>     (102 + 11) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:===========================>                         (60 + 54) / 114][Stage 197:===============================>                     (67 + 47) / 114][Stage 197:=====================================>               (81 + 33) / 114][Stage 197:=============================================>      (100 + 14) / 114][Stage 197:====================================================>(112 + 2) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.614807253 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 24  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex =  118  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 24  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39492864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (60 + 53) / 113][Stage 198:================================>                    (69 + 44) / 113][Stage 198:==========================================>          (91 + 22) / 113][Stage 198:==================================================>  (107 + 6) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:===============================>                     (67 + 47) / 114][Stage 199:==========================================>          (91 + 23) / 114][Stage 199:==================================================>  (108 + 6) / 114][Stage 199:====================================================>(112 + 2) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.584792649 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 87  OR  partitionIndex =  100  OR  partitionIndex = 101 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 87  OR  partitionIndex = 100  OR  partitionIndex = 101 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377245348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (59 + 54) / 113][Stage 200:==============================>                      (65 + 48) / 113][Stage 200:================================>                    (70 + 43) / 113][Stage 200:==============================================>     (100 + 13) / 113][Stage 200:===================================================> (109 + 4) / 113]                                                                                [Stage 201:===========================>                         (60 + 54) / 114][Stage 201:===============================>                     (68 + 46) / 114][Stage 201:=======================================>             (84 + 30) / 114][Stage 201:==============================================>     (101 + 13) / 114][Stage 201:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 6.206156603 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m21.176s
user	12m12.176s
sys	1m42.232s
