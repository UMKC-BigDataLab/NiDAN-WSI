Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/29 19:27:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:27:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:27:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:27:56 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/29 19:27:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/29 19:28:08 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170529192758-0673).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/10000 00000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, Strin g)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.H iveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 4.480136556 seconds

scala> val queries = List(("SELECT imageBytes FROM data  WHERE partitionZIndex>=100 AND partitionZIndex<=107",  8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:=====================================>                 (79 + 37) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 13.633484059 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 46  OR  partitionIndex = 47  O R  partitionIndex = 61  OR  partitionIndex = 62 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 61  OR  partitionIndex = 62 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.809802891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 2:====================>                                  (42 + 71) / 113][Stage 2:========================>                              (51 + 62) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:==============================>                        (62 + 51) / 113][Stage 2:=================================>                     (69 + 44) / 113][Stage 2:========================================>              (83 + 30) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:=====================================================> (109 + 4) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:=============================>                         (62 + 52) / 114][Stage 3:================================>                      (68 + 46) / 114][Stage 3:=====================================>                 (77 + 37) / 114][Stage 3:==============================================>        (96 + 18) / 114][Stage 3:==================================================>    (105 + 9) / 114][Stage 3:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.013828779 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 42  OR  partitionIndex = 43  O R  partitionIndex = 56  OR  partitionIndex = 57 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 56  OR  partitionIndex = 57 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.715954021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (54 + 59) / 113][Stage 4:===========================>                           (57 + 56) / 113][Stage 4:=============================>                         (60 + 53) / 113][Stage 4:================================>                      (67 + 46) / 113][Stage 4:======================================>                (79 + 34) / 113][Stage 4:=============================================>         (94 + 19) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:==========================>                            (55 + 59) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:================================>                      (67 + 47) / 114][Stage 5:===================================>                   (73 + 41) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:==============================================>        (97 + 17) / 114][Stage 5:====================================================>  (108 + 6) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.479371384 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 42  OR  partitionIndex = 43  O R  partitionIndex = 58  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 58  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.639408162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (58 + 55) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:================================>                      (67 + 46) / 113][Stage 6:======================================>                (80 + 33) / 113][Stage 6:==============================================>        (96 + 17) / 113][Stage 6:====================================================>  (108 + 5) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:===============================>                       (66 + 48) / 114][Stage 7:====================================>                  (75 + 39) / 114][Stage 7:===========================================>           (91 + 23) / 114][Stage 7:=================================================>    (104 + 10) / 114][Stage 7:=====================================================> (111 + 3) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.089867219 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR   partitionIndex = 20  OR  partitionIndex = 21 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.584021239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (58 + 55) / 113][Stage 8:============================>                          (59 + 54) / 113][Stage 8:===============================>                       (64 + 49) / 113][Stage 8:=================================>                     (69 + 44) / 113][Stage 8:========================================>              (83 + 30) / 113][Stage 8:===============================================>       (97 + 16) / 113]                                                                                [Stage 9:============================>                          (60 + 54) / 114][Stage 9:==============================>                        (63 + 51) / 114][Stage 9:====================================>                  (76 + 38) / 114][Stage 9:==============================================>        (96 + 18) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.146390444 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 38  OR  partitionIndex = 39  O R  partitionIndex = 52  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 52  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.56680201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (59 + 54) / 113][Stage 10:==============================>                       (63 + 50) / 113][Stage 10:===================================>                  (75 + 38) / 113][Stage 10:=========================================>            (87 + 26) / 113][Stage 10:===================================================>  (107 + 6) / 113]                                                                                [Stage 11:============================>                         (60 + 54) / 114][Stage 11:===============================>                      (67 + 47) / 114][Stage 11:====================================>                 (78 + 36) / 114][Stage 11:===========================================>          (91 + 23) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:====================================================> (111 + 3) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.160457853 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 108  OR  partitionIndex = 109   OR  partitionIndex = 124  OR  partitionIndex = 125 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 109  OR  partitionIndex = 124  OR  partitionIndex = 125 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.565134819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 12:============================>                         (59 + 54) / 113][Stage 12:============================>                         (60 + 53) / 113][Stage 12:================================>                     (68 + 45) / 113][Stage 12:=======================================>              (83 + 30) / 113][Stage 12:=============================================>        (95 + 18) / 113][Stage 12:====================================================> (109 + 4) / 113]                                                                                [Stage 13:=============================>                        (62 + 52) / 114][Stage 13:===============================>                      (66 + 48) / 114][Stage 13:========================================>             (85 + 29) / 114][Stage 13:===============================================>     (103 + 11) / 114][Stage 13:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.949896226 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 68  OR  partitionIndex = 69  O R  partitionIndex = 84  OR  partitionIndex = 115 ", 4)) 
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 84  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.535959095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:================================>                     (68 + 45) / 113][Stage 14:======================================>               (81 + 32) / 113][Stage 14:============================================>         (93 + 20) / 113][Stage 14:====================================================> (109 + 4) / 113][Stage 14:=====================================================>(111 + 2) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:=============================>                        (63 + 51) / 114][Stage 15:====================================>                 (76 + 38) / 114][Stage 15:==========================================>           (90 + 24) / 114][Stage 15:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.116210206 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 140  OR  partitionIndex = 171   OR  partitionIndex = 186  OR  partitionIndex = 187 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 171  OR  partitionIndex = 186  OR  partitionIndex = 187 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.521991731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:===================================>                  (75 + 38) / 113][Stage 16:===========================================>          (90 + 23) / 113][Stage 16:===================================================>  (107 + 6) / 113]                                                                                [Stage 17:============================>                         (61 + 53) / 114][Stage 17:==================================>                   (72 + 42) / 114][Stage 17:===========================================>          (91 + 23) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.542430754 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 70  OR  partitionIndex = 71  O R  partitionIndex = 86  OR  partitionIndex = 87 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 86  OR  partitionIndex = 87 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.547551856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:===============================>                      (65 + 48) / 113][Stage 18:======================================>               (80 + 33) / 113][Stage 18:=============================================>        (96 + 17) / 113][Stage 18:=================================================>    (104 + 9) / 113][Stage 18:==================================================>   (106 + 7) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:===============================>                      (66 + 48) / 114][Stage 19:====================================>                 (77 + 37) / 114][Stage 19:==============================================>      (100 + 14) / 114][Stage 19:==================================================>   (107 + 7) / 114][Stage 19:=====================================================>(112 + 2) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.156736591 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 69  OR  partitionIndex = 70  O R  partitionIndex = 84  OR  partitionIndex = 85 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 84  OR  partitionIndex = 85 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.512708052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:===============================>                      (66 + 47) / 113][Stage 20:====================================>                 (77 + 36) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:==================================================>   (105 + 8) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:=============================>                        (63 + 51) / 114][Stage 21:===================================>                  (74 + 40) / 114][Stage 21:============================================>         (93 + 21) / 114][Stage 21:==================================================>   (107 + 7) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.008654701 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 142  OR  partitionIndex = 143   OR  partitionIndex = 157  OR  partitionIndex = 158 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 143  OR  partitionIndex = 157  OR  partitionIndex = 158 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.498777868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:================================>                     (67 + 46) / 113][Stage 22:=======================================>              (82 + 31) / 113][Stage 22:================================================>    (103 + 10) / 113]                                                                                [Stage 23:===========================>                          (58 + 56) / 114][Stage 23:=============================>                        (62 + 52) / 114][Stage 23:===================================>                  (75 + 39) / 114][Stage 23:==========================================>           (89 + 25) / 114][Stage 23:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.521196968 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 167  OR  partitionIndex = 182   OR  partitionIndex = 183  OR  partitionIndex = 192 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 192 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.490992519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:============================>                         (59 + 54) / 113][Stage 24:==================================>                   (72 + 41) / 113][Stage 24:==========================================>           (88 + 25) / 113][Stage 24:====================================================> (109 + 4) / 113]                                                                                [Stage 25:==============================>                       (64 + 50) / 114][Stage 25:====================================>                 (76 + 38) / 114][Stage 25:===========================================>          (91 + 23) / 114][Stage 25:================================================>    (104 + 10) / 114][Stage 25:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.404095331 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 74  OR  partitionIndex = 75  O R  partitionIndex = 89  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.492300178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (60 + 53) / 113][Stage 26:===============================>                      (66 + 47) / 113][Stage 26:========================================>             (85 + 28) / 113][Stage 26:===============================================>      (99 + 14) / 113][Stage 26:====================================================> (110 + 3) / 113]                                                                                [Stage 27:==============================>                       (64 + 50) / 114][Stage 27:====================================>                 (78 + 36) / 114][Stage 27:============================================>         (93 + 21) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:====================================================> (111 + 3) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.810541995 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 238  OR  partitionIndex = 239   OR  partitionIndex = 252  OR  partitionIndex = 253 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 238  OR  partitionIndex = 239  OR  partitionIndex = 252  OR  partitionIndex = 253 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.487611918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:================================>                     (69 + 44) / 113][Stage 28:========================================>             (85 + 28) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:===================================================>  (108 + 5) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:===============================>                      (67 + 47) / 114][Stage 29:==========================================>           (90 + 24) / 114][Stage 29:================================================>    (104 + 10) / 114][Stage 29:===================================================>  (109 + 5) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.607189988 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 111  OR  partitionIndex = 126   OR  partitionIndex = 127  OR  partitionIndex = 128 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 128 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.532035931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:==============================>                       (63 + 50) / 113][Stage 30:=====================================>                (78 + 35) / 113][Stage 30:===============================================>     (101 + 12) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:==============================>                       (64 + 50) / 114][Stage 31:========================================>             (85 + 29) / 114][Stage 31:==================================================>   (107 + 7) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.238304492 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 38  OR  partitionIndex = 39  O R  partitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.476978702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:==============================>                       (64 + 49) / 113][Stage 32:==================================>                   (72 + 41) / 113][Stage 32:=========================================>            (87 + 26) / 113][Stage 32:==============================================>      (100 + 13) / 113][Stage 32:===================================================>  (108 + 5) / 113]                                                                                [Stage 33:============================>                         (61 + 53) / 114][Stage 33:================================>                     (68 + 46) / 114][Stage 33:========================================>             (85 + 29) / 114][Stage 33:==================================================>   (106 + 8) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.656163873 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 68  OR  partitionIndex = 99  O R  partitionIndex = 114  OR  partitionIndex = 115 ", 4) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 99  OR  partitionIndex = 114  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.490558473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:===============================>                      (65 + 48) / 113][Stage 34:====================================>                 (76 + 37) / 113][Stage 34:================================================>    (103 + 10) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:==============================>                       (64 + 50) / 114][Stage 35:===================================>                  (74 + 40) / 114][Stage 35:========================================>             (86 + 28) / 114][Stage 35:==================================================>   (106 + 8) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.66674391 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 74  OR  partitionIndex = 75  O R  partitionIndex = 88  OR  partitionIndex = 89 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 88  OR  partitionIndex = 89 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.521748217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (59 + 54) / 113][Stage 36:=============================>                        (62 + 51) / 113][Stage 36:====================================>                 (76 + 37) / 113][Stage 36:============================================>         (93 + 20) / 113][Stage 36:=================================================>    (104 + 9) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:================================>                     (69 + 45) / 114][Stage 37:=====================================>                (80 + 34) / 114][Stage 37:================================================>    (104 + 10) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.58955362 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 230  OR  partitionIndex = 231   OR  partitionIndex = 244  OR  partitionIndex = 245 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 244  OR  partitionIndex = 245 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.481206973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:===============================>                      (66 + 47) / 113][Stage 38:=====================================>                (79 + 34) / 113][Stage 38:============================================>         (93 + 20) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:============================>                         (61 + 53) / 114][Stage 39:=================================>                    (70 + 44) / 114][Stage 39:=======================================>              (83 + 31) / 114][Stage 39:=============================================>        (97 + 17) / 114][Stage 39:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.381985024 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 11  OR  partitionIndex = 26  O R  partitionIndex = 27  OR  partitionIndex = 40 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 26  OR  partitionIndex = 27  OR  partitionIndex = 40 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.569836739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (60 + 53) / 113][Stage 40:==============================>                       (64 + 49) / 113][Stage 40:======================================>               (81 + 32) / 113][Stage 40:==================================================>   (105 + 8) / 113][Stage 40:=====================================================>(111 + 2) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:=============================>                        (63 + 51) / 114][Stage 41:=====================================>                (80 + 34) / 114][Stage 41:==============================================>       (98 + 16) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:====================================================> (110 + 4) / 114][Stage 41:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.77518615 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 172  OR  partitionIndex = 173   OR  partitionIndex = 188  OR  partitionIndex = 189 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 173  OR  partitionIndex = 188  OR  partitionIndex = 189 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.45674669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 42:=============================>                        (61 + 52) / 113][Stage 42:================================>                     (69 + 44) / 113][Stage 42:============================================>         (93 + 20) / 113][Stage 42:===================================================>  (108 + 5) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:=============================>                        (63 + 51) / 114][Stage 43:===================================>                  (75 + 39) / 114][Stage 43:==============================================>       (98 + 16) / 114][Stage 43:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.172780187 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 200  OR  partitionIndex = 201   OR  partitionIndex = 216  OR  partitionIndex = 217 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 216  OR  partitionIndex = 217 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.443461822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (60 + 53) / 113][Stage 44:===============================>                      (65 + 48) / 113][Stage 44:=====================================>                (79 + 34) / 113][Stage 44:================================================>    (103 + 10) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:============================>                         (60 + 54) / 114][Stage 45:===============================>                      (67 + 47) / 114][Stage 45:====================================>                 (78 + 36) / 114][Stage 45:===========================================>          (92 + 22) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.306375935 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 223  OR  partitionIndex = 236   OR  partitionIndex = 237  OR  partitionIndex = 252 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 223  OR  partitionIndex = 236  OR  partitionIndex = 237  OR  partitionIndex = 252 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.458059968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:===============================>                      (66 + 47) / 113][Stage 46:=======================================>              (82 + 31) / 113][Stage 46:==================================================>   (106 + 7) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:==============================>                       (65 + 49) / 114][Stage 47:=====================================>                (80 + 34) / 114][Stage 47:================================================>    (104 + 10) / 114][Stage 47:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.339766082 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 234  OR  partitionIndex = 235   OR  partitionIndex = 250  OR  partitionIndex = 251 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 250  OR  partitionIndex = 251 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.451259516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:===============================>                      (65 + 48) / 113][Stage 48:========================================>             (84 + 29) / 113][Stage 48:===================================================>  (107 + 6) / 113]                                                                                [Stage 49:============================>                         (61 + 53) / 114][Stage 49:==============================>                       (65 + 49) / 114][Stage 49:======================================>               (82 + 32) / 114][Stage 49:==================================================>   (107 + 7) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.130673045 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 198  OR  partitionIndex = 199   OR  partitionIndex = 214  OR  partitionIndex = 215 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 199  OR  partitionIndex = 214  OR  partitionIndex = 215 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.456445399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:=============================>                        (61 + 52) / 113][Stage 50:======================================>               (81 + 32) / 113][Stage 50:===============================================>      (99 + 14) / 113][Stage 50:=====================================================>(111 + 2) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:===================================>                  (74 + 40) / 114][Stage 51:===========================================>          (92 + 22) / 114][Stage 51:===============================================>     (103 + 11) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.412272157 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 22  OR  partitionIndex = 23  O R  partitionIndex = 36  OR  partitionIndex = 37 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 23  OR  partitionIndex = 36  OR  partitionIndex = 37 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.425746016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:=============================>                        (61 + 52) / 113][Stage 52:===================================>                  (75 + 38) / 113][Stage 52:============================================>         (93 + 20) / 113][Stage 52:==================================================>   (106 + 7) / 113][Stage 52:====================================================> (109 + 4) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:=============================>                        (62 + 52) / 114][Stage 53:====================================>                 (77 + 37) / 114][Stage 53:==============================================>      (100 + 14) / 114][Stage 53:====================================================> (110 + 4) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.651234891 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 64  OR  partitionIndex = 65  O R  partitionIndex = 80  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 80  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.443589351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:================================>                     (69 + 44) / 113][Stage 54:========================================>             (84 + 29) / 113][Stage 54:==================================================>   (106 + 7) / 113]                                                                                [Stage 55:=============================>                        (62 + 52) / 114][Stage 55:==================================>                   (73 + 41) / 114][Stage 55:=============================================>        (95 + 19) / 114][Stage 55:==================================================>   (106 + 8) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.190511139 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 215  OR  partitionIndex = 228   OR  partitionIndex = 229  OR  partitionIndex = 244 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 228  OR  partitionIndex = 229  OR  partitionIndex = 244 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.426162618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:================================>                     (67 + 46) / 113][Stage 56:=====================================>                (79 + 34) / 113][Stage 56:================================================>    (103 + 10) / 113]                                                                                [Stage 57:=============================>                        (63 + 51) / 114][Stage 57:==================================>                   (72 + 42) / 114][Stage 57:===========================================>          (91 + 23) / 114][Stage 57:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.197553085 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR   partitionIndex = 21  OR  partitionIndex = 22 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.442482458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:=============================>                        (61 + 52) / 113][Stage 58:=================================>                    (71 + 42) / 113][Stage 58:=========================================>            (87 + 26) / 113][Stage 58:===================================================>  (107 + 6) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:=============================>                        (63 + 51) / 114][Stage 59:=====================================>                (79 + 35) / 114][Stage 59:=============================================>        (95 + 19) / 114][Stage 59:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.585641782 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 166  OR  partitionIndex = 167   OR  partitionIndex = 180  OR  partitionIndex = 181 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 180  OR  partitionIndex = 181 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.457041106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:=================================>                    (70 + 43) / 113][Stage 60:==========================================>           (88 + 25) / 113][Stage 60:==================================================>   (106 + 7) / 113]                                                                                [Stage 61:============================>                         (61 + 53) / 114][Stage 61:===================================>                  (75 + 39) / 114][Stage 61:============================================>         (93 + 21) / 114][Stage 61:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.25150083 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR   partitionIndex = 17  OR  partitionIndex = 18 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.435481749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:================================>                     (67 + 46) / 113][Stage 62:========================================>             (84 + 29) / 113][Stage 62:===============================================>     (102 + 11) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:================================>                     (69 + 45) / 114][Stage 63:====================================>                 (77 + 37) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.359086981 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 190  OR  partitionIndex = 191 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 190  OR  partitionIndex = 191 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.449049759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (59 + 54) / 113][Stage 64:================================>                     (69 + 44) / 113][Stage 64:==========================================>           (89 + 24) / 113][Stage 64:==================================================>   (106 + 7) / 113]                                                                                [Stage 65:============================>                         (61 + 53) / 114][Stage 65:=================================>                    (71 + 43) / 114][Stage 65:========================================>             (86 + 28) / 114][Stage 65:==============================================>      (101 + 13) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.343449353 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 136  OR  partitionIndex = 137   OR  partitionIndex = 152  OR  partitionIndex = 153 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 152  OR  partitionIndex = 153 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.426174127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:==============================>                       (63 + 50) / 113][Stage 66:=====================================>                (79 + 34) / 113][Stage 66:==============================================>      (100 + 13) / 113][Stage 66:====================================================> (110 + 3) / 113]                                                                                [Stage 67:============================>                         (60 + 54) / 114][Stage 67:==============================>                       (65 + 49) / 114][Stage 67:====================================>                 (78 + 36) / 114][Stage 67:=========================================>            (88 + 26) / 114]                                                                                Time elapsed: 3.090461451 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 198  OR  partitionIndex = 199   OR  partitionIndex = 213  OR  partitionIndex = 214 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 199  OR  partitionIndex = 213  OR  partitionIndex = 214 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.435630413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:===============================>                      (65 + 48) / 113][Stage 68:========================================>             (85 + 28) / 113][Stage 68:====================================================> (109 + 4) / 113]                                                                                [Stage 69:=============================>                        (62 + 52) / 114][Stage 69:==================================>                   (72 + 42) / 114][Stage 69:===========================================>          (92 + 22) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.185783068 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 101  OR  partitionIndex = 102   OR  partitionIndex = 116  OR  partitionIndex = 117 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 102  OR  partitionIndex = 116  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.422501323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:============================>                         (60 + 53) / 113][Stage 70:=================================>                    (70 + 43) / 113][Stage 70:============================================>         (93 + 20) / 113][Stage 70:=====================================================>(111 + 2) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:==============================>                       (64 + 50) / 114][Stage 71:====================================>                 (76 + 38) / 114][Stage 71:==============================================>       (99 + 15) / 114][Stage 71:====================================================> (111 + 3) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.467689789 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 138  OR  partitionIndex = 139   OR  partitionIndex = 153  OR  partitionIndex = 154 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 139  OR  partitionIndex = 153  OR  partitionIndex = 154 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.41327172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (60 + 53) / 113][Stage 72:=================================>                    (70 + 43) / 113][Stage 72:============================================>         (93 + 20) / 113][Stage 72:====================================================> (109 + 4) / 113]                                                                                [Stage 73:=============================>                        (62 + 52) / 114][Stage 73:===================================>                  (74 + 40) / 114][Stage 73:==========================================>           (90 + 24) / 114][Stage 73:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.271197115 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 33  OR  partitionIndex = 34  O R  partitionIndex = 48  OR  partitionIndex = 49 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33  OR  partitionIndex = 34  OR  partitionIndex = 48  OR  partitionIndex = 49 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.411237369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (60 + 53) / 113][Stage 74:===================================>                  (74 + 39) / 113][Stage 74:=========================================>            (86 + 27) / 113][Stage 74:====================================================> (109 + 4) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:==============================>                       (65 + 49) / 114][Stage 75:======================================>               (81 + 33) / 114][Stage 75:===============================================>     (103 + 11) / 114][Stage 75:====================================================> (110 + 4) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.350198374 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 72  OR  partitionIndex = 73  O R  partitionIndex = 88  OR  partitionIndex = 89 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 88  OR  partitionIndex = 89 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.418367924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:===============================>                      (65 + 48) / 113][Stage 76:====================================>                 (76 + 37) / 113][Stage 76:==============================================>       (97 + 16) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:===============================>                      (66 + 48) / 114][Stage 77:===================================>                  (75 + 39) / 114][Stage 77:============================================>         (94 + 20) / 114][Stage 77:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.211008244 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 34  OR  partitionIndex = 35  O R  partitionIndex = 48  OR  partitionIndex = 49 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 48  OR  partitionIndex = 49 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.42279119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:===============================>                      (65 + 48) / 113][Stage 78:========================================>             (84 + 29) / 113][Stage 78:================================================>    (103 + 10) / 113]                                                                                [Stage 79:=============================>                        (62 + 52) / 114][Stage 79:=================================>                    (71 + 43) / 114][Stage 79:=========================================>            (88 + 26) / 114][Stage 79:====================================================> (110 + 4) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.398027903 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 12  OR  partitionIndex = 43  O R  partitionIndex = 58  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 43  OR  partitionIndex = 58  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.406295212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 80:=============================>                        (61 + 52) / 113][Stage 80:===================================>                  (74 + 39) / 113][Stage 80:=========================================>            (87 + 26) / 113][Stage 80:===================================================>  (107 + 6) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:===============================>                      (67 + 47) / 114][Stage 81:========================================>             (85 + 29) / 114][Stage 81:=================================================>    (105 + 9) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.346970326 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 4  OR  partitionIndex = 35  OR   partitionIndex = 50  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 35  OR  partitionIndex = 50  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.410770777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:===============================>                      (66 + 47) / 113][Stage 82:========================================>             (84 + 29) / 113][Stage 82:==============================================>       (97 + 16) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:============================>                         (61 + 53) / 114][Stage 83:===================================>                  (75 + 39) / 114][Stage 83:==============================================>       (99 + 15) / 114][Stage 83:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.390585697 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 205  OR  partitionIndex = 206   OR  partitionIndex = 220  OR  partitionIndex = 221 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.488132292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (60 + 53) / 113][Stage 84:=================================>                    (70 + 43) / 113][Stage 84:==========================================>           (88 + 25) / 113][Stage 84:====================================================> (109 + 4) / 113]                                                                                [Stage 85:============================>                         (60 + 54) / 114][Stage 85:=================================>                    (70 + 44) / 114][Stage 85:=========================================>            (88 + 26) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.343670344 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 106  OR  partitionIndex = 107   OR  partitionIndex = 120  OR  partitionIndex = 121 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 120  OR  partitionIndex = 121 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.42168794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:===============================>                      (65 + 48) / 113][Stage 86:=====================================>                (79 + 34) / 113][Stage 86:===============================================>      (99 + 14) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:==============================>                       (64 + 50) / 114][Stage 87:======================================>               (82 + 32) / 114][Stage 87:==============================================>      (101 + 13) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.381282479 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 175  OR  partitionIndex = 190   OR  partitionIndex = 191  OR  partitionIndex = 200 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.414501788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:=================================>                    (71 + 42) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:==================================================>   (105 + 8) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:===============================>                      (67 + 47) / 114][Stage 89:=========================================>            (88 + 26) / 114][Stage 89:===============================================>     (103 + 11) / 114][Stage 89:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.27069594 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 34  OR  partitionIndex = 35  O R  partitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.398507009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:==============================>                       (63 + 50) / 113][Stage 90:====================================>                 (77 + 36) / 113][Stage 90:==============================================>      (100 + 13) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:==================================>                   (72 + 42) / 114][Stage 91:===========================================>          (91 + 23) / 114][Stage 91:==================================================>   (106 + 8) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.207746846 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 133  OR  partitionIndex = 134   OR  partitionIndex = 148  OR  partitionIndex = 149 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 148  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.399255348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:================================>                     (68 + 45) / 113][Stage 92:=========================================>            (87 + 26) / 113][Stage 92:=================================================>    (104 + 9) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:=============================>                        (63 + 51) / 114][Stage 93:==================================>                   (73 + 41) / 114][Stage 93:========================================>             (86 + 28) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.485983614 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 79  OR  partitionIndex = 94  O R  partitionIndex = 95  OR  partitionIndex = 108 ", 4)) 
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.403995773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:===============================>                      (65 + 48) / 113][Stage 94:====================================>                 (76 + 37) / 113][Stage 94:===============================================>      (99 + 14) / 113][Stage 94:=====================================================>(111 + 2) / 113]                                                                                [Stage 95:============================>                         (60 + 54) / 114][Stage 95:==============================>                       (64 + 50) / 114][Stage 95:=======================================>              (83 + 31) / 114][Stage 95:============================================>         (94 + 20) / 114][Stage 95:====================================================> (110 + 4) / 114][Stage 95:=====================================================>(112 + 2) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.619659396 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 154  OR  partitionIndex = 155   OR  partitionIndex = 168  OR  partitionIndex = 169 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 168  OR  partitionIndex = 169 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.403542676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 96:==============================>                       (63 + 50) / 113][Stage 96:==================================>                   (72 + 41) / 113][Stage 96:==========================================>           (89 + 24) / 113][Stage 96:==================================================>   (105 + 8) / 113][Stage 96:=====================================================>(111 + 2) / 113]                                                                                [Stage 97:============================>                         (60 + 54) / 114][Stage 97:=============================>                        (63 + 51) / 114][Stage 97:======================================>               (81 + 33) / 114][Stage 97:==============================================>       (99 + 15) / 114][Stage 97:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.330312994 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 96  OR  partitionIndex = 97  O R  partitionIndex = 112  OR  partitionIndex = 113 ", 4) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 112  OR  partitionIndex = 113 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.408872137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (60 + 53) / 113][Stage 98:=================================>                    (71 + 42) / 113][Stage 98:=======================================>              (82 + 31) / 113][Stage 98:===============================================>      (99 + 14) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:=============================>                        (62 + 52) / 114][Stage 99:===================================>                  (75 + 39) / 114][Stage 99:=============================================>        (97 + 17) / 114][Stage 99:====================================================> (111 + 3) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.406719527 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 23  OR  partitionIndex = 36  O R  partitionIndex = 37  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.414842037 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (61 + 52) / 113][Stage 100:===================================>                 (76 + 37) / 113][Stage 100:==========================================>          (91 + 22) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:===========================>                         (60 + 54) / 114][Stage 101:=============================>                       (63 + 51) / 114][Stage 101:=====================================>               (81 + 33) / 114][Stage 101:==============================================>     (103 + 11) / 114][Stage 101:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.128017083 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 136  OR  partitionIndex = 137   OR  partitionIndex = 152  OR  partitionIndex = 247 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 152  OR  partitionIndex = 247 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.389591331 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 102:=============================>                       (62 + 51) / 113][Stage 102:================================>                    (69 + 44) / 113][Stage 102:==========================================>          (91 + 22) / 113][Stage 102:==================================================>  (107 + 6) / 113]                                                                                [Stage 103:============================>                        (62 + 52) / 114][Stage 103:===================================>                 (76 + 38) / 114][Stage 103:===========================================>         (93 + 21) / 114][Stage 103:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.129500049 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 91  OR  partitionIndex = 104   OR  partitionIndex = 105  OR  partitionIndex = 120 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.392729322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 104:============================>                        (60 + 53) / 113][Stage 104:==================================>                  (73 + 40) / 113][Stage 104:==========================================>          (91 + 22) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:===========================>                         (60 + 54) / 114][Stage 105:==============================>                      (66 + 48) / 114][Stage 105:====================================>                (79 + 35) / 114][Stage 105:==============================================>      (99 + 15) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.127342148 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 199  OR  partitionIndex = 214   OR  partitionIndex = 215  OR  partitionIndex = 228 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.397030047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 106:============================>                        (60 + 53) / 113][Stage 106:===============================>                     (68 + 45) / 113][Stage 106:==========================================>          (90 + 23) / 113][Stage 106:===============================================>    (103 + 10) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:============================>                        (61 + 53) / 114][Stage 107:===============================>                     (68 + 46) / 114][Stage 107:=====================================>               (80 + 34) / 114][Stage 107:==============================================>     (102 + 12) / 114][Stage 107:====================================================>(112 + 2) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.43089681 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 203  OR  partitionIndex = 218   OR  partitionIndex = 219  OR  partitionIndex = 232 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384367935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:=============================>                       (63 + 50) / 113][Stage 108:===================================>                 (76 + 37) / 113][Stage 108:==============================================>     (100 + 13) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:=============================>                       (63 + 51) / 114][Stage 109:===================================>                 (77 + 37) / 114][Stage 109:============================================>        (95 + 19) / 114][Stage 109:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.141277081 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR   partitionIndex = 20  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 20  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.464508004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:==============================>                      (66 + 47) / 113][Stage 110:======================================>              (83 + 30) / 113][Stage 110:===================================================> (109 + 4) / 113]                                                                                [Stage 111:============================>                        (61 + 53) / 114][Stage 111:=================================>                   (71 + 43) / 114][Stage 111:===========================================>         (93 + 21) / 114][Stage 111:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.299037978 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 130  OR  partitionIndex = 131   OR  partitionIndex = 145  OR  partitionIndex = 146 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.390239816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:===============================>                     (67 + 46) / 113][Stage 112:========================================>            (87 + 26) / 113][Stage 112:===================================================> (109 + 4) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:===============================>                     (68 + 46) / 114][Stage 113:========================================>            (88 + 26) / 114][Stage 113:=================================================>   (106 + 8) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.329971497 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 151  OR  partitionIndex = 164   OR  partitionIndex = 165  OR  partitionIndex = 180 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.377741703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (61 + 52) / 113][Stage 114:=================================>                   (71 + 42) / 113][Stage 114:=======================================>             (85 + 28) / 113][Stage 114:================================================>    (104 + 9) / 113]                                                                                [Stage 115:============================>                        (62 + 52) / 114][Stage 115:===================================>                 (77 + 37) / 114][Stage 115:===========================================>         (93 + 21) / 114]                                                                                Time elapsed: 3.112159264 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 134  OR  partitionIndex = 135   OR  partitionIndex = 149  OR  partitionIndex = 150 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.394192364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:============================>                        (60 + 53) / 113][Stage 116:=================================>                   (72 + 41) / 113][Stage 116:=========================================>           (89 + 24) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:===========================>                         (60 + 54) / 114][Stage 117:============================>                        (61 + 53) / 114][Stage 117:==================================>                  (75 + 39) / 114][Stage 117:============================================>        (96 + 18) / 114][Stage 117:===================================================> (111 + 3) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.334391666 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 160  OR  partitionIndex = 161   OR  partitionIndex = 176  OR  partitionIndex = 177 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 176  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.399356508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:================================>                    (69 + 44) / 113][Stage 118:===========================================>         (92 + 21) / 113][Stage 118:=================================================>   (106 + 7) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:==============================>                      (66 + 48) / 114][Stage 119:=========================================>           (89 + 25) / 114][Stage 119:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.127384751 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 67  OR  partitionIndex = 82  O R  partitionIndex = 83  OR  partitionIndex = 96 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 82  OR  partitionIndex = 83  OR  partitionIndex = 96 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.394828585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 120:============================>                        (60 + 53) / 113][Stage 120:===================================>                 (75 + 38) / 113][Stage 120:==========================================>          (91 + 22) / 113][Stage 120:===================================================> (109 + 4) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:==============================>                      (66 + 48) / 114][Stage 121:=====================================>               (81 + 33) / 114][Stage 121:============================================>        (95 + 19) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.435812703 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 70  OR  partitionIndex = 71  O R  partitionIndex = 85  OR  partitionIndex = 86 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.385572921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:===============================>                     (68 + 45) / 113][Stage 122:=========================================>           (88 + 25) / 113][Stage 122:==================================================>  (107 + 6) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:===============================>                     (68 + 46) / 114][Stage 123:========================================>            (87 + 27) / 114][Stage 123:================================================>    (105 + 9) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.378392205 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 194  OR  partitionIndex = 195   OR  partitionIndex = 208  OR  partitionIndex = 209 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.386791337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 124:============================>                        (60 + 53) / 113][Stage 124:================================>                    (69 + 44) / 113][Stage 124:=========================================>           (88 + 25) / 113][Stage 124:=================================================>   (105 + 8) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:================================>                    (69 + 45) / 114][Stage 125:=======================================>             (86 + 28) / 114][Stage 125:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.345823735 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 46  OR  partitionIndex = 47  O R  partitionIndex = 62  OR  partitionIndex = 63 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 62  OR  partitionIndex = 63 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.40055419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:============================>                        (61 + 52) / 113][Stage 126:=====================================>               (81 + 32) / 113][Stage 126:=============================================>       (98 + 15) / 113][Stage 126:==================================================>  (108 + 5) / 113]                                                                                [Stage 127:============================>                        (62 + 52) / 114][Stage 127:=================================>                   (73 + 41) / 114][Stage 127:==============================================>     (102 + 12) / 114][Stage 127:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.197582145 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 214  OR  partitionIndex = 215   OR  partitionIndex = 228  OR  partitionIndex = 229 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 228  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.382717375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:=============================>                       (62 + 51) / 113][Stage 128:=================================>                   (71 + 42) / 113][Stage 128:========================================>            (86 + 27) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:============================>                        (62 + 52) / 114][Stage 129:===================================>                 (77 + 37) / 114][Stage 129:============================================>        (96 + 18) / 114][Stage 129:===================================================> (110 + 4) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.29886961 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 182  OR  partitionIndex = 183   OR  partitionIndex = 192  OR  partitionIndex = 193 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 192  OR  partitionIndex = 193 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.376896218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:=============================>                       (63 + 50) / 113][Stage 130:===================================>                 (75 + 38) / 113][Stage 130:=============================================>       (98 + 15) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:===============================>                     (67 + 47) / 114][Stage 131:=======================================>             (84 + 30) / 114][Stage 131:================================================>    (105 + 9) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.130467572 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 97  OR  partitionIndex = 98  O R  partitionIndex = 112  OR  partitionIndex = 113 ", 4) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 98  OR  partitionIndex = 112  OR  partitionIndex = 113 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.381499083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:============================>                        (61 + 52) / 113][Stage 132:==================================>                  (74 + 39) / 113][Stage 132:=============================================>       (96 + 17) / 113][Stage 132:==================================================>  (108 + 5) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:==============================>                      (65 + 49) / 114][Stage 133:==================================>                  (75 + 39) / 114][Stage 133:============================================>        (96 + 18) / 114][Stage 133:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.193568355 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 66  OR  partitionIndex = 67  O R  partitionIndex = 81  OR  partitionIndex = 82 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.379402472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (60 + 53) / 113][Stage 134:==================================>                  (73 + 40) / 113][Stage 134:=============================================>       (97 + 16) / 113][Stage 134:===================================================> (110 + 3) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:==============================>                      (66 + 48) / 114][Stage 135:====================================>                (79 + 35) / 114][Stage 135:================================================>    (105 + 9) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.387491068 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 131  OR  partitionIndex = 146   OR  partitionIndex = 147  OR  partitionIndex = 160 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 146  OR  partitionIndex = 147  OR  partitionIndex = 160 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.378301677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:==============================>                      (66 + 47) / 113][Stage 136:======================================>              (82 + 31) / 113][Stage 136:==============================================>     (102 + 11) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===============================>                     (68 + 46) / 114][Stage 137:===================================>                 (77 + 37) / 114][Stage 137:==========================================>          (91 + 23) / 114][Stage 137:==================================================>  (108 + 6) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.430029707 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 13  OR  partitionIndex = 14  O R  partitionIndex = 28  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 28  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384518376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 138:============================>                        (60 + 53) / 113][Stage 138:===================================>                 (75 + 38) / 113][Stage 138:============================================>        (94 + 19) / 113][Stage 138:=================================================>   (105 + 8) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:==============================>                      (66 + 48) / 114][Stage 139:===================================>                 (77 + 37) / 114][Stage 139:=============================================>      (100 + 14) / 114][Stage 139:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.440222684 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 161  OR  partitionIndex = 162   OR  partitionIndex = 176  OR  partitionIndex = 177 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 162  OR  partitionIndex = 176  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384486538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:==============================>                      (64 + 49) / 113][Stage 140:====================================>                (78 + 35) / 113][Stage 140:===============================================>    (103 + 10) / 113][Stage 140:===================================================> (110 + 3) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:=============================>                       (64 + 50) / 114][Stage 141:======================================>              (83 + 31) / 114][Stage 141:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.023293135 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 230  OR  partitionIndex = 231   OR  partitionIndex = 245  OR  partitionIndex = 246 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 245  OR  partitionIndex = 246 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.388195026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (61 + 52) / 113][Stage 142:================================>                    (69 + 44) / 113][Stage 142:===========================================>         (93 + 20) / 113][Stage 142:=================================================>   (106 + 7) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:==============================>                      (66 + 48) / 114][Stage 143:======================================>              (82 + 32) / 114][Stage 143:==============================================>      (99 + 15) / 114][Stage 143:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.378388192 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 54  OR  partitionIndex = 55  O R  partitionIndex = 64  OR  partitionIndex = 65 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 64  OR  partitionIndex = 65 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.380765594 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 144:============================>                        (61 + 52) / 113][Stage 144:==============================>                      (66 + 47) / 113][Stage 144:=====================================>               (81 + 32) / 113][Stage 144:==============================================>     (102 + 11) / 113]                                                                                [Stage 145:============================>                        (62 + 52) / 114][Stage 145:==================================>                  (74 + 40) / 114][Stage 145:==========================================>          (91 + 23) / 114][Stage 145:=================================================>   (106 + 8) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.275300014 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 78  OR  partitionIndex = 79  O R  partitionIndex = 93  OR  partitionIndex = 94 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 79  OR  partitionIndex = 93  OR  partitionIndex = 94 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.387199172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:============================>                        (61 + 52) / 113][Stage 146:=================================>                   (72 + 41) / 113][Stage 146:=========================================>           (89 + 24) / 113][Stage 146:====================================================>(111 + 2) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:=============================>                       (64 + 50) / 114][Stage 147:====================================>                (78 + 36) / 114][Stage 147:==============================================>     (103 + 11) / 114][Stage 147:==================================================>  (108 + 6) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.34929388 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 76  OR  partitionIndex = 77  O R  partitionIndex = 92  OR  partitionIndex = 123 ", 4)) 
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 92  OR  partitionIndex = 123 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.375418395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:=============================>                       (63 + 50) / 113][Stage 148:=====================================>               (80 + 33) / 113][Stage 148:==============================================>      (99 + 14) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:==============================>                      (66 + 48) / 114][Stage 149:====================================>                (79 + 35) / 114][Stage 149:===========================================>         (93 + 21) / 114][Stage 149:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.191903036 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 128  OR  partitionIndex = 129   OR  partitionIndex = 144  OR  partitionIndex = 145 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 144  OR  partitionIndex = 145 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.379743942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:==============================>                      (66 + 47) / 113][Stage 150:====================================>                (78 + 35) / 113][Stage 150:===============================================>    (103 + 10) / 113][Stage 150:===================================================> (110 + 3) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:=============================>                       (63 + 51) / 114][Stage 151:===================================>                 (77 + 37) / 114][Stage 151:===========================================>         (93 + 21) / 114][Stage 151:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.18313722 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 76  OR  partitionIndex = 107   OR  partitionIndex = 122  OR  partitionIndex = 123 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 107  OR  partitionIndex = 122  OR  partitionIndex = 123 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.37784721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 152:============================>                        (60 + 53) / 113][Stage 152:=================================>                   (72 + 41) / 113][Stage 152:=============================================>       (96 + 17) / 113][Stage 152:===================================================> (109 + 4) / 113]                                                                                [Stage 153:=============================>                       (64 + 50) / 114][Stage 153:=====================================>               (80 + 34) / 114][Stage 153:============================================>        (95 + 19) / 114][Stage 153:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.151139406 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 206  OR  partitionIndex = 207   OR  partitionIndex = 221  OR  partitionIndex = 222 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 207  OR  partitionIndex = 221  OR  partitionIndex = 222 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.395292749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 154:============================>                        (61 + 52) / 113][Stage 154:==================================>                  (74 + 39) / 113][Stage 154:===========================================>         (93 + 20) / 113][Stage 154:===================================================> (109 + 4) / 113]                                                                                [Stage 155:============================>                        (62 + 52) / 114][Stage 155:==================================>                  (75 + 39) / 114][Stage 155:============================================>        (95 + 19) / 114][Stage 155:====================================================>(112 + 2) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.129610014 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 62  OR  partitionIndex = 63  O R  partitionIndex = 72  OR  partitionIndex = 73 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 72  OR  partitionIndex = 73 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.376145698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:==============================>                      (66 + 47) / 113][Stage 156:========================================>            (86 + 27) / 113][Stage 156:=================================================>   (105 + 8) / 113]                                                                                [Stage 157:=============================>                       (63 + 51) / 114][Stage 157:===================================>                 (77 + 37) / 114][Stage 157:============================================>        (96 + 18) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.954793448 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 196  OR  partitionIndex = 227   OR  partitionIndex = 242  OR  partitionIndex = 243 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 227  OR  partitionIndex = 242  OR  partitionIndex = 243 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.38173058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:=============================>                       (63 + 50) / 113][Stage 158:==================================>                  (73 + 40) / 113][Stage 158:==============================================>     (100 + 13) / 113][Stage 158:===================================================> (110 + 3) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:================================>                    (69 + 45) / 114][Stage 159:=======================================>             (86 + 28) / 114][Stage 159:=================================================>   (106 + 8) / 114][Stage 159:====================================================>(112 + 2) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.351655885 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 39  OR  partitionIndex = 54  O R  partitionIndex = 55  OR  partitionIndex = 64 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 64 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384065014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:=============================>                       (62 + 51) / 113][Stage 160:=================================>                   (71 + 42) / 113][Stage 160:=============================================>       (98 + 15) / 113]                                                                                [Stage 161:===========================>                         (60 + 54) / 114][Stage 161:================================>                    (70 + 44) / 114][Stage 161:=======================================>             (86 + 28) / 114][Stage 161:===================================================> (110 + 4) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.175329285 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 44  OR  partitionIndex = 45  O R  partitionIndex = 60  OR  partitionIndex = 61 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 60  OR  partitionIndex = 61 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.380755207 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:============================>                        (60 + 53) / 113][Stage 162:==================================>                  (74 + 39) / 113][Stage 162:===========================================>         (93 + 20) / 113][Stage 162:==================================================>  (107 + 6) / 113]                                                                                [Stage 163:============================>                        (61 + 53) / 114][Stage 163:================================>                    (69 + 45) / 114][Stage 163:=======================================>             (84 + 30) / 114][Stage 163:=================================================>   (106 + 8) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.274836113 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 77  OR  partitionIndex = 78  O R  partitionIndex = 92  OR  partitionIndex = 93 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 92  OR  partitionIndex = 93 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.382380638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:==============================>                      (66 + 47) / 113][Stage 164:====================================>                (78 + 35) / 113][Stage 164:=============================================>       (98 + 15) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:============================>                        (61 + 53) / 114][Stage 165:===============================>                     (68 + 46) / 114][Stage 165:=========================================>           (89 + 25) / 114][Stage 165:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.166052291 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 193  OR  partitionIndex = 194   OR  partitionIndex = 208  OR  partitionIndex = 209 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 208  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.38593647 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:=============================>                       (62 + 51) / 113][Stage 166:====================================>                (78 + 35) / 113][Stage 166:=============================================>       (97 + 16) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:==============================>                      (65 + 49) / 114][Stage 167:======================================>              (83 + 31) / 114][Stage 167:==============================================>     (103 + 11) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.349849704 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR   partitionIndex = 24  OR  partitionIndex = 25 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 24  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.384267676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:=============================>                       (63 + 50) / 113][Stage 168:==================================>                  (73 + 40) / 113][Stage 168:============================================>        (95 + 18) / 113][Stage 168:===================================================> (109 + 4) / 113]                                                                                [Stage 169:============================>                        (62 + 52) / 114][Stage 169:=================================>                   (72 + 42) / 114][Stage 169:========================================>            (88 + 26) / 114][Stage 169:=================================================>   (107 + 7) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.529248451 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide 1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data  WHERE  partitionIndex = 136  OR  partitionIndex = 137   OR  partitionIndex = 246  OR  partitionIndex = 247 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 246  OR  partitionIndex = 247 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).crea teOrReplaceTempView("data")}
Time elapsed: 0.393297909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_. getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes , index) => (bytes, index, s"o6_${index}.JPEG")}.collec t.map(writeToLocal).filter(_ => false).size}
[Stage 170:============================>                        (60 + 53) / 113][Stage 170:==================================>                  (74 + 39) / 113][Stage 170:=========================================>           (89 + 24) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:==============================>                      (66 + 48) / 114][Stage 171:=====================================>               (80 + 34) / 114][Stage 171:=============================================>      (100 + 14) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.077907247 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 111  OR   partitionIndex = 125  OR  partitionIndex = 126 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 125  OR  partitionIndex = 126 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381575287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:============================>                        (60 + 53) / 113][Stage 172:=================================>                   (72 + 41) / 113][Stage 172:===========================================>         (92 + 21) / 113][Stage 172:==================================================>  (108 + 5) / 113]                                                                                [Stage 173:=============================>                       (63 + 51) / 114][Stage 173:==================================>                  (74 + 40) / 114][Stage 173:===========================================>         (94 + 20) / 114][Stage 173:=================================================>   (107 + 7) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.355891916 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 237  OR  partitionIndex = 238  OR   partitionIndex = 252  OR  partitionIndex = 253 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 237  OR  partitionIndex = 238  OR  partitionIndex = 252  OR  partitionIndex = 253 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379847012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=============================>                       (62 + 51) / 113][Stage 174:================================>                    (70 + 43) / 113][Stage 174:==========================================>          (90 + 23) / 113][Stage 174:==================================================>  (108 + 5) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:=============================>                       (64 + 50) / 114][Stage 175:=====================================>               (80 + 34) / 114][Stage 175:================================================>    (105 + 9) / 114][Stage 175:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.110709926 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 143  OR   partitionIndex = 156  OR  partitionIndex = 157 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 143  OR  partitionIndex = 156  OR  partitionIndex = 157 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375150548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:=============================>                       (62 + 51) / 113][Stage 176:====================================>                (77 + 36) / 113][Stage 176:=============================================>       (97 + 16) / 113][Stage 176:===================================================> (109 + 4) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:==============================>                      (66 + 48) / 114][Stage 177:===================================>                 (77 + 37) / 114][Stage 177:=============================================>      (100 + 14) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.110754555 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 86  OR  pa rtitionIndex = 87  OR  partitionIndex = 100 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 86  OR  partitionIndex = 87  OR  partitionIndex = 100 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379750535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:==============================>                      (64 + 49) / 113][Stage 178:========================================>            (86 + 27) / 113][Stage 178:=============================================>       (96 + 17) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:===============================>                     (67 + 47) / 114][Stage 179:====================================>                (79 + 35) / 114][Stage 179:===============================================>    (104 + 10) / 114][Stage 179:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.232894855 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 222  OR   partitionIndex = 223  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 222  OR  partitionIndex = 223  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468898827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:==============================>                      (64 + 49) / 113][Stage 180:=======================================>             (85 + 28) / 113][Stage 180:==============================================>     (102 + 11) / 113]                                                                                [Stage 181:=============================>                       (63 + 51) / 114][Stage 181:=================================>                   (72 + 42) / 114][Stage 181:=============================================>       (97 + 17) / 114][Stage 181:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.908436762 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 128  OR  partitionIndex = 129 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 128  OR  partitionIndex = 129 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416005028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:=============================>                       (62 + 51) / 113][Stage 182:===================================>                 (75 + 38) / 113][Stage 182:===========================================>         (93 + 20) / 113][Stage 182:==================================================>  (108 + 5) / 113]                                                                                [Stage 183:=============================>                       (63 + 51) / 114][Stage 183:==================================>                  (75 + 39) / 114][Stage 183:=========================================>           (90 + 24) / 114][Stage 183:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.160775271 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 197  OR   partitionIndex = 212  OR  partitionIndex = 243 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 212  OR  partitionIndex = 243 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400942214 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (60 + 53) / 113][Stage 184:==================================>                  (73 + 40) / 113][Stage 184:========================================>            (86 + 27) / 113][Stage 184:==============================================>     (101 + 12) / 113]                                                                                [Stage 185:===========================>                         (60 + 54) / 114][Stage 185:================================>                    (69 + 45) / 114][Stage 185:========================================>            (87 + 27) / 114][Stage 185:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.088020239 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 44 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 44 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38264679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:============================>                        (60 + 53) / 113][Stage 186:================================>                    (70 + 43) / 113][Stage 186:=========================================>           (88 + 25) / 113][Stage 186:=================================================>   (106 + 7) / 113]                                                                                [Stage 187:============================>                        (61 + 53) / 114][Stage 187:==================================>                  (74 + 40) / 114][Stage 187:===========================================>         (94 + 20) / 114][Stage 187:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.165858553 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 90  OR  pa rtitionIndex = 91  OR  partitionIndex = 104 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 104 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486088201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:=============================>                       (63 + 50) / 113][Stage 188:==================================>                  (74 + 39) / 113][Stage 188:=============================================>       (98 + 15) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:=============================>                       (63 + 51) / 114][Stage 189:==================================>                  (74 + 40) / 114][Stage 189:=========================================>           (89 + 25) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.152287604 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205  OR   partitionIndex = 250  OR  partitionIndex = 251 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 250  OR  partitionIndex = 251 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375692434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:============================>                        (60 + 53) / 113][Stage 190:===============================>                     (68 + 45) / 113][Stage 190:========================================>            (87 + 26) / 113][Stage 190:==================================================>  (108 + 5) / 113]                                                                                [Stage 191:============================>                        (61 + 53) / 114][Stage 191:=================================>                   (71 + 43) / 114][Stage 191:===========================================>         (94 + 20) / 114][Stage 191:===============================================>    (104 + 10) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.237939135 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 72  OR  pa rtitionIndex = 73  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376197493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:=============================>                       (63 + 50) / 113][Stage 192:=====================================>               (79 + 34) / 113][Stage 192:===============================================>    (103 + 10) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:===============================>                     (67 + 47) / 114][Stage 193:====================================>                (78 + 36) / 114][Stage 193:==============================================>      (99 + 15) / 114][Stage 193:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.235599592 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  pa rtitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402053757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (60 + 53) / 113][Stage 194:===============================>                     (68 + 45) / 113][Stage 194:========================================>            (86 + 27) / 113][Stage 194:==============================================>     (100 + 13) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:=============================>                       (63 + 51) / 114][Stage 195:=======================================>             (84 + 30) / 114][Stage 195:=================================================>   (107 + 7) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.218447253 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 117  OR  partitionIndex = 118 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392519446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:===============================>                     (68 + 45) / 113][Stage 196:======================================>              (82 + 31) / 113][Stage 196:===============================================>    (103 + 10) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:=============================>                       (63 + 51) / 114][Stage 197:=================================>                   (73 + 41) / 114][Stage 197:===========================================>         (94 + 20) / 114][Stage 197:=================================================>   (107 + 7) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.408720454 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141  OR   partitionIndex = 186  OR  partitionIndex = 187 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 186  OR  partitionIndex = 187 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39492768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (59 + 54) / 113][Stage 198:==============================>                      (65 + 48) / 113][Stage 198:==================================>                  (74 + 39) / 113][Stage 198:============================================>        (95 + 18) / 113][Stage 198:===================================================> (109 + 4) / 113]                                                                                [Stage 199:============================>                        (62 + 52) / 114][Stage 199:====================================>                (78 + 36) / 114][Stage 199:==============================================>     (101 + 13) / 114][Stage 199:===================================================> (111 + 3) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.306907448 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 88  OR  partitionIndex = 89 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 88  OR  partitionIndex = 89 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387274204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (59 + 54) / 113][Stage 200:===============================>                     (67 + 46) / 113][Stage 200:====================================>                (77 + 36) / 113][Stage 200:===============================================>    (103 + 10) / 113][Stage 200:====================================================>(111 + 2) / 113]                                                                                [Stage 201:=============================>                       (63 + 51) / 114][Stage 201:==================================>                  (75 + 39) / 114][Stage 201:==========================================>          (92 + 22) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.280414256 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m10.539s
user	11m33.572s
sys	0m58.936s
