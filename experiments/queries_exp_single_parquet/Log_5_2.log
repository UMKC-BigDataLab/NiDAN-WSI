Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/24 11:31:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:31:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:31:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:31:46 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/24 11:31:49 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:32:03 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170424113148-0091).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-cores  8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf spark .driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt"
dataSource: String = /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 a nd imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 a nd imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 a nd imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 a nd imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001971209 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@664217a8

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 9.128870606 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.936279158 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (byt es, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 593][Stage 1:>                                                      (4 + 112) / 593][Stage 1:>                                                      (9 + 112) / 593][Stage 1:=>                                                    (11 + 112) / 593][Stage 1:=>                                                    (12 + 112) / 593][Stage 1:=>                                                    (15 + 112) / 593][Stage 1:=>                                                    (16 + 112) / 593][Stage 1:=>                                                    (18 + 112) / 593][Stage 1:=>                                                    (19 + 112) / 593][Stage 1:==>                                                   (24 + 112) / 593][Stage 1:==>                                                   (26 + 112) / 593][Stage 1:==>                                                   (32 + 112) / 593][Stage 1:====>                                                 (53 + 112) / 593][Stage 1:=======>                                              (80 + 112) / 593][Stage 1:==========>                                          (118 + 112) / 593][Stage 1:===========>                                         (132 + 112) / 593][Stage 1:=============>                                       (146 + 112) / 593][Stage 1:==============>                                      (165 + 112) / 593][Stage 1:===============>                                     (179 + 112) / 593][Stage 1:=================>                                   (195 + 112) / 593][Stage 1:==================>                                  (210 + 112) / 593][Stage 1:===================>                                 (221 + 112) / 593][Stage 1:=====================>                               (241 + 112) / 593][Stage 1:======================>                              (257 + 112) / 593][Stage 1:========================>                            (278 + 112) / 593][Stage 1:=========================>                           (290 + 112) / 593][Stage 1:===========================>                         (307 + 112) / 593][Stage 1:=============================>                       (327 + 112) / 593][Stage 1:==============================>                      (338 + 112) / 593][Stage 1:===============================>                     (355 + 112) / 593][Stage 1:=================================>                   (379 + 112) / 593][Stage 1:===================================>                 (398 + 112) / 593][Stage 1:=====================================>               (419 + 112) / 593][Stage 1:========================================>            (448 + 112) / 593][Stage 1:==========================================>          (473 + 112) / 593][Stage 1:=============================================>        (503 + 90) / 593][Stage 1:================================================>     (531 + 62) / 593][Stage 1:==================================================>   (550 + 43) / 593][Stage 1:===================================================>  (564 + 29) / 593][Stage 1:===================================================>  (569 + 24) / 593][Stage 1:====================================================> (580 + 13) / 593][Stage 1:======================================================>(584 + 9) / 593][Stage 1:======================================================>(587 + 6) / 593][Stage 1:======================================================>(588 + 5) / 593][Stage 1:======================================================>(590 + 3) / 593][Stage 1:======================================================>(592 + 1) / 593]                                                                                [Stage 2:=>                                                    (20 + 112) / 594][Stage 2:==>                                                   (30 + 112) / 594][Stage 2:====>                                                 (44 + 112) / 594][Stage 2:======>                                               (70 + 112) / 594][Stage 2:=======>                                              (84 + 113) / 594][Stage 2:==========>                                          (116 + 112) / 594][Stage 2:===========>                                         (130 + 112) / 594][Stage 2:=============>                                       (151 + 112) / 594][Stage 2:===============>                                     (174 + 112) / 594][Stage 2:=================>                                   (193 + 112) / 594][Stage 2:===================>                                 (218 + 112) / 594][Stage 2:====================>                                (235 + 112) / 594][Stage 2:======================>                              (253 + 112) / 594][Stage 2:========================>                            (275 + 112) / 594][Stage 2:==========================>                          (300 + 112) / 594][Stage 2:===========================>                         (311 + 112) / 594][Stage 2:=============================>                       (332 + 112) / 594][Stage 2:================================>                    (363 + 112) / 594][Stage 2:==================================>                  (386 + 112) / 594][Stage 2:====================================>                (407 + 113) / 594][Stage 2:=======================================>             (443 + 113) / 594][Stage 2:=========================================>           (467 + 113) / 594][Stage 2:=============================================>        (498 + 96) / 594][Stage 2:===============================================>      (524 + 70) / 594][Stage 2:=================================================>    (544 + 50) / 594][Stage 2:==================================================>   (559 + 35) / 594][Stage 2:===================================================>  (570 + 24) / 594][Stage 2:====================================================> (577 + 17) / 594][Stage 2:======================================================>(585 + 9) / 594][Stage 2:======================================================>(588 + 6) / 594][Stage 2:======================================================>(590 + 4) / 594][Stage 2:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 24.107954356 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, i ndex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:==>                                                   (27 + 112) / 593][Stage 3:===>                                                  (40 + 112) / 593][Stage 3:=====>                                                (55 + 112) / 593][Stage 3:======>                                               (73 + 112) / 593][Stage 3:========>                                             (96 + 112) / 593][Stage 3:==========>                                          (121 + 112) / 593][Stage 3:=============>                                       (146 + 112) / 593][Stage 3:==============>                                      (164 + 112) / 593][Stage 3:================>                                    (188 + 112) / 593][Stage 3:==================>                                  (208 + 112) / 593][Stage 3:====================>                                (224 + 112) / 593][Stage 3:=====================>                               (245 + 112) / 593][Stage 3:=======================>                             (267 + 112) / 593][Stage 3:==========================>                          (291 + 112) / 593][Stage 3:===========================>                         (313 + 112) / 593][Stage 3:============================>                        (323 + 112) / 593][Stage 3:================================>                    (362 + 112) / 593][Stage 3:=================================>                   (377 + 112) / 593][Stage 3:====================================>                (407 + 112) / 593][Stage 3:=======================================>             (439 + 112) / 593][Stage 3:==========================================>          (476 + 113) / 593][Stage 3:==============================================>       (508 + 85) / 593][Stage 3:===============================================>      (527 + 66) / 593][Stage 3:=================================================>    (544 + 49) / 593][Stage 3:===================================================>  (562 + 31) / 593][Stage 3:====================================================> (575 + 18) / 593][Stage 3:====================================================> (579 + 14) / 593][Stage 3:======================================================>(584 + 9) / 593][Stage 3:======================================================>(585 + 8) / 593][Stage 3:======================================================>(589 + 4) / 593][Stage 3:======================================================>(590 + 3) / 593][Stage 3:======================================================>(591 + 2) / 593][Stage 3:======================================================>(592 + 1) / 593]                                                                                [Stage 4:=>                                                    (19 + 112) / 594][Stage 4:===>                                                  (37 + 112) / 594][Stage 4:====>                                                 (52 + 112) / 594][Stage 4:======>                                               (73 + 112) / 594][Stage 4:========>                                             (98 + 112) / 594][Stage 4:==========>                                          (121 + 112) / 594][Stage 4:============>                                        (143 + 112) / 594][Stage 4:===============>                                     (170 + 112) / 594][Stage 4:=================>                                   (195 + 112) / 594][Stage 4:===================>                                 (214 + 112) / 594][Stage 4:====================>                                (232 + 112) / 594][Stage 4:======================>                              (251 + 112) / 594][Stage 4:========================>                            (277 + 112) / 594][Stage 4:==========================>                          (298 + 112) / 594][Stage 4:============================>                        (324 + 112) / 594][Stage 4:===============================>                     (349 + 112) / 594][Stage 4:=================================>                   (377 + 112) / 594][Stage 4:====================================>                (406 + 112) / 594][Stage 4:======================================>              (428 + 112) / 594][Stage 4:========================================>            (459 + 112) / 594][Stage 4:===========================================>         (488 + 106) / 594][Stage 4:==============================================>       (516 + 78) / 594][Stage 4:=================================================>    (540 + 54) / 594][Stage 4:==================================================>   (554 + 40) / 594][Stage 4:===================================================>  (568 + 26) / 594][Stage 4:====================================================> (576 + 18) / 594][Stage 4:====================================================> (581 + 13) / 594][Stage 4:======================================================>(585 + 9) / 594][Stage 4:======================================================>(588 + 6) / 594][Stage 4:======================================================>(589 + 5) / 594][Stage 4:======================================================>(590 + 4) / 594][Stage 4:======================================================>(592 + 2) / 594][Stage 4:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 15.502944977 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:=>                                                    (15 + 112) / 593][Stage 5:==>                                                   (32 + 112) / 593][Stage 5:====>                                                 (47 + 112) / 593][Stage 5:=====>                                                (59 + 112) / 593][Stage 5:=======>                                              (82 + 112) / 593][Stage 5:=========>                                           (103 + 112) / 593][Stage 5:===========>                                         (128 + 112) / 593][Stage 5:=============>                                       (154 + 112) / 593][Stage 5:===============>                                     (177 + 112) / 593][Stage 5:=================>                                   (201 + 112) / 593][Stage 5:===================>                                 (221 + 112) / 593][Stage 5:=====================>                               (244 + 112) / 593][Stage 5:=======================>                             (265 + 112) / 593][Stage 5:==========================>                          (291 + 112) / 593][Stage 5:===========================>                         (311 + 112) / 593][Stage 5:=============================>                       (335 + 112) / 593][Stage 5:===============================>                     (358 + 112) / 593][Stage 5:==================================>                  (386 + 112) / 593][Stage 5:=====================================>               (414 + 112) / 593][Stage 5:========================================>            (453 + 112) / 593][Stage 5:===========================================>         (488 + 105) / 593][Stage 5:==============================================>       (507 + 86) / 593][Stage 5:================================================>     (536 + 57) / 593][Stage 5:==================================================>   (551 + 42) / 593][Stage 5:===================================================>  (561 + 32) / 593][Stage 5:====================================================> (573 + 20) / 593][Stage 5:====================================================> (577 + 16) / 593][Stage 5:======================================================>(584 + 9) / 593][Stage 5:======================================================>(587 + 6) / 593][Stage 5:======================================================>(589 + 4) / 593][Stage 5:======================================================>(590 + 3) / 593][Stage 5:======================================================>(591 + 2) / 593][Stage 5:======================================================>(592 + 1) / 593]                                                                                [Stage 6:==>                                                   (29 + 112) / 594][Stage 6:====>                                                 (48 + 112) / 594][Stage 6:=====>                                                (64 + 112) / 594][Stage 6:========>                                             (91 + 112) / 594][Stage 6:==========>                                          (113 + 112) / 594][Stage 6:=============>                                       (148 + 112) / 594][Stage 6:==============>                                      (168 + 112) / 594][Stage 6:================>                                    (189 + 112) / 594][Stage 6:==================>                                  (210 + 112) / 594][Stage 6:=====================>                               (236 + 112) / 594][Stage 6:=======================>                             (259 + 112) / 594][Stage 6:=========================>                           (281 + 112) / 594][Stage 6:===========================>                         (303 + 112) / 594][Stage 6:============================>                        (324 + 112) / 594][Stage 6:===============================>                     (349 + 113) / 594][Stage 6:=================================>                   (373 + 112) / 594][Stage 6:====================================>                (405 + 112) / 594][Stage 6:=======================================>             (438 + 112) / 594][Stage 6:==========================================>          (472 + 112) / 594][Stage 6:=============================================>        (501 + 93) / 594][Stage 6:===============================================>      (517 + 77) / 594][Stage 6:=================================================>    (543 + 51) / 594][Stage 6:==================================================>   (559 + 35) / 594][Stage 6:===================================================>  (567 + 27) / 594][Stage 6:====================================================> (575 + 19) / 594][Stage 6:====================================================> (582 + 12) / 594][Stage 6:======================================================>(588 + 6) / 594][Stage 6:======================================================>(590 + 4) / 594][Stage 6:======================================================>(591 + 3) / 594][Stage 6:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 15.069577797 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:=>                                                    (16 + 112) / 593][Stage 7:==>                                                   (30 + 112) / 593][Stage 7:====>                                                 (50 + 112) / 593][Stage 7:======>                                               (67 + 112) / 593][Stage 7:=======>                                              (83 + 112) / 593][Stage 7:==========>                                          (113 + 112) / 593][Stage 7:============>                                        (142 + 112) / 593][Stage 7:==============>                                      (163 + 112) / 593][Stage 7:================>                                    (187 + 112) / 593][Stage 7:==================>                                  (203 + 112) / 593][Stage 7:===================>                                 (223 + 112) / 593][Stage 7:======================>                              (254 + 112) / 593][Stage 7:========================>                            (274 + 112) / 593][Stage 7:==========================>                          (298 + 112) / 593][Stage 7:===========================>                         (308 + 112) / 593][Stage 7:==============================>                      (341 + 112) / 593][Stage 7:================================>                    (360 + 112) / 593][Stage 7:===================================>                 (394 + 112) / 593][Stage 7:======================================>              (426 + 112) / 593][Stage 7:========================================>            (458 + 112) / 593][Stage 7:===========================================>         (491 + 102) / 593][Stage 7:==============================================>       (511 + 82) / 593][Stage 7:================================================>     (530 + 63) / 593][Stage 7:=================================================>    (543 + 50) / 593][Stage 7:==================================================>   (560 + 33) / 593][Stage 7:===================================================>  (571 + 22) / 593][Stage 7:====================================================> (578 + 15) / 593][Stage 7:=====================================================>(583 + 10) / 593][Stage 7:======================================================>(586 + 7) / 593][Stage 7:======================================================>(588 + 5) / 593][Stage 7:======================================================>(590 + 3) / 593][Stage 7:======================================================>(591 + 2) / 593]                                                                                [Stage 8:==>                                                   (27 + 112) / 594][Stage 8:===>                                                  (41 + 112) / 594][Stage 8:=====>                                                (59 + 112) / 594][Stage 8:=======>                                              (80 + 112) / 594][Stage 8:=========>                                           (108 + 112) / 594][Stage 8:============>                                        (142 + 112) / 594][Stage 8:==============>                                      (163 + 112) / 594][Stage 8:================>                                    (186 + 112) / 594][Stage 8:==================>                                  (206 + 112) / 594][Stage 8:====================>                                (230 + 112) / 594][Stage 8:======================>                              (254 + 112) / 594][Stage 8:=========================>                           (285 + 112) / 594][Stage 8:==========================>                          (298 + 112) / 594][Stage 8:============================>                        (316 + 112) / 594][Stage 8:=============================>                       (336 + 112) / 594][Stage 8:================================>                    (366 + 112) / 594][Stage 8:===================================>                 (396 + 113) / 594][Stage 8:======================================>              (428 + 113) / 594][Stage 8:=========================================>           (465 + 112) / 594][Stage 8:============================================>        (494 + 100) / 594][Stage 8:==============================================>       (510 + 84) / 594][Stage 8:================================================>     (532 + 62) / 594][Stage 8:=================================================>    (546 + 48) / 594][Stage 8:===================================================>  (561 + 33) / 594][Stage 8:====================================================> (572 + 22) / 594][Stage 8:====================================================> (579 + 15) / 594][Stage 8:=====================================================>(583 + 11) / 594][Stage 8:======================================================>(589 + 5) / 594][Stage 8:======================================================>(590 + 4) / 594][Stage 8:======================================================>(592 + 2) / 594][Stage 8:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 14.877610279 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:=>                                                    (11 + 112) / 593][Stage 9:==>                                                   (26 + 112) / 593][Stage 9:===>                                                  (41 + 112) / 593][Stage 9:=====>                                                (58 + 112) / 593][Stage 9:=======>                                              (78 + 112) / 593][Stage 9:=========>                                           (105 + 112) / 593][Stage 9:============>                                        (135 + 112) / 593][Stage 9:=============>                                       (156 + 112) / 593][Stage 9:===============>                                     (174 + 112) / 593][Stage 9:=================>                                   (198 + 112) / 593][Stage 9:===================>                                 (220 + 112) / 593][Stage 9:=====================>                               (244 + 112) / 593][Stage 9:=======================>                             (268 + 112) / 593][Stage 9:==========================>                          (291 + 112) / 593][Stage 9:===========================>                         (305 + 113) / 593][Stage 9:============================>                        (324 + 112) / 593][Stage 9:===============================>                     (351 + 112) / 593][Stage 9:=================================>                   (375 + 112) / 593][Stage 9:====================================>                (403 + 112) / 593][Stage 9:======================================>              (434 + 112) / 593][Stage 9:=========================================>           (468 + 112) / 593][Stage 9:=============================================>        (495 + 98) / 593][Stage 9:===============================================>      (519 + 74) / 593][Stage 9:================================================>     (538 + 55) / 593][Stage 9:==================================================>   (556 + 37) / 593][Stage 9:===================================================>  (565 + 28) / 593][Stage 9:====================================================> (574 + 19) / 593][Stage 9:====================================================> (582 + 11) / 593][Stage 9:======================================================>(588 + 5) / 593][Stage 9:======================================================>(590 + 3) / 593][Stage 9:======================================================>(592 + 1) / 593]                                                                                [Stage 10:==>                                                  (27 + 112) / 594][Stage 10:===>                                                 (38 + 112) / 594][Stage 10:=====>                                               (60 + 112) / 594][Stage 10:=======>                                             (80 + 112) / 594][Stage 10:=========>                                          (107 + 112) / 594][Stage 10:===========>                                        (136 + 112) / 594][Stage 10:==============>                                     (160 + 112) / 594][Stage 10:===============>                                    (178 + 113) / 594][Stage 10:=================>                                  (201 + 112) / 594][Stage 10:===================>                                (222 + 112) / 594][Stage 10:=====================>                              (245 + 113) / 594][Stage 10:=======================>                            (269 + 112) / 594][Stage 10:=========================>                          (291 + 112) / 594][Stage 10:===========================>                        (319 + 112) / 594][Stage 10:=============================>                      (334 + 112) / 594][Stage 10:===============================>                    (361 + 112) / 594][Stage 10:=================================>                  (381 + 112) / 594][Stage 10:====================================>               (414 + 112) / 594][Stage 10:======================================>             (444 + 112) / 594][Stage 10:==========================================>         (484 + 110) / 594][Stage 10:=============================================>       (506 + 88) / 594][Stage 10:===============================================>     (528 + 66) / 594][Stage 10:================================================>    (541 + 53) / 594][Stage 10:=================================================>   (557 + 37) / 594][Stage 10:==================================================>  (569 + 25) / 594][Stage 10:===================================================> (580 + 14) / 594][Stage 10:====================================================>(583 + 11) / 594][Stage 10:=====================================================>(585 + 9) / 594][Stage 10:=====================================================>(588 + 6) / 594][Stage 10:=====================================================>(590 + 4) / 594][Stage 10:=====================================================>(591 + 3) / 594][Stage 10:=====================================================>(593 + 1) / 594]                                                                                Time elapsed: 15.378940791 seconds

scala> 

scala> 

scala> :quit
17/04/24 11:34:02 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
67.2 G  /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt
