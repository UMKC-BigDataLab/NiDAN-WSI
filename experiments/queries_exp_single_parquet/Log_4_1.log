Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/24 11:18:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:18:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:18:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:18:56 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/24 11:18:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:19:09 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170424111858-0087).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-cores  8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf spark .driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt"
dataSource: String = /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 a nd imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 a nd imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 a nd imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 a nd imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001341906 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@25d5327

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.31726081 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.761068695 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (byt es, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 506][Stage 1:>                                                      (4 + 112) / 506][Stage 1:>                                                      (5 + 112) / 506][Stage 1:>                                                      (7 + 112) / 506][Stage 1:>                                                      (9 + 112) / 506][Stage 1:=>                                                    (11 + 112) / 506][Stage 1:=>                                                    (13 + 112) / 506][Stage 1:=>                                                    (14 + 112) / 506][Stage 1:=>                                                    (15 + 112) / 506][Stage 1:==>                                                   (21 + 112) / 506][Stage 1:==>                                                   (23 + 112) / 506][Stage 1:===>                                                  (33 + 112) / 506][Stage 1:====>                                                 (42 + 112) / 506][Stage 1:=======>                                              (74 + 112) / 506][Stage 1:============>                                        (118 + 112) / 506][Stage 1:=============>                                       (130 + 112) / 506][Stage 1:==============>                                      (137 + 112) / 506][Stage 1:================>                                    (158 + 112) / 506][Stage 1:==================>                                  (173 + 112) / 506][Stage 1:===================>                                 (183 + 112) / 506][Stage 1:====================>                                (195 + 112) / 506][Stage 1:======================>                              (214 + 112) / 506][Stage 1:========================>                            (231 + 112) / 506][Stage 1:=========================>                           (242 + 112) / 506][Stage 1:===========================>                         (259 + 112) / 506][Stage 1:=============================>                       (277 + 112) / 506][Stage 1:==============================>                      (290 + 112) / 506][Stage 1:================================>                    (307 + 112) / 506][Stage 1:=================================>                   (317 + 112) / 506][Stage 1:===================================>                 (342 + 112) / 506][Stage 1:======================================>              (368 + 112) / 506][Stage 1:=========================================>           (398 + 108) / 506][Stage 1:============================================>         (414 + 92) / 506][Stage 1:==============================================>       (438 + 68) / 506][Stage 1:================================================>     (453 + 53) / 506][Stage 1:=================================================>    (463 + 43) / 506][Stage 1:===================================================>  (480 + 26) / 506][Stage 1:====================================================> (488 + 18) / 506][Stage 1:====================================================> (494 + 12) / 506][Stage 1:======================================================>(499 + 7) / 506][Stage 1:======================================================>(502 + 4) / 506][Stage 1:======================================================>(503 + 3) / 506][Stage 1:======================================================>(505 + 1) / 506]                                                                                [Stage 2:>                                                      (2 + 112) / 507][Stage 2:=>                                                    (15 + 112) / 507][Stage 2:==>                                                   (28 + 112) / 507][Stage 2:===>                                                  (37 + 113) / 507][Stage 2:======>                                               (58 + 112) / 507][Stage 2:========>                                             (77 + 112) / 507][Stage 2:==========>                                           (96 + 112) / 507][Stage 2:============>                                        (120 + 112) / 507][Stage 2:==============>                                      (143 + 112) / 507][Stage 2:================>                                    (157 + 112) / 507][Stage 2:==================>                                  (179 + 112) / 507][Stage 2:====================>                                (195 + 112) / 507][Stage 2:======================>                              (216 + 112) / 507][Stage 2:========================>                            (235 + 112) / 507][Stage 2:==========================>                          (256 + 112) / 507][Stage 2:===========================>                         (265 + 112) / 507][Stage 2:=============================>                       (283 + 112) / 507][Stage 2:==============================>                      (295 + 112) / 507][Stage 2:=================================>                   (324 + 112) / 507][Stage 2:====================================>                (351 + 112) / 507][Stage 2:========================================>            (388 + 112) / 507][Stage 2:==========================================>          (404 + 103) / 507][Stage 2:==============================================>       (433 + 74) / 507][Stage 2:================================================>     (452 + 55) / 507][Stage 2:=================================================>    (468 + 39) / 507][Stage 2:===================================================>  (483 + 24) / 507][Stage 2:===================================================>  (486 + 21) / 507][Stage 2:====================================================> (493 + 14) / 507][Stage 2:======================================================>(500 + 7) / 507][Stage 2:======================================================>(501 + 6) / 507][Stage 2:======================================================>(502 + 5) / 507][Stage 2:======================================================>(504 + 3) / 507][Stage 2:======================================================>(505 + 2) / 507][Stage 2:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 22.819525532 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, i ndex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:>                                                      (7 + 112) / 506][Stage 3:==>                                                   (21 + 112) / 506][Stage 3:===>                                                  (36 + 112) / 506][Stage 3:=====>                                                (55 + 112) / 506][Stage 3:=======>                                              (70 + 112) / 506][Stage 3:==========>                                           (95 + 112) / 506][Stage 3:============>                                        (116 + 112) / 506][Stage 3:==============>                                      (140 + 112) / 506][Stage 3:================>                                    (160 + 112) / 506][Stage 3:==================>                                  (173 + 112) / 506][Stage 3:====================>                                (199 + 112) / 506][Stage 3:======================>                              (212 + 112) / 506][Stage 3:=========================>                           (239 + 112) / 506][Stage 3:==========================>                          (256 + 112) / 506][Stage 3:============================>                        (269 + 112) / 506][Stage 3:==============================>                      (287 + 112) / 506][Stage 3:===============================>                     (305 + 112) / 506][Stage 3:==================================>                  (333 + 112) / 506][Stage 3:=====================================>               (361 + 112) / 506][Stage 3:========================================>            (391 + 112) / 506][Stage 3:============================================>         (421 + 85) / 506][Stage 3:===============================================>      (446 + 60) / 506][Stage 3:=================================================>    (460 + 46) / 506][Stage 3:==================================================>   (474 + 32) / 506][Stage 3:===================================================>  (487 + 19) / 506][Stage 3:====================================================> (494 + 12) / 506][Stage 3:======================================================>(498 + 8) / 506][Stage 3:======================================================>(500 + 6) / 506][Stage 3:======================================================>(501 + 5) / 506][Stage 3:======================================================>(502 + 4) / 506][Stage 3:======================================================>(504 + 2) / 506][Stage 3:======================================================>(505 + 1) / 506]                                                                                [Stage 4:===>                                                  (29 + 112) / 507][Stage 4:=====>                                                (47 + 112) / 507][Stage 4:======>                                               (62 + 112) / 507][Stage 4:=======>                                              (74 + 112) / 507][Stage 4:==========>                                           (94 + 112) / 507][Stage 4:=============>                                       (125 + 112) / 507][Stage 4:===============>                                     (149 + 112) / 507][Stage 4:=================>                                   (168 + 112) / 507][Stage 4:===================>                                 (188 + 112) / 507][Stage 4:======================>                              (212 + 112) / 507][Stage 4:=======================>                             (227 + 112) / 507][Stage 4:=========================>                           (247 + 112) / 507][Stage 4:===========================>                         (266 + 112) / 507][Stage 4:=============================>                       (283 + 112) / 507][Stage 4:================================>                    (309 + 112) / 507][Stage 4:==================================>                  (330 + 112) / 507][Stage 4:=====================================>               (361 + 113) / 507][Stage 4:========================================>            (390 + 112) / 507][Stage 4:============================================>         (418 + 89) / 507][Stage 4:==============================================>       (439 + 68) / 507][Stage 4:================================================>     (453 + 54) / 507][Stage 4:=================================================>    (468 + 39) / 507][Stage 4:===================================================>  (487 + 20) / 507][Stage 4:====================================================> (492 + 15) / 507][Stage 4:====================================================> (497 + 10) / 507][Stage 4:======================================================>(498 + 9) / 507][Stage 4:======================================================>(500 + 7) / 507][Stage 4:======================================================>(503 + 4) / 507][Stage 4:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.874067867 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:=>                                                    (10 + 112) / 506][Stage 5:==>                                                   (27 + 112) / 506][Stage 5:====>                                                 (38 + 112) / 506][Stage 5:=====>                                                (54 + 112) / 506][Stage 5:========>                                             (75 + 112) / 506][Stage 5:==========>                                          (101 + 112) / 506][Stage 5:=============>                                       (129 + 112) / 506][Stage 5:===============>                                     (150 + 112) / 506][Stage 5:=================>                                   (166 + 112) / 506][Stage 5:===================>                                 (190 + 112) / 506][Stage 5:=====================>                               (209 + 112) / 506][Stage 5:=======================>                             (228 + 112) / 506][Stage 5:=========================>                           (242 + 112) / 506][Stage 5:===========================>                         (266 + 112) / 506][Stage 5:=============================>                       (281 + 112) / 506][Stage 5:=================================>                   (316 + 112) / 506][Stage 5:===================================>                 (340 + 112) / 506][Stage 5:======================================>              (368 + 112) / 506][Stage 5:========================================>            (391 + 112) / 506][Stage 5:============================================>         (419 + 87) / 506][Stage 5:===============================================>      (444 + 62) / 506][Stage 5:=================================================>    (462 + 44) / 506][Stage 5:==================================================>   (474 + 32) / 506][Stage 5:====================================================> (489 + 17) / 506][Stage 5:======================================================>(497 + 9) / 506][Stage 5:======================================================>(498 + 8) / 506][Stage 5:======================================================>(501 + 5) / 506][Stage 5:======================================================>(502 + 4) / 506][Stage 5:======================================================>(504 + 2) / 506][Stage 5:======================================================>(505 + 1) / 506]                                                                                [Stage 6:==>                                                   (24 + 112) / 507][Stage 6:====>                                                 (43 + 112) / 507][Stage 6:======>                                               (60 + 112) / 507][Stage 6:========>                                             (81 + 112) / 507][Stage 6:==========>                                          (102 + 112) / 507][Stage 6:=============>                                       (127 + 112) / 507][Stage 6:================>                                    (162 + 112) / 507][Stage 6:==================>                                  (176 + 112) / 507][Stage 6:====================>                                (195 + 112) / 507][Stage 6:======================>                              (215 + 112) / 507][Stage 6:========================>                            (235 + 112) / 507][Stage 6:==========================>                          (251 + 112) / 507][Stage 6:============================>                        (272 + 112) / 507][Stage 6:===============================>                     (299 + 112) / 507][Stage 6:=================================>                   (316 + 112) / 507][Stage 6:====================================>                (347 + 113) / 507][Stage 6:======================================>              (373 + 112) / 507][Stage 6:=========================================>           (398 + 109) / 507][Stage 6:============================================>         (414 + 93) / 507][Stage 6:==============================================>       (435 + 72) / 507][Stage 6:================================================>     (454 + 53) / 507][Stage 6:==================================================>   (473 + 34) / 507][Stage 6:===================================================>  (485 + 22) / 507][Stage 6:====================================================> (493 + 14) / 507][Stage 6:====================================================> (495 + 12) / 507][Stage 6:======================================================>(500 + 7) / 507][Stage 6:======================================================>(502 + 5) / 507][Stage 6:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.821400892 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:>                                                      (9 + 112) / 506][Stage 7:==>                                                   (23 + 112) / 506][Stage 7:===>                                                  (36 + 112) / 506][Stage 7:======>                                               (57 + 112) / 506][Stage 7:========>                                             (75 + 112) / 506][Stage 7:==========>                                          (105 + 112) / 506][Stage 7:=============>                                       (129 + 112) / 506][Stage 7:================>                                    (154 + 112) / 506][Stage 7:==================>                                  (177 + 112) / 506][Stage 7:====================>                                (191 + 112) / 506][Stage 7:=====================>                               (209 + 112) / 506][Stage 7:=======================>                             (223 + 112) / 506][Stage 7:=========================>                           (242 + 112) / 506][Stage 7:==========================>                          (257 + 112) / 506][Stage 7:=============================>                       (278 + 112) / 506][Stage 7:================================>                    (307 + 112) / 506][Stage 7:==================================>                  (332 + 112) / 506][Stage 7:=====================================>               (358 + 112) / 506][Stage 7:========================================>            (391 + 113) / 506][Stage 7:============================================>         (421 + 85) / 506][Stage 7:===============================================>      (441 + 65) / 506][Stage 7:================================================>     (457 + 49) / 506][Stage 7:==================================================>   (475 + 31) / 506][Stage 7:===================================================>  (485 + 21) / 506][Stage 7:====================================================> (492 + 14) / 506][Stage 7:====================================================> (496 + 10) / 506][Stage 7:======================================================>(499 + 7) / 506][Stage 7:======================================================>(500 + 6) / 506][Stage 7:======================================================>(502 + 4) / 506][Stage 7:======================================================>(505 + 1) / 506]                                                                                [Stage 8:==>                                                   (22 + 112) / 507][Stage 8:====>                                                 (39 + 112) / 507][Stage 8:=====>                                                (55 + 112) / 507][Stage 8:========>                                             (79 + 112) / 507][Stage 8:==========>                                          (105 + 112) / 507][Stage 8:=============>                                       (127 + 112) / 507][Stage 8:===============>                                     (153 + 112) / 507][Stage 8:=================>                                   (168 + 112) / 507][Stage 8:===================>                                 (185 + 112) / 507][Stage 8:=====================>                               (208 + 112) / 507][Stage 8:========================>                            (233 + 112) / 507][Stage 8:==========================>                          (251 + 112) / 507][Stage 8:============================>                        (271 + 112) / 507][Stage 8:==============================>                      (287 + 112) / 507][Stage 8:=================================>                   (316 + 112) / 507][Stage 8:====================================>                (345 + 112) / 507][Stage 8:======================================>              (372 + 112) / 507][Stage 8:===========================================>          (408 + 99) / 507][Stage 8:=============================================>        (424 + 83) / 507][Stage 8:===============================================>      (446 + 61) / 507][Stage 8:=================================================>    (465 + 42) / 507][Stage 8:===================================================>  (480 + 27) / 507][Stage 8:====================================================> (492 + 15) / 507][Stage 8:====================================================> (495 + 12) / 507][Stage 8:======================================================>(498 + 9) / 507][Stage 8:======================================================>(501 + 6) / 507][Stage 8:======================================================>(502 + 5) / 507][Stage 8:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.472831326 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:=>                                                    (16 + 112) / 506][Stage 9:===>                                                  (30 + 112) / 506][Stage 9:====>                                                 (40 + 112) / 506][Stage 9:======>                                               (59 + 112) / 506][Stage 9:========>                                             (77 + 112) / 506][Stage 9:==========>                                          (105 + 112) / 506][Stage 9:=============>                                       (131 + 112) / 506][Stage 9:================>                                    (154 + 112) / 506][Stage 9:==================>                                  (176 + 112) / 506][Stage 9:====================>                                (196 + 112) / 506][Stage 9:======================>                              (212 + 112) / 506][Stage 9:========================>                            (233 + 112) / 506][Stage 9:==========================>                          (252 + 112) / 506][Stage 9:============================>                        (271 + 112) / 506][Stage 9:===============================>                     (296 + 112) / 506][Stage 9:=================================>                   (318 + 112) / 506][Stage 9:====================================>                (350 + 112) / 506][Stage 9:=======================================>             (378 + 112) / 506][Stage 9:==========================================>          (404 + 102) / 506][Stage 9:============================================>         (421 + 85) / 506][Stage 9:===============================================>      (441 + 65) / 506][Stage 9:================================================>     (453 + 53) / 506][Stage 9:=================================================>    (465 + 41) / 506][Stage 9:===================================================>  (482 + 24) / 506][Stage 9:====================================================> (490 + 16) / 506][Stage 9:======================================================>(499 + 7) / 506][Stage 9:======================================================>(501 + 5) / 506][Stage 9:======================================================>(502 + 4) / 506][Stage 9:======================================================>(503 + 3) / 506][Stage 9:======================================================>(504 + 2) / 506][Stage 9:======================================================>(505 + 1) / 506]                                                                                [Stage 10:==>                                                  (23 + 112) / 507][Stage 10:===>                                                 (35 + 112) / 507][Stage 10:=====>                                               (52 + 112) / 507][Stage 10:=======>                                             (72 + 112) / 507][Stage 10:==========>                                         (103 + 112) / 507][Stage 10:============>                                       (124 + 112) / 507][Stage 10:===============>                                    (154 + 112) / 507][Stage 10:=================>                                  (175 + 112) / 507][Stage 10:===================>                                (188 + 112) / 507][Stage 10:=====================>                              (209 + 112) / 507][Stage 10:=======================>                            (230 + 112) / 507][Stage 10:========================>                           (242 + 112) / 507][Stage 10:==========================>                         (260 + 114) / 507][Stage 10:============================>                       (282 + 113) / 507][Stage 10:===============================>                    (303 + 112) / 507][Stage 10:=================================>                  (331 + 112) / 507][Stage 10:====================================>               (359 + 113) / 507][Stage 10:======================================>             (378 + 113) / 507][Stage 10:===========================================>         (416 + 91) / 507][Stage 10:==============================================>      (441 + 66) / 507][Stage 10:===============================================>     (458 + 49) / 507][Stage 10:=================================================>   (474 + 33) / 507][Stage 10:==================================================>  (485 + 22) / 507][Stage 10:===================================================> (493 + 14) / 507][Stage 10:=====================================================>(498 + 9) / 507][Stage 10:=====================================================>(500 + 7) / 507][Stage 10:=====================================================>(501 + 6) / 507][Stage 10:=====================================================>(502 + 5) / 507][Stage 10:=====================================================>(505 + 2) / 507][Stage 10:=====================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.988072814 seconds

scala> 

scala> 

scala> :quit
17/04/24 11:20:59 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
57.9 G  /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt
