Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/24 11:34:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:34:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:34:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:34:21 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/24 11:34:23 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:34:34 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170424113423-0092).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-cores  8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf spark .driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt"
dataSource: String = /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 a nd imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 a nd imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 a nd imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 a nd imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001205506 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@25d5327

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.490727453 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.74740299 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (byt es, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 593][Stage 1:>                                                      (6 + 112) / 593][Stage 1:>                                                      (7 + 112) / 593][Stage 1:=>                                                    (11 + 112) / 593][Stage 1:=>                                                    (12 + 112) / 593][Stage 1:=>                                                    (16 + 112) / 593][Stage 1:=>                                                    (19 + 112) / 593][Stage 1:=>                                                    (21 + 112) / 593][Stage 1:==>                                                   (25 + 112) / 593][Stage 1:==>                                                   (27 + 112) / 593][Stage 1:==>                                                   (30 + 112) / 593][Stage 1:====>                                                 (51 + 112) / 593][Stage 1:=====>                                                (63 + 112) / 593][Stage 1:=========>                                           (108 + 112) / 593][Stage 1:===========>                                         (130 + 112) / 593][Stage 1:============>                                        (140 + 112) / 593][Stage 1:==============>                                      (158 + 112) / 593][Stage 1:===============>                                     (178 + 112) / 593][Stage 1:=================>                                   (195 + 112) / 593][Stage 1:===================>                                 (214 + 112) / 593][Stage 1:====================>                                (224 + 112) / 593][Stage 1:=====================>                               (237 + 112) / 593][Stage 1:=======================>                             (259 + 112) / 593][Stage 1:=========================>                           (282 + 112) / 593][Stage 1:==========================>                          (300 + 112) / 593][Stage 1:===========================>                         (313 + 112) / 593][Stage 1:=============================>                       (327 + 112) / 593][Stage 1:===============================>                     (348 + 112) / 593][Stage 1:================================>                    (367 + 112) / 593][Stage 1:==================================>                  (383 + 112) / 593][Stage 1:===================================>                 (402 + 112) / 593][Stage 1:=====================================>               (423 + 112) / 593][Stage 1:=========================================>           (460 + 112) / 593][Stage 1:==========================================>          (480 + 113) / 593][Stage 1:==============================================>       (506 + 87) / 593][Stage 1:===============================================>      (527 + 66) / 593][Stage 1:=================================================>    (547 + 46) / 593][Stage 1:===================================================>  (562 + 31) / 593][Stage 1:====================================================> (572 + 21) / 593][Stage 1:====================================================> (580 + 13) / 593][Stage 1:======================================================>(584 + 9) / 593][Stage 1:======================================================>(586 + 7) / 593][Stage 1:======================================================>(588 + 5) / 593][Stage 1:======================================================>(589 + 4) / 593][Stage 1:======================================================>(590 + 3) / 593][Stage 1:======================================================>(592 + 1) / 593]                                                                                [Stage 2:=>                                                    (15 + 112) / 594][Stage 2:==>                                                   (28 + 112) / 594][Stage 2:===>                                                  (41 + 112) / 594][Stage 2:====>                                                 (52 + 112) / 594][Stage 2:======>                                               (69 + 112) / 594][Stage 2:=========>                                           (101 + 112) / 594][Stage 2:==========>                                          (123 + 112) / 594][Stage 2:============>                                        (142 + 112) / 594][Stage 2:===============>                                     (173 + 112) / 594][Stage 2:================>                                    (188 + 112) / 594][Stage 2:==================>                                  (209 + 112) / 594][Stage 2:====================>                                (226 + 112) / 594][Stage 2:=====================>                               (244 + 112) / 594][Stage 2:=======================>                             (265 + 112) / 594][Stage 2:=========================>                           (289 + 112) / 594][Stage 2:===========================>                         (308 + 112) / 594][Stage 2:=============================>                       (327 + 112) / 594][Stage 2:===============================>                     (349 + 112) / 594][Stage 2:=================================>                   (377 + 112) / 594][Stage 2:===================================>                 (398 + 113) / 594][Stage 2:======================================>              (436 + 112) / 594][Stage 2:=========================================>           (470 + 112) / 594][Stage 2:=============================================>        (497 + 97) / 594][Stage 2:==============================================>       (508 + 86) / 594][Stage 2:================================================>     (531 + 63) / 594][Stage 2:==================================================>   (556 + 38) / 594][Stage 2:===================================================>  (567 + 27) / 594][Stage 2:====================================================> (573 + 21) / 594][Stage 2:====================================================> (581 + 13) / 594][Stage 2:======================================================>(585 + 9) / 594][Stage 2:======================================================>(590 + 4) / 594][Stage 2:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 23.022109912 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, i ndex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:=>                                                    (20 + 112) / 593][Stage 3:===>                                                  (36 + 112) / 593][Stage 3:====>                                                 (54 + 112) / 593][Stage 3:======>                                               (75 + 112) / 593][Stage 3:========>                                             (92 + 112) / 593][Stage 3:==========>                                          (121 + 112) / 593][Stage 3:============>                                        (143 + 112) / 593][Stage 3:==============>                                      (160 + 112) / 593][Stage 3:================>                                    (183 + 112) / 593][Stage 3:=================>                                   (201 + 112) / 593][Stage 3:===================>                                 (221 + 112) / 593][Stage 3:======================>                              (250 + 112) / 593][Stage 3:========================>                            (273 + 112) / 593][Stage 3:==========================>                          (292 + 112) / 593][Stage 3:===========================>                         (313 + 112) / 593][Stage 3:==============================>                      (338 + 112) / 593][Stage 3:================================>                    (360 + 112) / 593][Stage 3:==================================>                  (389 + 112) / 593][Stage 3:=====================================>               (418 + 112) / 593][Stage 3:=======================================>             (447 + 112) / 593][Stage 3:==========================================>          (477 + 112) / 593][Stage 3:==============================================>       (506 + 87) / 593][Stage 3:===============================================>      (523 + 70) / 593][Stage 3:==================================================>   (553 + 40) / 593][Stage 3:===================================================>  (569 + 24) / 593][Stage 3:====================================================> (573 + 20) / 593][Stage 3:====================================================> (577 + 16) / 593][Stage 3:======================================================>(584 + 9) / 593][Stage 3:======================================================>(588 + 5) / 593][Stage 3:======================================================>(590 + 3) / 593][Stage 3:======================================================>(591 + 2) / 593]                                                                                [Stage 4:==>                                                   (31 + 112) / 594][Stage 4:====>                                                 (46 + 112) / 594][Stage 4:=====>                                                (63 + 112) / 594][Stage 4:=======>                                              (84 + 112) / 594][Stage 4:=========>                                           (110 + 112) / 594][Stage 4:============>                                        (140 + 112) / 594][Stage 4:==============>                                      (158 + 112) / 594][Stage 4:================>                                    (183 + 112) / 594][Stage 4:==================>                                  (204 + 112) / 594][Stage 4:===================>                                 (220 + 112) / 594][Stage 4:=====================>                               (241 + 112) / 594][Stage 4:========================>                            (272 + 112) / 594][Stage 4:=========================>                           (290 + 112) / 594][Stage 4:============================>                        (316 + 112) / 594][Stage 4:==============================>                      (339 + 112) / 594][Stage 4:================================>                    (361 + 112) / 594][Stage 4:==================================>                  (392 + 112) / 594][Stage 4:=====================================>               (419 + 112) / 594][Stage 4:========================================>            (452 + 112) / 594][Stage 4:===========================================>         (482 + 112) / 594][Stage 4:==============================================>       (511 + 83) / 594][Stage 4:=================================================>    (539 + 55) / 594][Stage 4:==================================================>   (554 + 40) / 594][Stage 4:===================================================>  (561 + 33) / 594][Stage 4:====================================================> (573 + 21) / 594][Stage 4:====================================================> (577 + 17) / 594][Stage 4:======================================================>(586 + 8) / 594][Stage 4:======================================================>(589 + 5) / 594][Stage 4:======================================================>(590 + 4) / 594][Stage 4:======================================================>(591 + 3) / 594][Stage 4:======================================================>(592 + 2) / 594][Stage 4:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 15.443199495 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:=>                                                    (11 + 112) / 593][Stage 5:==>                                                   (25 + 112) / 593][Stage 5:====>                                                 (45 + 112) / 593][Stage 5:=====>                                                (61 + 112) / 593][Stage 5:========>                                             (89 + 112) / 593][Stage 5:==========>                                          (117 + 112) / 593][Stage 5:=============>                                       (147 + 112) / 593][Stage 5:===============>                                     (174 + 112) / 593][Stage 5:=================>                                   (195 + 112) / 593][Stage 5:==================>                                  (209 + 112) / 593][Stage 5:=====================>                               (238 + 112) / 593][Stage 5:=======================>                             (264 + 112) / 593][Stage 5:=========================>                           (289 + 112) / 593][Stage 5:===========================>                         (304 + 113) / 593][Stage 5:=============================>                       (325 + 112) / 593][Stage 5:===============================>                     (348 + 112) / 593][Stage 5:=================================>                   (374 + 112) / 593][Stage 5:===================================>                 (396 + 112) / 593][Stage 5:======================================>              (432 + 112) / 593][Stage 5:==========================================>          (470 + 112) / 593][Stage 5:==============================================>       (509 + 84) / 593][Stage 5:===============================================>      (527 + 66) / 593][Stage 5:=================================================>    (540 + 53) / 593][Stage 5:==================================================>   (559 + 34) / 593][Stage 5:===================================================>  (569 + 24) / 593][Stage 5:====================================================> (574 + 19) / 593][Stage 5:====================================================> (579 + 14) / 593][Stage 5:======================================================>(588 + 5) / 593][Stage 5:======================================================>(590 + 3) / 593][Stage 5:======================================================>(592 + 1) / 593]                                                                                [Stage 6:===>                                                  (36 + 112) / 594][Stage 6:====>                                                 (51 + 112) / 594][Stage 6:======>                                               (69 + 112) / 594][Stage 6:========>                                             (92 + 112) / 594][Stage 6:==========>                                          (119 + 112) / 594][Stage 6:============>                                        (144 + 112) / 594][Stage 6:===============>                                     (172 + 112) / 594][Stage 6:=================>                                   (193 + 112) / 594][Stage 6:===================>                                 (218 + 112) / 594][Stage 6:====================>                                (234 + 112) / 594][Stage 6:=======================>                             (265 + 112) / 594][Stage 6:=========================>                           (284 + 112) / 594][Stage 6:===========================>                         (304 + 112) / 594][Stage 6:=============================>                       (332 + 112) / 594][Stage 6:==============================>                      (344 + 112) / 594][Stage 6:=================================>                   (372 + 112) / 594][Stage 6:===================================>                 (401 + 113) / 594][Stage 6:=======================================>             (444 + 112) / 594][Stage 6:==========================================>          (481 + 112) / 594][Stage 6:==============================================>       (509 + 85) / 594][Stage 6:===============================================>      (527 + 67) / 594][Stage 6:=================================================>    (541 + 53) / 594][Stage 6:==================================================>   (557 + 37) / 594][Stage 6:===================================================>  (567 + 27) / 594][Stage 6:====================================================> (575 + 19) / 594][Stage 6:=====================================================>(583 + 11) / 594][Stage 6:======================================================>(586 + 8) / 594][Stage 6:======================================================>(589 + 5) / 594][Stage 6:======================================================>(590 + 4) / 594][Stage 6:======================================================>(591 + 3) / 594][Stage 6:======================================================>(592 + 2) / 594][Stage 6:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 14.536141747 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:=>                                                    (11 + 112) / 593][Stage 7:==>                                                   (26 + 112) / 593][Stage 7:===>                                                  (41 + 112) / 593][Stage 7:=====>                                                (57 + 112) / 593][Stage 7:=======>                                              (79 + 112) / 593][Stage 7:=========>                                           (101 + 112) / 593][Stage 7:===========>                                         (127 + 112) / 593][Stage 7:==============>                                      (159 + 112) / 593][Stage 7:================>                                    (188 + 112) / 593][Stage 7:==================>                                  (205 + 112) / 593][Stage 7:====================>                                (224 + 112) / 593][Stage 7:======================>                              (253 + 112) / 593][Stage 7:========================>                            (271 + 112) / 593][Stage 7:==========================>                          (297 + 112) / 593][Stage 7:============================>                        (315 + 112) / 593][Stage 7:==============================>                      (339 + 112) / 593][Stage 7:================================>                    (364 + 112) / 593][Stage 7:==================================>                  (391 + 112) / 593][Stage 7:=====================================>               (421 + 112) / 593][Stage 7:========================================>            (455 + 112) / 593][Stage 7:=============================================>        (495 + 98) / 593][Stage 7:==============================================>       (514 + 79) / 593][Stage 7:================================================>     (537 + 56) / 593][Stage 7:==================================================>   (551 + 42) / 593][Stage 7:==================================================>   (560 + 33) / 593][Stage 7:====================================================> (574 + 19) / 593][Stage 7:====================================================> (581 + 12) / 593][Stage 7:======================================================>(585 + 8) / 593][Stage 7:======================================================>(587 + 6) / 593][Stage 7:======================================================>(589 + 4) / 593][Stage 7:======================================================>(590 + 3) / 593][Stage 7:======================================================>(592 + 1) / 593]                                                                                [Stage 8:===>                                                  (37 + 112) / 594][Stage 8:====>                                                 (52 + 112) / 594][Stage 8:=======>                                              (78 + 112) / 594][Stage 8:=========>                                           (102 + 112) / 594][Stage 8:===========>                                         (126 + 112) / 594][Stage 8:=============>                                       (147 + 112) / 594][Stage 8:===============>                                     (173 + 112) / 594][Stage 8:=================>                                   (196 + 112) / 594][Stage 8:==================>                                  (211 + 112) / 594][Stage 8:====================>                                (235 + 112) / 594][Stage 8:=======================>                             (262 + 112) / 594][Stage 8:=========================>                           (287 + 112) / 594][Stage 8:===========================>                         (308 + 112) / 594][Stage 8:=============================>                       (330 + 112) / 594][Stage 8:===============================>                     (355 + 112) / 594][Stage 8:=================================>                   (377 + 113) / 594][Stage 8:====================================>                (408 + 113) / 594][Stage 8:=======================================>             (440 + 112) / 594][Stage 8:==========================================>          (479 + 112) / 594][Stage 8:=============================================>        (501 + 93) / 594][Stage 8:===============================================>      (524 + 70) / 594][Stage 8:=================================================>    (542 + 52) / 594][Stage 8:===================================================>  (564 + 30) / 594][Stage 8:====================================================> (574 + 20) / 594][Stage 8:====================================================> (582 + 12) / 594][Stage 8:======================================================>(586 + 8) / 594][Stage 8:======================================================>(587 + 7) / 594][Stage 8:======================================================>(589 + 5) / 594][Stage 8:======================================================>(591 + 3) / 594][Stage 8:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 14.8419347 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:=>                                                    (11 + 112) / 593][Stage 9:==>                                                   (28 + 112) / 593][Stage 9:===>                                                  (40 + 112) / 593][Stage 9:=====>                                                (58 + 112) / 593][Stage 9:=======>                                              (78 + 112) / 593][Stage 9:=========>                                           (106 + 112) / 593][Stage 9:============>                                        (136 + 113) / 593][Stage 9:===============>                                     (170 + 112) / 593][Stage 9:================>                                    (186 + 112) / 593][Stage 9:==================>                                  (204 + 112) / 593][Stage 9:====================>                                (225 + 112) / 593][Stage 9:======================>                              (248 + 112) / 593][Stage 9:========================>                            (273 + 112) / 593][Stage 9:==========================>                          (294 + 112) / 593][Stage 9:===========================>                         (306 + 112) / 593][Stage 9:=============================>                       (329 + 112) / 593][Stage 9:===============================>                     (353 + 112) / 593][Stage 9:=================================>                   (379 + 112) / 593][Stage 9:====================================>                (413 + 112) / 593][Stage 9:========================================>            (449 + 112) / 593][Stage 9:==========================================>          (472 + 112) / 593][Stage 9:===========================================>         (492 + 101) / 593][Stage 9:==============================================>       (510 + 83) / 593][Stage 9:=================================================>    (544 + 49) / 593][Stage 9:==================================================>   (555 + 38) / 593][Stage 9:===================================================>  (569 + 24) / 593][Stage 9:====================================================> (578 + 15) / 593][Stage 9:======================================================>(584 + 9) / 593][Stage 9:======================================================>(585 + 8) / 593][Stage 9:======================================================>(590 + 3) / 593][Stage 9:======================================================>(592 + 1) / 593]                                                                                [Stage 10:==>                                                  (25 + 112) / 594][Stage 10:===>                                                 (40 + 112) / 594][Stage 10:====>                                                (51 + 112) / 594][Stage 10:======>                                              (76 + 112) / 594][Stage 10:========>                                           (100 + 112) / 594][Stage 10:==========>                                         (123 + 112) / 594][Stage 10:=============>                                      (153 + 112) / 594][Stage 10:===============>                                    (182 + 112) / 594][Stage 10:=================>                                  (201 + 113) / 594][Stage 10:===================>                                (222 + 113) / 594][Stage 10:=====================>                              (249 + 112) / 594][Stage 10:=======================>                            (273 + 112) / 594][Stage 10:=========================>                          (291 + 112) / 594][Stage 10:==========================>                         (307 + 112) / 594][Stage 10:=============================>                      (332 + 112) / 594][Stage 10:===============================>                    (364 + 112) / 594][Stage 10:=================================>                  (385 + 112) / 594][Stage 10:===================================>                (408 + 112) / 594][Stage 10:=======================================>            (450 + 113) / 594][Stage 10:===========================================>        (493 + 101) / 594][Stage 10:=============================================>       (515 + 79) / 594][Stage 10:================================================>    (540 + 54) / 594][Stage 10:================================================>    (548 + 46) / 594][Stage 10:==================================================>  (563 + 31) / 594][Stage 10:===================================================> (572 + 22) / 594][Stage 10:===================================================> (579 + 15) / 594][Stage 10:=====================================================>(588 + 6) / 594][Stage 10:=====================================================>(589 + 5) / 594][Stage 10:=====================================================>(590 + 4) / 594][Stage 10:=====================================================>(593 + 1) / 594]                                                                                Time elapsed: 15.482510427 seconds

scala> 

scala> 

scala> :quit
17/04/24 11:36:24 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
67.2 G  /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt
