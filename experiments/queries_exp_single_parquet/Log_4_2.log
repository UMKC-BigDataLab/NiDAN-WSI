Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/24 11:21:02 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:21:16 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:21:16 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:21:17 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/24 11:21:19 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:21:30 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170424112119-0088).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-cores  8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf spark .driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt"
dataSource: String = /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 a nd imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 a nd imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 a nd imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 a nd imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001175346 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@25d5327

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.406913227 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.769101325 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (byt es, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 506][Stage 1:>                                                      (3 + 112) / 506][Stage 1:>                                                      (5 + 112) / 506][Stage 1:>                                                      (8 + 112) / 506][Stage 1:>                                                      (9 + 112) / 506][Stage 1:=>                                                    (11 + 112) / 506][Stage 1:=>                                                    (12 + 112) / 506][Stage 1:=>                                                    (16 + 112) / 506][Stage 1:=>                                                    (18 + 112) / 506][Stage 1:==>                                                   (19 + 112) / 506][Stage 1:==>                                                   (26 + 112) / 506][Stage 1:===>                                                  (37 + 112) / 506][Stage 1:========>                                             (76 + 112) / 506][Stage 1:==========>                                          (104 + 112) / 506][Stage 1:===========>                                         (113 + 112) / 506][Stage 1:=============>                                       (129 + 112) / 506][Stage 1:===============>                                     (151 + 112) / 506][Stage 1:================>                                    (158 + 112) / 506][Stage 1:==================>                                  (175 + 112) / 506][Stage 1:====================>                                (192 + 112) / 506][Stage 1:=====================>                               (204 + 112) / 506][Stage 1:======================>                              (217 + 112) / 506][Stage 1:========================>                            (235 + 112) / 506][Stage 1:==========================>                          (253 + 112) / 506][Stage 1:============================>                        (269 + 112) / 506][Stage 1:=============================>                       (278 + 112) / 506][Stage 1:==============================>                      (288 + 112) / 506][Stage 1:================================>                    (306 + 112) / 506][Stage 1:==================================>                  (328 + 112) / 506][Stage 1:====================================>                (346 + 112) / 506][Stage 1:======================================>              (365 + 112) / 506][Stage 1:=========================================>           (399 + 107) / 506][Stage 1:=============================================>        (423 + 83) / 506][Stage 1:===============================================>      (448 + 58) / 506][Stage 1:=================================================>    (461 + 45) / 506][Stage 1:==================================================>   (473 + 33) / 506][Stage 1:===================================================>  (486 + 20) / 506][Stage 1:====================================================> (494 + 12) / 506][Stage 1:======================================================>(499 + 7) / 506][Stage 1:======================================================>(500 + 6) / 506][Stage 1:======================================================>(502 + 4) / 506][Stage 1:======================================================>(503 + 3) / 506][Stage 1:======================================================>(504 + 2) / 506][Stage 1:======================================================>(505 + 1) / 506]                                                                                [Stage 2:==>                                                   (19 + 112) / 507][Stage 2:===>                                                  (31 + 112) / 507][Stage 2:====>                                                 (42 + 112) / 507][Stage 2:======>                                               (58 + 112) / 507][Stage 2:=======>                                              (71 + 112) / 507][Stage 2:==========>                                           (95 + 112) / 507][Stage 2:============>                                        (120 + 112) / 507][Stage 2:==============>                                      (141 + 112) / 507][Stage 2:===============>                                     (153 + 112) / 507][Stage 2:==================>                                  (177 + 112) / 507][Stage 2:====================>                                (193 + 112) / 507][Stage 2:======================>                              (213 + 112) / 507][Stage 2:=======================>                             (227 + 112) / 507][Stage 2:=========================>                           (243 + 112) / 507][Stage 2:===========================>                         (264 + 112) / 507][Stage 2:=============================>                       (285 + 112) / 507][Stage 2:================================>                    (312 + 112) / 507][Stage 2:==================================>                  (333 + 112) / 507][Stage 2:=====================================>               (354 + 112) / 507][Stage 2:========================================>            (387 + 112) / 507][Stage 2:===========================================>          (408 + 99) / 507][Stage 2:=============================================>        (428 + 79) / 507][Stage 2:================================================>     (454 + 53) / 507][Stage 2:=================================================>    (468 + 39) / 507][Stage 2:===================================================>  (482 + 25) / 507][Stage 2:====================================================> (489 + 18) / 507][Stage 2:====================================================> (495 + 12) / 507][Stage 2:======================================================>(501 + 6) / 507][Stage 2:======================================================>(502 + 5) / 507][Stage 2:======================================================>(503 + 4) / 507][Stage 2:======================================================>(504 + 3) / 507][Stage 2:======================================================>(505 + 2) / 507][Stage 2:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 22.691986035 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, i ndex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:>                                                      (1 + 112) / 506][Stage 3:=>                                                    (13 + 112) / 506][Stage 3:==>                                                   (24 + 112) / 506][Stage 3:====>                                                 (41 + 112) / 506][Stage 3:=====>                                                (52 + 112) / 506][Stage 3:=======>                                              (69 + 112) / 506][Stage 3:==========>                                           (96 + 112) / 506][Stage 3:============>                                        (121 + 112) / 506][Stage 3:================>                                    (156 + 112) / 506][Stage 3:=================>                                   (165 + 112) / 506][Stage 3:===================>                                 (183 + 112) / 506][Stage 3:=====================>                               (202 + 112) / 506][Stage 3:======================>                              (218 + 112) / 506][Stage 3:========================>                            (235 + 112) / 506][Stage 3:==========================>                          (251 + 112) / 506][Stage 3:============================>                        (274 + 112) / 506][Stage 3:===============================>                     (299 + 112) / 506][Stage 3:==================================>                  (329 + 112) / 506][Stage 3:=====================================>               (360 + 112) / 506][Stage 3:========================================>            (388 + 112) / 506][Stage 3:===========================================>          (411 + 95) / 506][Stage 3:==============================================>       (436 + 70) / 506][Stage 3:=================================================>    (460 + 46) / 506][Stage 3:==================================================>   (470 + 36) / 506][Stage 3:===================================================>  (484 + 22) / 506][Stage 3:====================================================> (491 + 15) / 506][Stage 3:======================================================>(497 + 9) / 506][Stage 3:======================================================>(499 + 7) / 506][Stage 3:======================================================>(500 + 6) / 506][Stage 3:======================================================>(501 + 5) / 506][Stage 3:======================================================>(504 + 2) / 506][Stage 3:======================================================>(505 + 1) / 506]                                                                                [Stage 4:=>                                                    (15 + 112) / 507][Stage 4:===>                                                  (36 + 112) / 507][Stage 4:=====>                                                (52 + 112) / 507][Stage 4:=======>                                              (68 + 112) / 507][Stage 4:==========>                                          (102 + 112) / 507][Stage 4:============>                                        (119 + 112) / 507][Stage 4:==============>                                      (138 + 112) / 507][Stage 4:================>                                    (158 + 112) / 507][Stage 4:==================>                                  (175 + 112) / 507][Stage 4:====================>                                (195 + 112) / 507][Stage 4:======================>                              (219 + 112) / 507][Stage 4:========================>                            (239 + 112) / 507][Stage 4:==========================>                          (254 + 112) / 507][Stage 4:============================>                        (272 + 112) / 507][Stage 4:===============================>                     (298 + 112) / 507][Stage 4:==================================>                  (326 + 112) / 507][Stage 4:====================================>                (347 + 113) / 507][Stage 4:========================================>            (383 + 112) / 507][Stage 4:==========================================>          (403 + 104) / 507][Stage 4:============================================>         (416 + 91) / 507][Stage 4:==============================================>       (439 + 68) / 507][Stage 4:=================================================>    (462 + 45) / 507][Stage 4:===================================================>  (480 + 27) / 507][Stage 4:===================================================>  (487 + 20) / 507][Stage 4:====================================================> (494 + 13) / 507][Stage 4:======================================================>(498 + 9) / 507][Stage 4:======================================================>(499 + 8) / 507][Stage 4:======================================================>(501 + 6) / 507][Stage 4:======================================================>(503 + 4) / 507][Stage 4:======================================================>(504 + 3) / 507][Stage 4:======================================================>(505 + 2) / 507][Stage 4:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.735007843 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:>                                                      (7 + 112) / 506][Stage 5:==>                                                   (24 + 112) / 506][Stage 5:===>                                                  (34 + 112) / 506][Stage 5:====>                                                 (45 + 112) / 506][Stage 5:========>                                             (75 + 112) / 506][Stage 5:=========>                                            (92 + 112) / 506][Stage 5:============>                                        (123 + 112) / 506][Stage 5:===============>                                     (149 + 112) / 506][Stage 5:=================>                                   (170 + 112) / 506][Stage 5:===================>                                 (190 + 112) / 506][Stage 5:=====================>                               (207 + 112) / 506][Stage 5:=======================>                             (224 + 112) / 506][Stage 5:=========================>                           (246 + 112) / 506][Stage 5:============================>                        (268 + 112) / 506][Stage 5:==============================>                      (287 + 112) / 506][Stage 5:================================>                    (314 + 112) / 506][Stage 5:===================================>                 (340 + 112) / 506][Stage 5:======================================>              (369 + 112) / 506][Stage 5:==========================================>          (402 + 104) / 506][Stage 5:=============================================>        (424 + 82) / 506][Stage 5:===============================================>      (446 + 60) / 506][Stage 5:=================================================>    (462 + 44) / 506][Stage 5:==================================================>   (473 + 33) / 506][Stage 5:===================================================>  (486 + 20) / 506][Stage 5:====================================================> (493 + 13) / 506][Stage 5:======================================================>(497 + 9) / 506][Stage 5:======================================================>(499 + 7) / 506][Stage 5:======================================================>(500 + 6) / 506][Stage 5:======================================================>(503 + 3) / 506][Stage 5:======================================================>(504 + 2) / 506][Stage 5:======================================================>(505 + 1) / 506]                                                                                [Stage 6:==>                                                   (23 + 112) / 507][Stage 6:===>                                                  (36 + 112) / 507][Stage 6:=====>                                                (52 + 112) / 507][Stage 6:=======>                                              (74 + 112) / 507][Stage 6:==========>                                          (102 + 112) / 507][Stage 6:=============>                                       (129 + 112) / 507][Stage 6:================>                                    (154 + 112) / 507][Stage 6:==================>                                  (175 + 112) / 507][Stage 6:====================>                                (196 + 112) / 507][Stage 6:======================>                              (213 + 112) / 507][Stage 6:========================>                            (230 + 112) / 507][Stage 6:=========================>                           (247 + 112) / 507][Stage 6:===========================>                         (265 + 112) / 507][Stage 6:==============================>                      (288 + 112) / 507][Stage 6:================================>                    (310 + 112) / 507][Stage 6:===================================>                 (338 + 112) / 507][Stage 6:======================================>              (365 + 112) / 507][Stage 6:=========================================>           (399 + 108) / 507][Stage 6:=============================================>        (426 + 81) / 507][Stage 6:===============================================>      (445 + 62) / 507][Stage 6:=================================================>    (465 + 42) / 507][Stage 6:===================================================>  (479 + 28) / 507][Stage 6:====================================================> (489 + 18) / 507][Stage 6:====================================================> (496 + 11) / 507][Stage 6:====================================================> (497 + 10) / 507][Stage 6:======================================================>(499 + 8) / 507][Stage 6:======================================================>(501 + 6) / 507][Stage 6:======================================================>(502 + 5) / 507][Stage 6:======================================================>(504 + 3) / 507][Stage 6:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.439859903 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:=>                                                    (11 + 112) / 506][Stage 7:==>                                                   (24 + 112) / 506][Stage 7:====>                                                 (42 + 112) / 506][Stage 7:======>                                               (61 + 112) / 506][Stage 7:=======>                                              (74 + 112) / 506][Stage 7:===========>                                         (110 + 112) / 506][Stage 7:=============>                                       (131 + 112) / 506][Stage 7:================>                                    (153 + 113) / 506][Stage 7:==================>                                  (174 + 112) / 506][Stage 7:====================>                                (193 + 112) / 506][Stage 7:======================>                              (212 + 112) / 506][Stage 7:========================>                            (232 + 112) / 506][Stage 7:==========================>                          (253 + 112) / 506][Stage 7:============================>                        (273 + 112) / 506][Stage 7:==============================>                      (288 + 112) / 506][Stage 7:=================================>                   (317 + 112) / 506][Stage 7:===================================>                 (339 + 112) / 506][Stage 7:======================================>              (363 + 112) / 506][Stage 7:==========================================>          (401 + 105) / 506][Stage 7:============================================>         (418 + 88) / 506][Stage 7:================================================>     (450 + 56) / 506][Stage 7:=================================================>    (466 + 40) / 506][Stage 7:==================================================>   (476 + 30) / 506][Stage 7:===================================================>  (485 + 21) / 506][Stage 7:====================================================> (492 + 14) / 506][Stage 7:====================================================> (496 + 10) / 506][Stage 7:======================================================>(499 + 7) / 506][Stage 7:======================================================>(502 + 4) / 506][Stage 7:======================================================>(503 + 3) / 506][Stage 7:======================================================>(504 + 2) / 506][Stage 7:======================================================>(505 + 1) / 506]                                                                                [Stage 8:==>                                                   (20 + 112) / 507][Stage 8:===>                                                  (29 + 112) / 507][Stage 8:=====>                                                (49 + 112) / 507][Stage 8:=======>                                              (67 + 112) / 507][Stage 8:=========>                                            (91 + 112) / 507][Stage 8:============>                                        (119 + 112) / 507][Stage 8:==============>                                      (141 + 112) / 507][Stage 8:================>                                    (157 + 112) / 507][Stage 8:==================>                                  (177 + 112) / 507][Stage 8:=====================>                               (203 + 112) / 507][Stage 8:=======================>                             (228 + 112) / 507][Stage 8:==========================>                          (249 + 112) / 507][Stage 8:===========================>                         (264 + 112) / 507][Stage 8:=============================>                       (285 + 112) / 507][Stage 8:================================>                    (311 + 112) / 507][Stage 8:==================================>                  (331 + 112) / 507][Stage 8:======================================>              (364 + 112) / 507][Stage 8:=========================================>           (395 + 112) / 507][Stage 8:=============================================>        (423 + 84) / 507][Stage 8:===============================================>      (447 + 60) / 507][Stage 8:=================================================>    (461 + 46) / 507][Stage 8:==================================================>   (475 + 32) / 507][Stage 8:====================================================> (489 + 18) / 507][Stage 8:====================================================> (493 + 14) / 507][Stage 8:======================================================>(498 + 9) / 507][Stage 8:======================================================>(500 + 7) / 507][Stage 8:======================================================>(503 + 4) / 507][Stage 8:======================================================>(504 + 3) / 507][Stage 8:======================================================>(505 + 2) / 507][Stage 8:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.862127673 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:=>                                                    (10 + 112) / 506][Stage 9:==>                                                   (26 + 112) / 506][Stage 9:===>                                                  (36 + 112) / 506][Stage 9:=====>                                                (55 + 112) / 506][Stage 9:=======>                                              (73 + 112) / 506][Stage 9:=========>                                            (85 + 112) / 506][Stage 9:============>                                        (116 + 112) / 506][Stage 9:==============>                                      (137 + 112) / 506][Stage 9:================>                                    (157 + 112) / 506][Stage 9:==================>                                  (178 + 112) / 506][Stage 9:====================>                                (199 + 112) / 506][Stage 9:=======================>                             (221 + 112) / 506][Stage 9:=========================>                           (242 + 112) / 506][Stage 9:==========================>                          (257 + 112) / 506][Stage 9:=============================>                       (280 + 112) / 506][Stage 9:================================>                    (306 + 112) / 506][Stage 9:==================================>                  (331 + 112) / 506][Stage 9:=====================================>               (361 + 112) / 506][Stage 9:========================================>            (387 + 112) / 506][Stage 9:==========================================>          (405 + 101) / 506][Stage 9:=============================================>        (425 + 81) / 506][Stage 9:==============================================>       (440 + 66) / 506][Stage 9:================================================>     (459 + 47) / 506][Stage 9:===================================================>  (478 + 28) / 506][Stage 9:====================================================> (488 + 18) / 506][Stage 9:====================================================> (496 + 10) / 506][Stage 9:======================================================>(499 + 7) / 506][Stage 9:======================================================>(501 + 5) / 506][Stage 9:======================================================>(503 + 3) / 506][Stage 9:======================================================>(504 + 2) / 506][Stage 9:======================================================>(505 + 1) / 506]                                                                                [Stage 10:==>                                                  (27 + 112) / 507][Stage 10:====>                                                (45 + 112) / 507][Stage 10:======>                                              (63 + 112) / 507][Stage 10:=========>                                           (88 + 112) / 507][Stage 10:===========>                                        (112 + 112) / 507][Stage 10:==============>                                     (139 + 112) / 507][Stage 10:===============>                                    (155 + 112) / 507][Stage 10:=================>                                  (171 + 112) / 507][Stage 10:====================>                               (198 + 112) / 507][Stage 10:======================>                             (217 + 114) / 507][Stage 10:========================>                           (238 + 112) / 507][Stage 10:=========================>                          (252 + 112) / 507][Stage 10:===========================>                        (268 + 112) / 507][Stage 10:==============================>                     (295 + 112) / 507][Stage 10:=================================>                  (322 + 113) / 507][Stage 10:=====================================>              (361 + 113) / 507][Stage 10:=======================================>            (384 + 113) / 507][Stage 10:===========================================>         (416 + 91) / 507][Stage 10:=============================================>       (434 + 73) / 507][Stage 10:==============================================>      (449 + 58) / 507][Stage 10:================================================>    (465 + 42) / 507][Stage 10:=================================================>   (477 + 30) / 507][Stage 10:==================================================>  (486 + 21) / 507][Stage 10:===================================================> (490 + 17) / 507][Stage 10:=====================================================>(499 + 8) / 507][Stage 10:=====================================================>(500 + 7) / 507][Stage 10:=====================================================>(502 + 5) / 507][Stage 10:=====================================================>(503 + 4) / 507][Stage 10:=====================================================>(505 + 2) / 507][Stage 10:=====================================================>(506 + 1) / 507]                                                                                Time elapsed: 15.061318049 seconds

scala> 

scala> 

scala> :quit
17/04/24 11:23:19 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
57.9 G  /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt
