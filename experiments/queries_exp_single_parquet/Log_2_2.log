Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/24 11:00:46 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:01:00 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:01:00 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:01:00 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/24 11:01:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:01:13 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170424110102-0082).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-cores  8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf spark .driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt"
dataSource: String = /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 a nd imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 a nd imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 a nd imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 a nd imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001401007 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@664217a8

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.21643069 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.762012455 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (byt es, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                        (0 + 0) / 229][Stage 1:>                                                      (0 + 112) / 229][Stage 1:=>                                                     (6 + 112) / 229][Stage 1:=>                                                     (7 + 112) / 229][Stage 1:==>                                                    (9 + 112) / 229][Stage 1:==>                                                   (10 + 112) / 229][Stage 1:==>                                                   (11 + 112) / 229][Stage 1:===>                                                  (14 + 112) / 229][Stage 1:===>                                                  (15 + 112) / 229][Stage 1:====>                                                 (19 + 112) / 229][Stage 1:=====>                                                (23 + 112) / 229][Stage 1:==========>                                           (43 + 112) / 229][Stage 1:=================>                                    (76 + 112) / 229][Stage 1:=======================>                             (103 + 112) / 229][Stage 1:============================>                        (123 + 106) / 229][Stage 1:===================================>                  (151 + 78) / 229][Stage 1:===========================================>          (183 + 46) / 229][Stage 1:===============================================>      (203 + 26) / 229][Stage 1:==================================================>   (214 + 15) / 229][Stage 1:===================================================>  (217 + 12) / 229][Stage 1:=====================================================> (221 + 8) / 229][Stage 1:=====================================================> (223 + 6) / 229][Stage 1:======================================================>(225 + 4) / 229][Stage 1:======================================================>(226 + 3) / 229][Stage 1:======================================================>(227 + 2) / 229][Stage 1:======================================================>(228 + 1) / 229]                                                                                [Stage 2:=>                                                     (8 + 112) / 230][Stage 2:=====>                                                (24 + 112) / 230][Stage 2:========>                                             (37 + 112) / 230][Stage 2:===========>                                          (50 + 112) / 230][Stage 2:===============>                                      (65 + 113) / 230][Stage 2:==================>                                   (79 + 112) / 230][Stage 2:======================>                               (96 + 112) / 230][Stage 2:============================>                        (123 + 107) / 230][Stage 2:=====================================>                (158 + 72) / 230][Stage 2:=========================================>            (178 + 52) / 230][Stage 2:============================================>         (189 + 41) / 230][Stage 2:================================================>     (206 + 24) / 230][Stage 2:==================================================>   (217 + 13) / 230][Stage 2:====================================================>  (221 + 9) / 230][Stage 2:=====================================================> (224 + 6) / 230][Stage 2:======================================================>(227 + 3) / 230][Stage 2:======================================================>(228 + 2) / 230][Stage 2:======================================================>(229 + 1) / 230]                                                                                Time elapsed: 16.492418103 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, i ndex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:===>                                                  (16 + 112) / 229][Stage 3:=======>                                              (33 + 112) / 229][Stage 3:==========>                                           (46 + 112) / 229][Stage 3:=============>                                        (57 + 112) / 229][Stage 3:==================>                                   (78 + 112) / 229][Stage 3:=====================>                                (92 + 112) / 229][Stage 3:=============================>                       (129 + 100) / 229][Stage 3:=====================================>                (159 + 70) / 229][Stage 3:============================================>         (188 + 41) / 229][Stage 3:================================================>     (206 + 23) / 229][Stage 3:==================================================>   (214 + 15) / 229][Stage 3:=====================================================> (222 + 7) / 229][Stage 3:=====================================================> (224 + 5) / 229][Stage 3:======================================================>(226 + 3) / 229][Stage 3:======================================================>(227 + 2) / 229][Stage 3:======================================================>(228 + 1) / 229]                                                                                [Stage 4:=======>                                              (30 + 112) / 230][Stage 4:=========>                                            (42 + 112) / 230][Stage 4:=============>                                        (59 + 112) / 230][Stage 4:================>                                     (71 + 112) / 230][Stage 4:======================>                               (97 + 112) / 230][Stage 4:==========================>                          (114 + 112) / 230][Stage 4:====================================>                 (154 + 76) / 230][Stage 4:===========================================>          (186 + 44) / 230][Stage 4:===============================================>      (203 + 27) / 230][Stage 4:=================================================>    (210 + 20) / 230][Stage 4:==================================================>   (217 + 13) / 230][Stage 4:=====================================================> (224 + 6) / 230][Stage 4:======================================================>(228 + 2) / 230][Stage 4:======================================================>(229 + 1) / 230]                                                                                Time elapsed: 9.538704686 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:>                                                      (3 + 112) / 229][Stage 5:====>                                                 (20 + 112) / 229][Stage 5:=======>                                              (33 + 112) / 229][Stage 5:===========>                                          (50 + 112) / 229][Stage 5:===============>                                      (64 + 112) / 229][Stage 5:==================>                                   (78 + 112) / 229][Stage 5:=========================>                           (111 + 112) / 229][Stage 5:================================>                     (137 + 92) / 229][Stage 5:======================================>               (165 + 64) / 229][Stage 5:===========================================>          (186 + 43) / 229][Stage 5:===============================================>      (203 + 26) / 229][Stage 5:=================================================>    (212 + 17) / 229][Stage 5:=====================================================> (222 + 7) / 229][Stage 5:=====================================================> (224 + 5) / 229][Stage 5:======================================================>(226 + 3) / 229][Stage 5:======================================================>(228 + 1) / 229]                                                                                [Stage 6:======>                                               (29 + 112) / 230][Stage 6:==========>                                           (44 + 112) / 230][Stage 6:===============>                                      (64 + 112) / 230][Stage 6:==================>                                   (77 + 112) / 230][Stage 6:=====================>                                (93 + 112) / 230][Stage 6:=============================>                       (130 + 100) / 230][Stage 6:====================================>                 (156 + 74) / 230][Stage 6:===========================================>          (184 + 46) / 230][Stage 6:===============================================>      (201 + 29) / 230][Stage 6:==================================================>   (213 + 17) / 230][Stage 6:===================================================>  (219 + 11) / 230][Stage 6:=====================================================> (222 + 8) / 230][Stage 6:======================================================>(226 + 4) / 230][Stage 6:======================================================>(228 + 2) / 230][Stage 6:======================================================>(229 + 1) / 230]                                                                                Time elapsed: 9.596740707 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:==>                                                    (9 + 112) / 229][Stage 7:======>                                               (27 + 112) / 229][Stage 7:=========>                                            (42 + 112) / 229][Stage 7:=============>                                        (57 + 112) / 229][Stage 7:==================>                                   (79 + 112) / 229][Stage 7:========================>                            (104 + 112) / 229][Stage 7:=================================>                    (140 + 89) / 229][Stage 7:=======================================>              (166 + 63) / 229][Stage 7:============================================>         (188 + 41) / 229][Stage 7:===============================================>      (200 + 29) / 229][Stage 7:=================================================>    (211 + 18) / 229][Stage 7:===================================================>  (217 + 12) / 229][Stage 7:====================================================>  (220 + 9) / 229][Stage 7:======================================================>(225 + 4) / 229][Stage 7:======================================================>(228 + 1) / 229]                                                                                [Stage 8:========>                                             (35 + 112) / 230][Stage 8:===========>                                          (51 + 112) / 230][Stage 8:===============>                                      (67 + 112) / 230][Stage 8:====================>                                 (86 + 112) / 230][Stage 8:==========================>                          (113 + 112) / 230][Stage 8:================================>                     (140 + 90) / 230][Stage 8:=======================================>              (167 + 63) / 230][Stage 8:===========================================>          (186 + 44) / 230][Stage 8:=================================================>    (210 + 20) / 230][Stage 8:===================================================>  (218 + 12) / 230][Stage 8:=====================================================> (223 + 7) / 230][Stage 8:=====================================================> (224 + 6) / 230][Stage 8:======================================================>(226 + 4) / 230][Stage 8:======================================================>(228 + 2) / 230][Stage 8:======================================================>(229 + 1) / 230]                                                                                Time elapsed: 9.213700162 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:===>                                                  (14 + 112) / 229][Stage 9:======>                                               (29 + 112) / 229][Stage 9:==========>                                           (44 + 112) / 229][Stage 9:===============>                                      (65 + 112) / 229][Stage 9:==================>                                   (80 + 112) / 229][Stage 9:======================>                               (96 + 112) / 229][Stage 9:==============================>                       (130 + 99) / 229][Stage 9:=====================================>                (161 + 68) / 229][Stage 9:===========================================>          (186 + 43) / 229][Stage 9:==============================================>       (197 + 32) / 229][Stage 9:================================================>     (206 + 23) / 229][Stage 9:===================================================>  (217 + 12) / 229][Stage 9:=====================================================> (221 + 8) / 229][Stage 9:======================================================>(225 + 4) / 229][Stage 9:======================================================>(227 + 2) / 229][Stage 9:======================================================>(228 + 1) / 229]                                                                                [Stage 10:=====>                                               (22 + 112) / 230][Stage 10:========>                                            (39 + 112) / 230][Stage 10:============>                                        (56 + 112) / 230][Stage 10:===============>                                     (67 + 112) / 230][Stage 10:====================>                                (89 + 112) / 230][Stage 10:==========================>                         (118 + 112) / 230][Stage 10:===================================>                 (152 + 78) / 230][Stage 10:======================================>              (166 + 64) / 230][Stage 10:==========================================>          (185 + 45) / 230][Stage 10:=============================================>       (198 + 32) / 230][Stage 10:===============================================>     (207 + 23) / 230][Stage 10:==================================================>  (218 + 12) / 230][Stage 10:====================================================> (224 + 6) / 230][Stage 10:=====================================================>(226 + 4) / 230][Stage 10:=====================================================>(227 + 3) / 230][Stage 10:=====================================================>(228 + 2) / 230][Stage 10:=====================================================>(229 + 1) / 230]                                                                                Time elapsed: 9.756237406 seconds

scala> 

scala> 

scala> :quit
17/04/24 11:02:33 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.18:58572) dropped. Could not find BlockManagerMaster.
17/04/24 11:02:36 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
26.1 G  /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt
