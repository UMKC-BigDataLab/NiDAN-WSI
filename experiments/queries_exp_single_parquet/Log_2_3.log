Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/24 11:02:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:02:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:02:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:02:55 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/24 11:02:57 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:03:08 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170424110257-0083).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-cores  8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf spark .driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt"
dataSource: String = /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 a nd imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 a nd imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 a nd imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 a nd imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001198546 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@664217a8

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.19924056 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.789189861 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (byt es, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 229][Stage 1:>                                                      (3 + 112) / 229][Stage 1:>                                                      (4 + 112) / 229][Stage 1:=>                                                     (5 + 112) / 229][Stage 1:=>                                                     (7 + 112) / 229][Stage 1:=>                                                     (8 + 112) / 229][Stage 1:==>                                                   (12 + 112) / 229][Stage 1:===>                                                  (14 + 112) / 229][Stage 1:====>                                                 (17 + 112) / 229][Stage 1:====>                                                 (18 + 112) / 229][Stage 1:====>                                                 (20 + 112) / 229][Stage 1:==========>                                           (43 + 112) / 229][Stage 1:==============>                                       (61 + 112) / 229][Stage 1:========================>                            (107 + 112) / 229][Stage 1:==============================>                       (131 + 98) / 229][Stage 1:==================================>                   (147 + 82) / 229][Stage 1:========================================>             (170 + 59) / 229][Stage 1:============================================>         (187 + 42) / 229][Stage 1:================================================>     (207 + 22) / 229][Stage 1:==================================================>   (214 + 15) / 229][Stage 1:=====================================================> (222 + 7) / 229][Stage 1:======================================================>(225 + 4) / 229][Stage 1:======================================================>(228 + 1) / 229]                                                                                [Stage 2:=>                                                     (6 + 112) / 230][Stage 2:=====>                                                (25 + 112) / 230][Stage 2:========>                                             (36 + 112) / 230][Stage 2:===========>                                          (50 + 112) / 230][Stage 2:==============>                                       (62 + 112) / 230][Stage 2:=================>                                    (73 + 112) / 230][Stage 2:======================>                               (95 + 112) / 230][Stage 2:==========================>                          (117 + 112) / 230][Stage 2:==================================>                   (146 + 84) / 230][Stage 2:=========================================>            (177 + 53) / 230][Stage 2:===============================================>      (204 + 26) / 230][Stage 2:=================================================>    (210 + 20) / 230][Stage 2:===================================================>  (219 + 11) / 230][Stage 2:====================================================>  (221 + 9) / 230][Stage 2:=====================================================> (222 + 8) / 230][Stage 2:=====================================================> (225 + 5) / 230][Stage 2:======================================================>(226 + 4) / 230][Stage 2:======================================================>(227 + 3) / 230][Stage 2:======================================================>(228 + 2) / 230][Stage 2:======================================================>(229 + 1) / 230]                                                                                Time elapsed: 15.748143115 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, i ndex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:===>                                                  (15 + 112) / 229][Stage 3:========>                                             (34 + 112) / 229][Stage 3:==========>                                           (45 + 112) / 229][Stage 3:============>                                         (51 + 112) / 229][Stage 3:================>                                     (69 + 112) / 229][Stage 3:====================>                                 (85 + 112) / 229][Stage 3:========================>                            (106 + 112) / 229][Stage 3:=============================>                       (129 + 100) / 229][Stage 3:========================================>             (172 + 57) / 229][Stage 3:=============================================>        (192 + 37) / 229][Stage 3:================================================>     (205 + 24) / 229][Stage 3:==================================================>   (216 + 13) / 229][Stage 3:=====================================================> (223 + 6) / 229][Stage 3:=====================================================> (224 + 5) / 229][Stage 3:======================================================>(227 + 2) / 229][Stage 3:======================================================>(228 + 1) / 229]                                                                                [Stage 4:===>                                                  (14 + 112) / 230][Stage 4:=======>                                              (32 + 112) / 230][Stage 4:===========>                                          (48 + 112) / 230][Stage 4:===============>                                      (64 + 112) / 230][Stage 4:==================>                                   (79 + 112) / 230][Stage 4:=======================>                             (104 + 112) / 230][Stage 4:==============================>                       (132 + 98) / 230][Stage 4:======================================>               (165 + 65) / 230][Stage 4:===========================================>          (186 + 44) / 230][Stage 4:===============================================>      (202 + 28) / 230][Stage 4:=================================================>    (211 + 19) / 230][Stage 4:==================================================>   (217 + 13) / 230][Stage 4:=====================================================> (222 + 8) / 230][Stage 4:=====================================================> (225 + 5) / 230][Stage 4:======================================================>(226 + 4) / 230][Stage 4:======================================================>(227 + 3) / 230][Stage 4:======================================================>(228 + 2) / 230][Stage 4:======================================================>(229 + 1) / 230]                                                                                Time elapsed: 9.349435151 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:===>                                                  (15 + 112) / 229][Stage 5:=======>                                              (33 + 112) / 229][Stage 5:===========>                                          (50 + 112) / 229][Stage 5:================>                                     (69 + 112) / 229][Stage 5:====================>                                 (85 + 112) / 229][Stage 5:========================>                            (108 + 112) / 229][Stage 5:=================================>                    (143 + 86) / 229][Stage 5:=======================================>              (168 + 61) / 229][Stage 5:============================================>         (189 + 40) / 229][Stage 5:=================================================>    (208 + 21) / 229][Stage 5:==================================================>   (216 + 13) / 229][Stage 5:=====================================================> (222 + 7) / 229][Stage 5:=====================================================> (224 + 5) / 229][Stage 5:======================================================>(227 + 2) / 229][Stage 5:======================================================>(228 + 1) / 229]                                                                                [Stage 6:====>                                                 (19 + 112) / 230][Stage 6:==========>                                           (43 + 112) / 230][Stage 6:============>                                         (54 + 112) / 230][Stage 6:================>                                     (70 + 112) / 230][Stage 6:=====================>                                (90 + 112) / 230][Stage 6:===========================>                         (121 + 109) / 230][Stage 6:=====================================>                (158 + 72) / 230][Stage 6:==========================================>           (179 + 51) / 230][Stage 6:==============================================>       (197 + 33) / 230][Stage 6:================================================>     (207 + 23) / 230][Stage 6:==================================================>   (213 + 17) / 230][Stage 6:=====================================================> (222 + 8) / 230][Stage 6:=====================================================> (225 + 5) / 230][Stage 6:======================================================>(227 + 3) / 230][Stage 6:======================================================>(228 + 2) / 230][Stage 6:======================================================>(229 + 1) / 230]                                                                                Time elapsed: 9.307495693 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:==>                                                   (12 + 112) / 229][Stage 7:=======>                                              (30 + 112) / 229][Stage 7:==========>                                           (44 + 112) / 229][Stage 7:==============>                                       (61 + 112) / 229][Stage 7:==================>                                   (78 + 112) / 229][Stage 7:=======================>                              (98 + 112) / 229][Stage 7:============================>                        (122 + 107) / 229][Stage 7:===================================>                  (152 + 77) / 229][Stage 7:========================================>             (173 + 56) / 229][Stage 7:=============================================>        (192 + 37) / 229][Stage 7:=================================================>    (210 + 19) / 229][Stage 7:===================================================>  (218 + 11) / 229][Stage 7:=====================================================> (223 + 6) / 229][Stage 7:======================================================>(225 + 4) / 229][Stage 7:======================================================>(226 + 3) / 229][Stage 7:======================================================>(227 + 2) / 229][Stage 7:======================================================>(228 + 1) / 229]                                                                                [Stage 8:======>                                               (29 + 112) / 230][Stage 8:===========>                                          (47 + 112) / 230][Stage 8:===============>                                      (64 + 112) / 230][Stage 8:=================>                                    (76 + 112) / 230][Stage 8:======================>                               (97 + 112) / 230][Stage 8:=============================>                       (128 + 102) / 230][Stage 8:=====================================>                (159 + 71) / 230][Stage 8:===========================================>          (186 + 44) / 230][Stage 8:================================================>     (208 + 22) / 230][Stage 8:==================================================>   (214 + 16) / 230][Stage 8:====================================================>  (221 + 9) / 230][Stage 8:=====================================================> (223 + 7) / 230][Stage 8:======================================================>(226 + 4) / 230][Stage 8:======================================================>(228 + 2) / 230][Stage 8:======================================================>(229 + 1) / 230]                                                                                Time elapsed: 9.029435297 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:===>                                                  (15 + 112) / 229][Stage 9:=======>                                              (31 + 112) / 229][Stage 9:==========>                                           (46 + 112) / 229][Stage 9:=============>                                        (57 + 112) / 229][Stage 9:===================>                                  (84 + 112) / 229][Stage 9:========================>                            (106 + 112) / 229][Stage 9:===============================>                      (134 + 95) / 229][Stage 9:=======================================>              (167 + 62) / 229][Stage 9:===========================================>          (184 + 45) / 229][Stage 9:===============================================>      (202 + 27) / 229][Stage 9:==================================================>   (213 + 16) / 229][Stage 9:=====================================================> (221 + 8) / 229][Stage 9:=====================================================> (223 + 6) / 229][Stage 9:======================================================>(228 + 1) / 229]                                                                                [Stage 10:======>                                              (28 + 112) / 230][Stage 10:==========>                                          (45 + 113) / 230][Stage 10:===============>                                     (67 + 112) / 230][Stage 10:==================>                                  (80 + 112) / 230][Stage 10:======================>                             (101 + 112) / 230][Stage 10:===========================>                        (121 + 109) / 230][Stage 10:===================================>                 (152 + 78) / 230][Stage 10:========================================>            (176 + 54) / 230][Stage 10:============================================>        (195 + 35) / 230][Stage 10:===============================================>     (206 + 24) / 230][Stage 10:=================================================>   (213 + 17) / 230][Stage 10:==================================================>  (219 + 11) / 230][Stage 10:====================================================> (223 + 7) / 230][Stage 10:=====================================================>(227 + 3) / 230][Stage 10:=====================================================>(228 + 2) / 230][Stage 10:=====================================================>(229 + 1) / 230]                                                                                Time elapsed: 9.533381723 seconds

scala> 

scala> 

scala> :quit
17/04/24 11:04:28 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
26.1 G  /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt
