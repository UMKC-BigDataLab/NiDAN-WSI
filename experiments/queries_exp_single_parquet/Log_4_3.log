Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/24 11:23:22 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:23:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:23:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:23:38 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/24 11:23:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:23:51 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170424112340-0089).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-cores  8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf spark .driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt"
dataSource: String = /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 a nd imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 a nd imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 a nd imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 a nd imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001185045 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@4b4a3114

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.371706535 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.812899172 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (byt es, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 506][Stage 1:>                                                      (5 + 112) / 506][Stage 1:>                                                      (8 + 112) / 506][Stage 1:>                                                      (9 + 112) / 506][Stage 1:=>                                                    (10 + 112) / 506][Stage 1:=>                                                    (11 + 112) / 506][Stage 1:=>                                                    (13 + 112) / 506][Stage 1:=>                                                    (15 + 112) / 506][Stage 1:==>                                                   (19 + 112) / 506][Stage 1:==>                                                   (20 + 112) / 506][Stage 1:==>                                                   (27 + 112) / 506][Stage 1:===>                                                  (34 + 112) / 506][Stage 1:========>                                             (75 + 112) / 506][Stage 1:==========>                                           (95 + 112) / 506][Stage 1:============>                                        (119 + 112) / 506][Stage 1:=============>                                       (130 + 112) / 506][Stage 1:==============>                                      (142 + 112) / 506][Stage 1:================>                                    (162 + 112) / 506][Stage 1:==================>                                  (179 + 112) / 506][Stage 1:====================>                                (192 + 112) / 506][Stage 1:=====================>                               (203 + 112) / 506][Stage 1:=======================>                             (224 + 112) / 506][Stage 1:=========================>                           (241 + 112) / 506][Stage 1:==========================>                          (255 + 112) / 506][Stage 1:============================>                        (269 + 112) / 506][Stage 1:==============================>                      (289 + 112) / 506][Stage 1:===============================>                     (299 + 112) / 506][Stage 1:=================================>                   (319 + 112) / 506][Stage 1:==================================>                  (334 + 112) / 506][Stage 1:=====================================>               (359 + 112) / 506][Stage 1:=======================================>             (378 + 112) / 506][Stage 1:==========================================>          (406 + 100) / 506][Stage 1:=============================================>        (427 + 79) / 506][Stage 1:================================================>     (452 + 54) / 506][Stage 1:=================================================>    (468 + 38) / 506][Stage 1:===================================================>  (479 + 27) / 506][Stage 1:====================================================> (491 + 15) / 506][Stage 1:======================================================>(497 + 9) / 506][Stage 1:======================================================>(498 + 8) / 506][Stage 1:======================================================>(501 + 5) / 506][Stage 1:======================================================>(502 + 4) / 506][Stage 1:======================================================>(503 + 3) / 506][Stage 1:======================================================>(504 + 2) / 506][Stage 1:======================================================>(505 + 1) / 506]                                                                                [Stage 2:=>                                                    (12 + 112) / 507][Stage 2:==>                                                   (20 + 112) / 507][Stage 2:===>                                                  (32 + 112) / 507][Stage 2:====>                                                 (45 + 112) / 507][Stage 2:======>                                               (61 + 112) / 507][Stage 2:=======>                                              (75 + 112) / 507][Stage 2:==========>                                           (99 + 112) / 507][Stage 2:============>                                        (120 + 112) / 507][Stage 2:==============>                                      (138 + 112) / 507][Stage 2:================>                                    (157 + 112) / 507][Stage 2:==================>                                  (176 + 112) / 507][Stage 2:====================>                                (193 + 112) / 507][Stage 2:======================>                              (213 + 112) / 507][Stage 2:========================>                            (230 + 112) / 507][Stage 2:=========================>                           (246 + 112) / 507][Stage 2:============================>                        (268 + 112) / 507][Stage 2:==============================>                      (289 + 112) / 507][Stage 2:================================>                    (310 + 112) / 507][Stage 2:==================================>                  (334 + 112) / 507][Stage 2:====================================>                (353 + 112) / 507][Stage 2:=======================================>             (381 + 113) / 507][Stage 2:==========================================>          (407 + 100) / 507][Stage 2:=============================================>        (429 + 78) / 507][Stage 2:===============================================>      (450 + 57) / 507][Stage 2:==================================================>   (471 + 36) / 507][Stage 2:===================================================>  (485 + 22) / 507][Stage 2:====================================================> (492 + 15) / 507][Stage 2:====================================================> (494 + 13) / 507][Stage 2:======================================================>(501 + 6) / 507][Stage 2:======================================================>(502 + 5) / 507][Stage 2:======================================================>(503 + 4) / 507][Stage 2:======================================================>(504 + 3) / 507][Stage 2:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 22.672332157 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, i ndex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:=>                                                    (13 + 112) / 506][Stage 3:==>                                                   (23 + 112) / 506][Stage 3:===>                                                  (33 + 112) / 506][Stage 3:=====>                                                (54 + 112) / 506][Stage 3:=======>                                              (73 + 112) / 506][Stage 3:==========>                                           (94 + 112) / 506][Stage 3:============>                                        (117 + 112) / 506][Stage 3:==============>                                      (143 + 112) / 506][Stage 3:=================>                                   (165 + 112) / 506][Stage 3:==================>                                  (174 + 112) / 506][Stage 3:====================>                                (198 + 112) / 506][Stage 3:=======================>                             (222 + 112) / 506][Stage 3:=========================>                           (241 + 112) / 506][Stage 3:==========================>                          (256 + 112) / 506][Stage 3:=============================>                       (281 + 112) / 506][Stage 3:===============================>                     (302 + 112) / 506][Stage 3:==================================>                  (326 + 112) / 506][Stage 3:====================================>                (352 + 112) / 506][Stage 3:=======================================>             (378 + 112) / 506][Stage 3:===========================================>          (411 + 95) / 506][Stage 3:==============================================>       (439 + 67) / 506][Stage 3:================================================>     (454 + 52) / 506][Stage 3:==================================================>   (473 + 33) / 506][Stage 3:===================================================>  (482 + 24) / 506][Stage 3:====================================================> (489 + 17) / 506][Stage 3:====================================================> (494 + 12) / 506][Stage 3:======================================================>(499 + 7) / 506][Stage 3:======================================================>(501 + 5) / 506][Stage 3:======================================================>(503 + 3) / 506][Stage 3:======================================================>(505 + 1) / 506]                                                                                [Stage 4:=>                                                    (14 + 112) / 507][Stage 4:===>                                                  (30 + 112) / 507][Stage 4:====>                                                 (45 + 112) / 507][Stage 4:=======>                                              (69 + 112) / 507][Stage 4:=========>                                            (90 + 112) / 507][Stage 4:===========>                                         (110 + 112) / 507][Stage 4:=============>                                       (133 + 112) / 507][Stage 4:=================>                                   (166 + 112) / 507][Stage 4:===================>                                 (183 + 112) / 507][Stage 4:====================>                                (200 + 112) / 507][Stage 4:=======================>                             (225 + 112) / 507][Stage 4:========================>                            (238 + 112) / 507][Stage 4:===========================>                         (259 + 112) / 507][Stage 4:=============================>                       (282 + 112) / 507][Stage 4:===============================>                     (303 + 112) / 507][Stage 4:==================================>                  (329 + 112) / 507][Stage 4:=====================================>               (355 + 112) / 507][Stage 4:========================================>            (387 + 112) / 507][Stage 4:===========================================>          (408 + 99) / 507][Stage 4:==============================================>       (433 + 74) / 507][Stage 4:================================================>     (453 + 54) / 507][Stage 4:=================================================>    (466 + 41) / 507][Stage 4:==================================================>   (474 + 33) / 507][Stage 4:===================================================>  (485 + 22) / 507][Stage 4:====================================================> (495 + 12) / 507][Stage 4:======================================================>(500 + 7) / 507][Stage 4:======================================================>(502 + 5) / 507][Stage 4:======================================================>(504 + 3) / 507][Stage 4:======================================================>(505 + 2) / 507][Stage 4:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.977766431 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:>                                                      (7 + 112) / 506][Stage 5:==>                                                   (24 + 112) / 506][Stage 5:===>                                                  (35 + 112) / 506][Stage 5:=====>                                                (50 + 112) / 506][Stage 5:=======>                                              (67 + 112) / 506][Stage 5:==========>                                           (95 + 112) / 506][Stage 5:=============>                                       (125 + 112) / 506][Stage 5:===============>                                     (147 + 112) / 506][Stage 5:=================>                                   (168 + 112) / 506][Stage 5:===================>                                 (186 + 112) / 506][Stage 5:=====================>                               (208 + 112) / 506][Stage 5:=======================>                             (226 + 112) / 506][Stage 5:=========================>                           (241 + 112) / 506][Stage 5:===========================>                         (262 + 112) / 506][Stage 5:=============================>                       (279 + 112) / 506][Stage 5:================================>                    (307 + 112) / 506][Stage 5:==================================>                  (331 + 112) / 506][Stage 5:======================================>              (363 + 112) / 506][Stage 5:========================================>            (390 + 112) / 506][Stage 5:============================================>         (416 + 90) / 506][Stage 5:=============================================>        (428 + 78) / 506][Stage 5:===============================================>      (448 + 58) / 506][Stage 5:=================================================>    (465 + 41) / 506][Stage 5:===================================================>  (478 + 28) / 506][Stage 5:====================================================> (488 + 18) / 506][Stage 5:====================================================> (493 + 13) / 506][Stage 5:======================================================>(499 + 7) / 506][Stage 5:======================================================>(500 + 6) / 506][Stage 5:======================================================>(503 + 3) / 506]                                                                                [Stage 6:==>                                                   (22 + 112) / 507][Stage 6:===>                                                  (35 + 112) / 507][Stage 6:=====>                                                (53 + 112) / 507][Stage 6:=======>                                              (72 + 112) / 507][Stage 6:==========>                                           (97 + 112) / 507][Stage 6:===========>                                         (111 + 112) / 507][Stage 6:==============>                                      (141 + 112) / 507][Stage 6:==================>                                  (174 + 112) / 507][Stage 6:===================>                                 (190 + 112) / 507][Stage 6:=====================>                               (208 + 112) / 507][Stage 6:========================>                            (232 + 112) / 507][Stage 6:=========================>                           (246 + 112) / 507][Stage 6:===========================>                         (262 + 112) / 507][Stage 6:==============================>                      (289 + 112) / 507][Stage 6:================================>                    (309 + 112) / 507][Stage 6:====================================>                (345 + 112) / 507][Stage 6:======================================>              (373 + 112) / 507][Stage 6:=========================================>           (398 + 109) / 507][Stage 6:============================================>         (421 + 86) / 507][Stage 6:==============================================>       (437 + 70) / 507][Stage 6:===============================================>      (449 + 58) / 507][Stage 6:==================================================>   (470 + 37) / 507][Stage 6:===================================================>  (486 + 21) / 507][Stage 6:====================================================> (491 + 16) / 507][Stage 6:====================================================> (496 + 11) / 507][Stage 6:======================================================>(501 + 6) / 507][Stage 6:======================================================>(504 + 3) / 507][Stage 6:======================================================>(505 + 2) / 507][Stage 6:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.040085219 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:=>                                                    (10 + 112) / 506][Stage 7:==>                                                   (23 + 112) / 506][Stage 7:===>                                                  (36 + 112) / 506][Stage 7:=====>                                                (51 + 112) / 506][Stage 7:========>                                             (79 + 112) / 506][Stage 7:==========>                                           (96 + 112) / 506][Stage 7:============>                                        (121 + 112) / 506][Stage 7:================>                                    (159 + 112) / 506][Stage 7:==================>                                  (180 + 112) / 506][Stage 7:====================>                                (192 + 112) / 506][Stage 7:=====================>                               (210 + 112) / 506][Stage 7:========================>                            (230 + 112) / 506][Stage 7:=========================>                           (247 + 112) / 506][Stage 7:============================>                        (268 + 112) / 506][Stage 7:==============================>                      (289 + 112) / 506][Stage 7:=================================>                   (319 + 112) / 506][Stage 7:====================================>                (346 + 112) / 506][Stage 7:=======================================>             (373 + 112) / 506][Stage 7:=========================================>           (399 + 107) / 506][Stage 7:=============================================>        (429 + 77) / 506][Stage 7:================================================>     (455 + 51) / 506][Stage 7:=================================================>    (468 + 38) / 506][Stage 7:===================================================>  (485 + 21) / 506][Stage 7:====================================================> (492 + 14) / 506][Stage 7:====================================================> (496 + 10) / 506][Stage 7:======================================================>(498 + 8) / 506][Stage 7:======================================================>(502 + 4) / 506][Stage 7:======================================================>(504 + 2) / 506]                                                                                [Stage 8:==>                                                   (22 + 112) / 507][Stage 8:===>                                                  (36 + 112) / 507][Stage 8:=====>                                                (52 + 112) / 507][Stage 8:=======>                                              (72 + 112) / 507][Stage 8:==========>                                          (100 + 112) / 507][Stage 8:=============>                                       (127 + 112) / 507][Stage 8:===============>                                     (148 + 112) / 507][Stage 8:=================>                                   (164 + 112) / 507][Stage 8:===================>                                 (186 + 112) / 507][Stage 8:======================>                              (215 + 112) / 507][Stage 8:========================>                            (235 + 112) / 507][Stage 8:==========================>                          (254 + 112) / 507][Stage 8:===========================>                         (267 + 112) / 507][Stage 8:==============================>                      (290 + 112) / 507][Stage 8:================================>                    (311 + 112) / 507][Stage 8:===================================>                 (336 + 113) / 507][Stage 8:======================================>              (370 + 112) / 507][Stage 8:=========================================>           (395 + 112) / 507][Stage 8:============================================>         (420 + 87) / 507][Stage 8:==============================================>       (439 + 68) / 507][Stage 8:================================================>     (453 + 54) / 507][Stage 8:==================================================>   (472 + 35) / 507][Stage 8:===================================================>  (485 + 22) / 507][Stage 8:====================================================> (495 + 12) / 507][Stage 8:====================================================> (497 + 10) / 507][Stage 8:======================================================>(499 + 8) / 507][Stage 8:======================================================>(503 + 4) / 507][Stage 8:======================================================>(504 + 3) / 507][Stage 8:======================================================>(505 + 2) / 507][Stage 8:======================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.402349031 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:=>                                                    (10 + 112) / 506][Stage 9:==>                                                   (27 + 112) / 506][Stage 9:====>                                                 (43 + 112) / 506][Stage 9:======>                                               (59 + 112) / 506][Stage 9:=========>                                            (86 + 112) / 506][Stage 9:===========>                                         (106 + 112) / 506][Stage 9:=============>                                       (128 + 112) / 506][Stage 9:================>                                    (153 + 112) / 506][Stage 9:==================>                                  (172 + 112) / 506][Stage 9:===================>                                 (189 + 112) / 506][Stage 9:======================>                              (213 + 112) / 506][Stage 9:========================>                            (231 + 112) / 506][Stage 9:==========================>                          (250 + 112) / 506][Stage 9:============================>                        (270 + 112) / 506][Stage 9:==============================>                      (292 + 112) / 506][Stage 9:================================>                    (314 + 112) / 506][Stage 9:====================================>                (344 + 112) / 506][Stage 9:=======================================>             (376 + 112) / 506][Stage 9:==========================================>          (402 + 104) / 506][Stage 9:=============================================>        (424 + 82) / 506][Stage 9:================================================>     (450 + 56) / 506][Stage 9:=================================================>    (464 + 42) / 506][Stage 9:===================================================>  (484 + 22) / 506][Stage 9:====================================================> (491 + 15) / 506][Stage 9:====================================================> (494 + 12) / 506][Stage 9:======================================================>(499 + 7) / 506][Stage 9:======================================================>(500 + 6) / 506][Stage 9:======================================================>(501 + 5) / 506][Stage 9:======================================================>(502 + 4) / 506][Stage 9:======================================================>(503 + 3) / 506][Stage 9:======================================================>(505 + 1) / 506]                                                                                [Stage 10:=>                                                   (17 + 112) / 507][Stage 10:===>                                                 (30 + 112) / 507][Stage 10:====>                                                (46 + 112) / 507][Stage 10:=======>                                             (71 + 113) / 507][Stage 10:==========>                                          (96 + 112) / 507][Stage 10:============>                                       (118 + 112) / 507][Stage 10:==============>                                     (139 + 112) / 507][Stage 10:=================>                                  (170 + 112) / 507][Stage 10:===================>                                (186 + 112) / 507][Stage 10:====================>                               (204 + 112) / 507][Stage 10:=======================>                            (226 + 112) / 507][Stage 10:========================>                           (241 + 112) / 507][Stage 10:==========================>                         (254 + 112) / 507][Stage 10:=============================>                      (284 + 112) / 507][Stage 10:===============================>                    (303 + 112) / 507][Stage 10:=================================>                  (326 + 112) / 507][Stage 10:====================================>               (353 + 113) / 507][Stage 10:======================================>             (380 + 113) / 507][Stage 10:===========================================>         (415 + 92) / 507][Stage 10:=============================================>       (432 + 75) / 507][Stage 10:==============================================>      (448 + 59) / 507][Stage 10:================================================>    (464 + 43) / 507][Stage 10:==================================================>  (480 + 27) / 507][Stage 10:===================================================> (489 + 18) / 507][Stage 10:===================================================> (495 + 12) / 507][Stage 10:=====================================================>(498 + 9) / 507][Stage 10:=====================================================>(501 + 6) / 507][Stage 10:=====================================================>(502 + 5) / 507][Stage 10:=====================================================>(504 + 3) / 507][Stage 10:=====================================================>(506 + 1) / 507]                                                                                Time elapsed: 14.645610323 seconds

scala> 

scala> 

scala> :quit
17/04/24 11:25:38 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
57.9 G  /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt
