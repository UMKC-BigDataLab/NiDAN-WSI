Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/04/24 11:29:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:29:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:29:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:29:19 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/04/24 11:29:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/04/24 11:29:32 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170424112921-0090).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> //spark-shell --master spark://ctl:7077 --driver-memory 28G  --executor-memory 28G  --executor-cores  8  --num-executors 16  --conf spark.io.compression.codec=lzf  --conf spark.akka.frameSize=1024  --conf spark .driver.maxResultSize=2g

scala> 

scala> 

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadSqlContext = "#LOAD_SQL_CONTEXT "
loadSqlContext: String = "#LOAD_SQL_CONTEXT "

scala> val dataSource = "/nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt"
dataSource: String = /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Unit = <function1>

scala> 

scala> val queries = List(
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 a nd imageId = '1.svs'",1),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 a nd imageId = '1.svs'",2),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 a nd imageId = '1.svs'",4),
     | ("SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 a nd imageId = '1.svs'",8)
     | )
queries: List[(String, Int)] = List((SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs',1), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs',2), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs',4), (SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs',8))

scala> 

scala> 

scala> val sqlContext = show_timing{new org.apache.spark.sql.SQLContext(sc)}
warning: there was one deprecation warning; re-run with -deprecation for details
Time elapsed: 0.001236646 seconds
sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@664217a8

scala> val pf = show_timing{sqlContext.read.parquet(dataSource)}
Time elapsed: 7.497245577 seconds
pf: org.apache.spark.sql.DataFrame = [imageId: string, imageLevel: int ... 8 more fields]

scala> show_timing{pf.createOrReplaceTempView("data")}
Time elapsed: 0.780375488 seconds

scala> 

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (byt es, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 1:>                                                      (0 + 112) / 593][Stage 1:>                                                      (2 + 112) / 593][Stage 1:>                                                      (4 + 112) / 593][Stage 1:>                                                      (7 + 112) / 593][Stage 1:>                                                      (8 + 112) / 593][Stage 1:=>                                                    (13 + 112) / 593][Stage 1:=>                                                    (14 + 112) / 593][Stage 1:=>                                                    (15 + 112) / 593][Stage 1:=>                                                    (17 + 112) / 593][Stage 1:=>                                                    (18 + 112) / 593][Stage 1:==>                                                   (30 + 112) / 593][Stage 1:====>                                                 (47 + 112) / 593][Stage 1:=======>                                              (84 + 112) / 593][Stage 1:==========>                                          (121 + 112) / 593][Stage 1:===========>                                         (133 + 112) / 593][Stage 1:=============>                                       (148 + 112) / 593][Stage 1:==============>                                      (157 + 112) / 593][Stage 1:================>                                    (187 + 112) / 593][Stage 1:==================>                                  (202 + 112) / 593][Stage 1:===================>                                 (214 + 112) / 593][Stage 1:====================>                                (228 + 112) / 593][Stage 1:=====================>                               (246 + 112) / 593][Stage 1:=======================>                             (263 + 112) / 593][Stage 1:========================>                            (279 + 112) / 593][Stage 1:==========================>                          (296 + 112) / 593][Stage 1:===========================>                         (312 + 112) / 593][Stage 1:=============================>                       (325 + 112) / 593][Stage 1:==============================>                      (344 + 112) / 593][Stage 1:================================>                    (361 + 112) / 593][Stage 1:=================================>                   (380 + 112) / 593][Stage 1:====================================>                (406 + 112) / 593][Stage 1:======================================>              (434 + 112) / 593][Stage 1:=========================================>           (460 + 112) / 593][Stage 1:===========================================>         (483 + 110) / 593][Stage 1:=============================================>        (505 + 88) / 593][Stage 1:===============================================>      (522 + 71) / 593][Stage 1:=================================================>    (545 + 48) / 593][Stage 1:==================================================>   (559 + 34) / 593][Stage 1:===================================================>  (568 + 25) / 593][Stage 1:====================================================> (573 + 20) / 593][Stage 1:====================================================> (581 + 12) / 593][Stage 1:======================================================>(584 + 9) / 593][Stage 1:======================================================>(587 + 6) / 593][Stage 1:======================================================>(588 + 5) / 593][Stage 1:======================================================>(589 + 4) / 593][Stage 1:======================================================>(591 + 2) / 593][Stage 1:======================================================>(592 + 1) / 593]                                                                                [Stage 2:=>                                                    (17 + 112) / 594][Stage 2:===>                                                  (33 + 112) / 594][Stage 2:====>                                                 (47 + 112) / 594][Stage 2:=====>                                                (55 + 112) / 594][Stage 2:=======>                                              (77 + 112) / 594][Stage 2:========>                                             (98 + 112) / 594][Stage 2:==========>                                          (120 + 112) / 594][Stage 2:=============>                                       (151 + 112) / 594][Stage 2:===============>                                     (169 + 112) / 594][Stage 2:================>                                    (188 + 112) / 594][Stage 2:==================>                                  (210 + 112) / 594][Stage 2:====================>                                (226 + 112) / 594][Stage 2:======================>                              (249 + 112) / 594][Stage 2:========================>                            (270 + 112) / 594][Stage 2:=========================>                           (290 + 112) / 594][Stage 2:===========================>                         (310 + 112) / 594][Stage 2:=============================>                       (333 + 112) / 594][Stage 2:===============================>                     (352 + 112) / 594][Stage 2:=================================>                   (370 + 112) / 594][Stage 2:===================================>                 (402 + 112) / 594][Stage 2:======================================>              (432 + 112) / 594][Stage 2:=========================================>           (463 + 113) / 594][Stage 2:=============================================>        (499 + 95) / 594][Stage 2:==============================================>       (516 + 78) / 594][Stage 2:================================================>     (537 + 57) / 594][Stage 2:==================================================>   (556 + 38) / 594][Stage 2:===================================================>  (566 + 28) / 594][Stage 2:====================================================> (574 + 20) / 594][Stage 2:====================================================> (580 + 14) / 594][Stage 2:======================================================>(585 + 9) / 594][Stage 2:======================================================>(586 + 8) / 594][Stage 2:======================================================>(590 + 4) / 594][Stage 2:======================================================>(591 + 3) / 594][Stage 2:======================================================>(592 + 2) / 594][Stage 2:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 23.348127747 seconds
res1: Int = 0

scala> 

scala> for (query <- queries){
     | println(s">> Running query: ${query._1}")
     | show_timing{sqlContext.sql(query._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, i ndex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
     | }
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=1 and imageLevel = 0 and imageId = '1.svs'
[Stage 3:=>                                                    (18 + 112) / 593][Stage 3:==>                                                   (31 + 112) / 593][Stage 3:===>                                                  (41 + 112) / 593][Stage 3:=====>                                                (60 + 112) / 593][Stage 3:=======>                                              (77 + 112) / 593][Stage 3:=========>                                           (102 + 112) / 593][Stage 3:===========>                                         (127 + 112) / 593][Stage 3:=============>                                       (148 + 112) / 593][Stage 3:===============>                                     (178 + 112) / 593][Stage 3:=================>                                   (199 + 112) / 593][Stage 3:===================>                                 (218 + 112) / 593][Stage 3:=====================>                               (235 + 112) / 593][Stage 3:======================>                              (254 + 112) / 593][Stage 3:========================>                            (278 + 113) / 593][Stage 3:==========================>                          (298 + 112) / 593][Stage 3:============================>                        (321 + 112) / 593][Stage 3:==============================>                      (344 + 112) / 593][Stage 3:================================>                    (366 + 112) / 593][Stage 3:===================================>                 (398 + 112) / 593][Stage 3:======================================>              (432 + 112) / 593][Stage 3:=========================================>           (466 + 112) / 593][Stage 3:===========================================>         (492 + 101) / 593][Stage 3:==============================================>       (508 + 85) / 593][Stage 3:================================================>     (537 + 56) / 593][Stage 3:==================================================>   (554 + 39) / 593][Stage 3:===================================================>  (568 + 25) / 593][Stage 3:====================================================> (572 + 21) / 593][Stage 3:====================================================> (579 + 14) / 593][Stage 3:======================================================>(587 + 6) / 593][Stage 3:======================================================>(588 + 5) / 593][Stage 3:======================================================>(590 + 3) / 593][Stage 3:======================================================>(591 + 2) / 593]                                                                                [Stage 4:==>                                                   (23 + 112) / 594][Stage 4:===>                                                  (39 + 112) / 594][Stage 4:=====>                                                (55 + 112) / 594][Stage 4:======>                                               (72 + 112) / 594][Stage 4:========>                                             (93 + 112) / 594][Stage 4:==========>                                          (118 + 112) / 594][Stage 4:============>                                        (143 + 112) / 594][Stage 4:===============>                                     (172 + 112) / 594][Stage 4:=================>                                   (193 + 112) / 594][Stage 4:===================>                                 (213 + 112) / 594][Stage 4:====================>                                (233 + 112) / 594][Stage 4:======================>                              (257 + 112) / 594][Stage 4:========================>                            (275 + 112) / 594][Stage 4:==========================>                          (295 + 112) / 594][Stage 4:===========================>                         (311 + 112) / 594][Stage 4:==============================>                      (340 + 112) / 594][Stage 4:================================>                    (367 + 112) / 594][Stage 4:==================================>                  (387 + 112) / 594][Stage 4:=====================================>               (420 + 113) / 594][Stage 4:========================================>            (452 + 112) / 594][Stage 4:===========================================>         (489 + 105) / 594][Stage 4:===============================================>      (518 + 76) / 594][Stage 4:================================================>     (536 + 58) / 594][Stage 4:==================================================>   (553 + 41) / 594][Stage 4:===================================================>  (563 + 31) / 594][Stage 4:===================================================>  (571 + 23) / 594][Stage 4:====================================================> (577 + 17) / 594][Stage 4:=====================================================>(584 + 10) / 594][Stage 4:======================================================>(588 + 6) / 594][Stage 4:======================================================>(590 + 4) / 594][Stage 4:======================================================>(591 + 3) / 594][Stage 4:======================================================>(592 + 2) / 594][Stage 4:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 15.277023914 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=2 and imageLevel = 0 and imageId = '1.svs'
[Stage 5:=>                                                    (16 + 112) / 593][Stage 5:==>                                                   (31 + 112) / 593][Stage 5:====>                                                 (51 + 112) / 593][Stage 5:======>                                               (74 + 112) / 593][Stage 5:=========>                                           (103 + 112) / 593][Stage 5:==========>                                          (122 + 112) / 593][Stage 5:=============>                                       (148 + 112) / 593][Stage 5:==============>                                      (165 + 112) / 593][Stage 5:================>                                    (185 + 112) / 593][Stage 5:==================>                                  (208 + 112) / 593][Stage 5:====================>                                (227 + 112) / 593][Stage 5:======================>                              (254 + 112) / 593][Stage 5:========================>                            (278 + 112) / 593][Stage 5:==========================>                          (296 + 112) / 593][Stage 5:============================>                        (318 + 113) / 593][Stage 5:==============================>                      (342 + 112) / 593][Stage 5:=================================>                   (370 + 112) / 593][Stage 5:===================================>                 (398 + 112) / 593][Stage 5:======================================>              (432 + 112) / 593][Stage 5:=========================================>           (463 + 112) / 593][Stage 5:=============================================>        (499 + 94) / 593][Stage 5:===============================================>      (527 + 66) / 593][Stage 5:=================================================>    (543 + 50) / 593][Stage 5:===================================================>  (564 + 29) / 593][Stage 5:====================================================> (572 + 21) / 593][Stage 5:====================================================> (580 + 13) / 593][Stage 5:======================================================>(585 + 8) / 593][Stage 5:======================================================>(588 + 5) / 593][Stage 5:======================================================>(589 + 4) / 593][Stage 5:======================================================>(590 + 3) / 593][Stage 5:======================================================>(591 + 2) / 593][Stage 5:======================================================>(592 + 1) / 593]                                                                                [Stage 6:===>                                                  (35 + 112) / 594][Stage 6:====>                                                 (51 + 112) / 594][Stage 6:=======>                                              (78 + 112) / 594][Stage 6:========>                                            (100 + 112) / 594][Stage 6:==========>                                          (121 + 112) / 594][Stage 6:=============>                                       (151 + 112) / 594][Stage 6:===============>                                     (176 + 112) / 594][Stage 6:=================>                                   (197 + 112) / 594][Stage 6:===================>                                 (219 + 112) / 594][Stage 6:======================>                              (247 + 112) / 594][Stage 6:========================>                            (274 + 112) / 594][Stage 6:==========================>                          (293 + 112) / 594][Stage 6:============================>                        (318 + 112) / 594][Stage 6:=============================>                       (335 + 112) / 594][Stage 6:================================>                    (359 + 112) / 594][Stage 6:==================================>                  (389 + 112) / 594][Stage 6:=====================================>               (420 + 112) / 594][Stage 6:========================================>            (452 + 112) / 594][Stage 6:===========================================>         (488 + 106) / 594][Stage 6:==============================================>       (507 + 87) / 594][Stage 6:===============================================>      (527 + 67) / 594][Stage 6:=================================================>    (540 + 54) / 594][Stage 6:==================================================>   (557 + 37) / 594][Stage 6:===================================================>  (563 + 31) / 594][Stage 6:====================================================> (576 + 18) / 594][Stage 6:====================================================> (582 + 12) / 594][Stage 6:=====================================================>(583 + 11) / 594][Stage 6:======================================================>(585 + 9) / 594][Stage 6:======================================================>(589 + 5) / 594][Stage 6:======================================================>(591 + 3) / 594][Stage 6:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 14.867784241 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=4 and imageLevel = 0 and imageId = '1.svs'
[Stage 7:=>                                                    (13 + 112) / 593][Stage 7:==>                                                   (30 + 112) / 593][Stage 7:====>                                                 (50 + 112) / 593][Stage 7:=====>                                                (65 + 112) / 593][Stage 7:========>                                             (93 + 112) / 593][Stage 7:===========>                                         (127 + 112) / 593][Stage 7:=============>                                       (147 + 112) / 593][Stage 7:===============>                                     (176 + 112) / 593][Stage 7:=================>                                   (192 + 112) / 593][Stage 7:==================>                                  (207 + 112) / 593][Stage 7:=====================>                               (236 + 112) / 593][Stage 7:=======================>                             (263 + 112) / 593][Stage 7:==========================>                          (291 + 112) / 593][Stage 7:===========================>                         (305 + 112) / 593][Stage 7:=============================>                       (335 + 112) / 593][Stage 7:===============================>                     (356 + 112) / 593][Stage 7:==================================>                  (384 + 112) / 593][Stage 7:======================================>              (427 + 112) / 593][Stage 7:========================================>            (456 + 112) / 593][Stage 7:===========================================>         (492 + 101) / 593][Stage 7:==============================================>       (516 + 77) / 593][Stage 7:================================================>     (538 + 55) / 593][Stage 7:==================================================>   (554 + 39) / 593][Stage 7:===================================================>  (566 + 27) / 593][Stage 7:====================================================> (574 + 19) / 593][Stage 7:====================================================> (582 + 11) / 593][Stage 7:======================================================>(586 + 7) / 593][Stage 7:======================================================>(589 + 4) / 593][Stage 7:======================================================>(590 + 3) / 593][Stage 7:======================================================>(591 + 2) / 593]                                                                                [Stage 8:===>                                                  (37 + 112) / 594][Stage 8:====>                                                 (53 + 112) / 594][Stage 8:======>                                               (76 + 112) / 594][Stage 8:=========>                                           (106 + 112) / 594][Stage 8:===========>                                         (127 + 113) / 594][Stage 8:=============>                                       (148 + 112) / 594][Stage 8:===============>                                     (176 + 112) / 594][Stage 8:================>                                    (187 + 112) / 594][Stage 8:===================>                                 (214 + 112) / 594][Stage 8:=====================>                               (240 + 112) / 594][Stage 8:========================>                            (270 + 112) / 594][Stage 8:==========================>                          (295 + 112) / 594][Stage 8:===========================>                         (312 + 112) / 594][Stage 8:=============================>                       (335 + 112) / 594][Stage 8:===============================>                     (354 + 112) / 594][Stage 8:==================================>                  (388 + 112) / 594][Stage 8:====================================>                (411 + 112) / 594][Stage 8:=======================================>             (447 + 112) / 594][Stage 8:==========================================>          (473 + 113) / 594][Stage 8:==============================================>       (507 + 87) / 594][Stage 8:===============================================>      (525 + 69) / 594][Stage 8:=================================================>    (543 + 51) / 594][Stage 8:==================================================>   (559 + 35) / 594][Stage 8:===================================================>  (569 + 25) / 594][Stage 8:====================================================> (577 + 17) / 594][Stage 8:====================================================> (582 + 12) / 594][Stage 8:======================================================>(586 + 8) / 594][Stage 8:======================================================>(589 + 5) / 594][Stage 8:======================================================>(591 + 3) / 594][Stage 8:======================================================>(592 + 2) / 594][Stage 8:======================================================>(593 + 1) / 594]                                                                                Time elapsed: 14.672664731 seconds
>> Running query: SELECT imageBytes from data where partitionZIndex >= 1 and partitionZIndex <=8 and imageLevel = 0 and imageId = '1.svs'
[Stage 9:==>                                                   (24 + 112) / 593][Stage 9:====>                                                 (44 + 112) / 593][Stage 9:=====>                                                (58 + 112) / 593][Stage 9:======>                                               (75 + 112) / 593][Stage 9:========>                                            (100 + 112) / 593][Stage 9:===========>                                         (126 + 112) / 593][Stage 9:=============>                                       (155 + 112) / 593][Stage 9:===============>                                     (178 + 112) / 593][Stage 9:==================>                                  (206 + 112) / 593][Stage 9:====================>                                (226 + 112) / 593][Stage 9:======================>                              (248 + 112) / 593][Stage 9:========================>                            (271 + 112) / 593][Stage 9:=========================>                           (290 + 112) / 593][Stage 9:===========================>                         (304 + 112) / 593][Stage 9:=============================>                       (328 + 112) / 593][Stage 9:================================>                    (359 + 112) / 593][Stage 9:=================================>                   (380 + 114) / 593][Stage 9:====================================>                (412 + 112) / 593][Stage 9:========================================>            (452 + 112) / 593][Stage 9:==========================================>          (479 + 112) / 593][Stage 9:==============================================>       (509 + 84) / 593][Stage 9:================================================>     (530 + 63) / 593][Stage 9:=================================================>    (548 + 45) / 593][Stage 9:==================================================>   (560 + 33) / 593][Stage 9:====================================================> (577 + 16) / 593][Stage 9:====================================================> (580 + 13) / 593][Stage 9:======================================================>(587 + 6) / 593][Stage 9:======================================================>(589 + 4) / 593][Stage 9:======================================================>(590 + 3) / 593][Stage 9:======================================================>(592 + 1) / 593]                                                                                [Stage 10:=>                                                   (17 + 112) / 594][Stage 10:==>                                                  (33 + 112) / 594][Stage 10:====>                                                (47 + 112) / 594][Stage 10:======>                                              (76 + 112) / 594][Stage 10:========>                                            (94 + 112) / 594][Stage 10:=========>                                          (113 + 112) / 594][Stage 10:============>                                       (143 + 112) / 594][Stage 10:==============>                                     (165 + 112) / 594][Stage 10:================>                                   (187 + 112) / 594][Stage 10:==================>                                 (206 + 112) / 594][Stage 10:====================>                               (233 + 112) / 594][Stage 10:======================>                             (259 + 113) / 594][Stage 10:========================>                           (277 + 113) / 594][Stage 10:=========================>                          (296 + 112) / 594][Stage 10:===========================>                        (314 + 112) / 594][Stage 10:=============================>                      (335 + 112) / 594][Stage 10:===============================>                    (359 + 112) / 594][Stage 10:=================================>                  (384 + 112) / 594][Stage 10:===================================>                (411 + 112) / 594][Stage 10:======================================>             (444 + 112) / 594][Stage 10:==========================================>         (481 + 113) / 594][Stage 10:=============================================>       (510 + 84) / 594][Stage 10:===============================================>     (530 + 64) / 594][Stage 10:================================================>    (547 + 47) / 594][Stage 10:==================================================>  (567 + 27) / 594][Stage 10:===================================================> (575 + 19) / 594][Stage 10:====================================================>(584 + 10) / 594][Stage 10:=====================================================>(587 + 7) / 594][Stage 10:=====================================================>(589 + 5) / 594][Stage 10:=====================================================>(590 + 4) / 594][Stage 10:=====================================================>(591 + 3) / 594][Stage 10:=====================================================>(592 + 2) / 594][Stage 10:=====================================================>(593 + 1) / 594]                                                                                Time elapsed: 15.971971749 seconds

scala> 

scala> 

scala> :quit
17/04/24 11:31:23 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
67.2 G  /nidan/parquet/Slides-uncompressed-256-ZINDEX.prqt
